// src/index.ts
import { definePreset } from "@pandacss/dev";

// src/conditions.ts
var conditions = {
  extend: {
    collapsed: '&:is([aria-collapsed=true], [data-collapsed], [data-state="collapsed"])',
    current: "&:is([data-current])",
    hidden: "&:is([hidden])",
    hover: ["@media (hover: hover) and (pointer: fine)", "&:is(:hover, [data-hover])"],
    indeterminate: "&:is(:indeterminate, [data-indeterminate], [aria-checked=mixed], [data-state=indeterminate])",
    off: '&:is([data-state="off"])',
    on: '&:is([data-state="on"])',
    today: "&:is([data-today])",
    underValue: '&:is([data-state="under-value"])',
    dark: ".dark &",
    light: ":root &, .light &",
    invalid: "&:is([aria-invalid])"
  }
};

// src/global-css.ts
import { defineGlobalStyles } from "@pandacss/dev";
var globalCss = defineGlobalStyles({
  html: {
    lineHeight: 1.5,
    MozOsxFontSmoothing: "grayscale",
    textRendering: "optimizeLegibility",
    WebkitFontSmoothing: "antialiased",
    WebkitTextSizeAdjust: "100%"
  },
  body: {
    background: "bg.canvas",
    color: "fg.default",
    _dark: {
      colorScheme: "dark"
    }
  },
  "*, *::before, *::after": {
    borderColor: "border.subtle",
    borderStyle: "solid",
    boxSizing: "border-box"
  },
  "*::placeholder": {
    opacity: 1,
    color: "fg.subtle"
  },
  "*::selection": {
    bg: "accent.a4"
  }
});

// src/theme/breakpoints.ts
var breakpoints = {
  sm: "640px",
  md: "768px",
  lg: "1024px",
  xl: "1280px",
  "2xl": "1536px"
};

// src/theme/keyframes.ts
import { defineKeyframes } from "@pandacss/dev";
var keyframes = defineKeyframes({
  "fade-in": {
    from: { opacity: "0" },
    to: { opacity: "1" }
  },
  "fade-out": {
    from: { opacity: "1" },
    to: { opacity: "0" }
  },
  "slide-in": {
    "0%": { opacity: "0", transform: "translateY(64px)" },
    "100%": { opacity: "1", transform: "translateY(0)" }
  },
  "slide-out": {
    "0%": { opacity: "1", transform: "translateY(0)" },
    "100%": { opacity: "0", transform: "translateY(64px)" }
  },
  "slide-in-left": {
    "0%": { transform: "translateX(-100%)" },
    "100%": { transform: "translateX(0%)" }
  },
  "slide-out-left": {
    "0%": { transform: "translateX(0%)" },
    "100%": { transform: "translateX(-100%)" }
  },
  "slide-in-right": {
    "0%": { transform: "translateX(100%)" },
    "100%": { transform: "translateX(0%)" }
  },
  "slide-out-right": {
    "0%": { transform: "translateX(0%)" },
    "100%": { transform: "translateX(100%)" }
  },
  "collapse-in": {
    "0%": { height: "0" },
    "100%": { height: "var(--height)" }
  },
  "collapse-out": {
    "0%": { height: "var(--height)" },
    "100%": { height: "0" }
  },
  fadeIn: {
    "0%": { opacity: "0", transform: "translateY(-4px)" },
    "100%": { opacity: "1", transform: "translateY(0)" }
  },
  fadeOut: {
    "0%": { opacity: "1", transform: "translateY(0)" },
    "100%": { opacity: "0", transform: "translateY(-4px)" }
  },
  "skeleton-pulse": {
    "50%": { opacity: "0.5" }
  },
  spin: {
    "0%": { transform: "rotate(0deg)" },
    "100%": { transform: "rotate(360deg)" }
  }
});

// src/theme/recipes/accordion.ts
import { accordionAnatomy } from "@ark-ui/anatomy";
import { defineSlotRecipe } from "@pandacss/dev";
var accordion = defineSlotRecipe({
  className: "accordion",
  slots: accordionAnatomy.keys(),
  base: {
    root: {
      divideY: "1px",
      width: "full",
      borderTopWidth: "1px",
      borderBottomWidth: "1px"
    },
    itemTrigger: {
      alignItems: "center",
      color: "fg.default",
      cursor: "pointer",
      display: "flex",
      fontWeight: "semibold",
      gap: "3",
      justifyContent: "space-between",
      textStyle: "lg",
      textAlign: "left",
      width: "full",
      _disabled: {
        color: "fg.disabled",
        cursor: "not-allowed"
      }
    },
    itemIndicator: {
      color: "fg.muted",
      transformOrigin: "center",
      transitionDuration: "normal",
      transitionProperty: "transform",
      transitionTimingFunction: "default",
      _open: {
        transform: "rotate(-180deg)"
      }
    },
    itemContent: {
      color: "fg.muted",
      overflow: "hidden",
      transitionProperty: "padding-bottom",
      transitionDuration: "normal",
      transitionTimingFunction: "default",
      _open: {
        animation: "collapse-in"
      },
      _closed: {
        animation: "collapse-out"
      }
    }
  },
  defaultVariants: {
    size: "md"
  },
  variants: {
    size: {
      md: {
        itemTrigger: {
          py: "4"
        },
        itemContent: {
          pb: "6",
          pr: "8",
          _closed: {
            pb: "0"
          }
        }
      }
    }
  }
});

// src/theme/recipes/alert.ts
import { defineSlotRecipe as defineSlotRecipe2 } from "@pandacss/dev";
var alert = defineSlotRecipe2({
  className: "alert",
  slots: ["root", "content", "description", "icon", "title"],
  base: {
    root: {
      background: "bg.default",
      borderWidth: "1px",
      borderRadius: "l3",
      display: "flex",
      gap: "3",
      p: "4",
      width: "full"
    },
    content: {
      display: "flex",
      flexDirection: "column",
      gap: "1"
    },
    description: {
      color: "fg.muted",
      textStyle: "sm"
    },
    icon: {
      color: "fg.default",
      flexShrink: "0",
      width: "5",
      height: "5"
    },
    title: {
      color: "fg.default",
      fontWeight: "semibold",
      textStyle: "sm"
    }
  }
});

// src/theme/recipes/avatar.ts
import { avatarAnatomy } from "@ark-ui/anatomy";
import { defineSlotRecipe as defineSlotRecipe3 } from "@pandacss/dev";
var avatar = defineSlotRecipe3({
  className: "avatar",
  slots: avatarAnatomy.keys(),
  base: {
    root: {
      borderRadius: "full",
      flexShrink: 0,
      overflow: "hidden"
    },
    fallback: {
      alignItems: "center",
      background: "bg.subtle",
      borderRadius: "full",
      borderWidth: "1px",
      color: "fg.default",
      display: "flex",
      fontWeight: "semibold",
      height: "inherit",
      justifyContent: "center",
      _hidden: {
        display: "none"
      }
    },
    image: {
      objectFit: "cover"
    }
  },
  defaultVariants: {
    size: "md"
  },
  variants: {
    size: {
      xs: {
        root: {
          height: "8",
          width: "8"
        },
        image: {
          height: "8",
          width: "8"
        },
        fallback: {
          textStyle: "xs",
          "& svg": {
            width: "4",
            height: "4"
          }
        }
      },
      sm: {
        root: {
          height: "9",
          width: "9"
        },
        image: {
          height: "9",
          width: "9"
        },
        fallback: {
          textStyle: "sm",
          "& svg": {
            width: "4",
            height: "4"
          }
        }
      },
      md: {
        root: {
          height: "10",
          width: "10"
        },
        image: {
          height: "10",
          width: "10"
        },
        fallback: {
          textStyle: "md",
          "& svg": {
            width: "5",
            height: "5"
          }
        }
      },
      lg: {
        root: {
          height: "11",
          width: "11"
        },
        image: {
          height: "11",
          width: "11"
        },
        fallback: {
          textStyle: "lg",
          "& svg": {
            width: "6",
            height: "6"
          }
        }
      },
      xl: {
        root: {
          height: "12",
          width: "12"
        },
        image: {
          height: "12",
          width: "12"
        },
        fallback: {
          textStyle: "xl",
          "& svg": {
            width: "7",
            height: "7"
          }
        }
      },
      "2xl": {
        root: {
          height: "16",
          width: "16"
        },
        image: {
          height: "16",
          width: "16"
        },
        fallback: {
          textStyle: "2xl",
          "& svg": {
            width: "8",
            height: "8"
          }
        }
      }
    }
  }
});

// src/theme/recipes/badge.ts
import { defineRecipe } from "@pandacss/dev";
var badge = defineRecipe({
  className: "badge",
  base: {
    alignItems: "center",
    borderRadius: "full",
    colorPalette: "accent",
    display: "inline-flex",
    fontWeight: "medium",
    userSelect: "none",
    whiteSpace: "nowrap"
  },
  defaultVariants: {
    variant: "subtle",
    size: "md"
  },
  variants: {
    variant: {
      solid: {
        background: "colorPalette.default",
        color: "colorPalette.fg"
      },
      subtle: {
        background: "bg.subtle",
        borderColor: "border.subtle",
        borderWidth: "1px",
        color: "fg.default",
        "& svg": {
          color: "fg.muted"
        }
      },
      outline: {
        color: "fg.default",
        borderWidth: "2px",
        borderColor: "border.default"
      }
    },
    size: {
      sm: {
        textStyle: "xs",
        px: "2",
        h: "5",
        gap: "1",
        "& svg": {
          width: "3",
          height: "3"
        }
      },
      md: {
        textStyle: "xs",
        px: "2.5",
        h: "6",
        gap: "1.5",
        "& svg": {
          width: "4",
          height: "4"
        }
      },
      lg: {
        textStyle: "sm",
        px: "3",
        h: "7",
        gap: "1.5",
        "& svg": {
          width: "4",
          height: "4"
        }
      }
    }
  }
});

// src/theme/recipes/button.ts
import { defineRecipe as defineRecipe2 } from "@pandacss/dev";
var button = defineRecipe2({
  className: "button",
  jsx: ["Button", "IconButton", "SubmitButton"],
  base: {
    alignItems: "center",
    appearance: "none",
    borderRadius: "l2",
    cursor: "pointer",
    display: "inline-flex",
    fontWeight: "semibold",
    minWidth: "0",
    justifyContent: "center",
    outline: "none",
    position: "relative",
    transitionDuration: "normal",
    transitionProperty: "background, border-color, color, box-shadow",
    transitionTimingFunction: "default",
    userSelect: "none",
    verticalAlign: "middle",
    whiteSpace: "nowrap",
    _hidden: {
      display: "none"
    }
  },
  defaultVariants: {
    variant: "solid",
    size: "md"
  },
  variants: {
    variant: {
      solid: {
        background: "colorPalette.default",
        color: "colorPalette.fg",
        colorPalette: "accent",
        _hover: {
          background: "colorPalette.emphasized"
        },
        _focusVisible: {
          outline: "2px solid",
          outlineColor: "colorPalette.default",
          outlineOffset: "2px"
        },
        _disabled: {
          color: "fg.disabled",
          background: "bg.disabled",
          cursor: "not-allowed",
          _hover: {
            color: "fg.disabled",
            background: "bg.disabled"
          }
        }
      },
      outline: {
        borderWidth: "1px",
        borderColor: "colorPalette.a7",
        color: "colorPalette.text",
        colorPalette: "gray",
        _hover: {
          background: "colorPalette.a2"
        },
        _disabled: {
          borderColor: "border.disabled",
          color: "fg.disabled",
          cursor: "not-allowed",
          _hover: {
            background: "transparent",
            borderColor: "border.disabled",
            color: "fg.disabled"
          }
        },
        _focusVisible: {
          outline: "2px solid",
          outlineColor: "colorPalette.default",
          outlineOffset: "2px"
        },
        _selected: {
          background: "accent.default",
          borderColor: "accent.default",
          color: "accent.fg",
          _hover: {
            background: "accent.emphasized",
            borderColor: "accent.emphasized"
          }
        }
      },
      ghost: {
        color: "colorPalette.text",
        colorPalette: "gray",
        _hover: {
          background: "colorPalette.a3"
        },
        _selected: {
          background: "colorPalette.a3"
        },
        _disabled: {
          color: "fg.disabled",
          cursor: "not-allowed",
          _hover: {
            background: "transparent",
            color: "fg.disabled"
          }
        },
        _focusVisible: {
          outline: "2px solid",
          outlineColor: "colorPalette.default",
          outlineOffset: "2px"
        }
      },
      link: {
        verticalAlign: "baseline",
        _disabled: {
          color: "border.disabled",
          cursor: "not-allowed",
          _hover: {
            color: "border.disabled"
          }
        },
        height: "auto!",
        px: "0!",
        minW: "0!"
      },
      subtle: {
        background: "colorPalette.a3",
        color: "colorPalette.text",
        colorPalette: "gray",
        _hover: {
          background: "colorPalette.a4"
        },
        _focusVisible: {
          outline: "2px solid",
          outlineColor: "colorPalette.default",
          outlineOffset: "2px"
        },
        _disabled: {
          background: "bg.disabled",
          color: "fg.disabled",
          cursor: "not-allowed",
          _hover: {
            background: "bg.disabled",
            color: "fg.disabled"
          }
        }
      }
    },
    size: {
      xs: {
        h: "8",
        minW: "8",
        textStyle: "xs",
        px: "3",
        gap: "2",
        "& svg": {
          fontSize: "md",
          width: "4",
          height: "4"
        }
      },
      sm: {
        h: "9",
        minW: "9",
        textStyle: "sm",
        px: "3.5",
        gap: "2",
        "& svg": {
          width: "4",
          height: "4"
        }
      },
      md: {
        h: "10",
        minW: "10",
        textStyle: "sm",
        px: "4",
        gap: "2",
        "& svg": {
          width: "5",
          height: "5"
        }
      },
      lg: {
        h: "11",
        minW: "11",
        textStyle: "md",
        px: "4.5",
        gap: "2",
        "& svg": {
          width: "5",
          height: "5"
        }
      },
      xl: {
        h: "12",
        minW: "12",
        textStyle: "md",
        px: "5",
        gap: "2.5",
        "& svg": {
          width: "5",
          height: "5"
        }
      },
      "2xl": {
        h: "16",
        minW: "16",
        textStyle: "lg",
        px: "7",
        gap: "3",
        "& svg": {
          width: "6",
          height: "6"
        }
      }
    }
  }
});

// src/theme/recipes/card.ts
import { defineSlotRecipe as defineSlotRecipe4 } from "@pandacss/dev";
var card = defineSlotRecipe4({
  className: "card",
  slots: ["root", "header", "body", "footer", "title", "description"],
  base: {
    root: {
      bg: "bg.default",
      borderRadius: "l3",
      boxShadow: "lg",
      display: "flex",
      flexDirection: "column",
      overflow: "hidden",
      position: "relative"
    },
    header: {
      display: "flex",
      flexDirection: "column",
      gap: "1",
      p: "6"
    },
    body: {
      display: "flex",
      flex: "1",
      flexDirection: "column",
      pb: "6",
      px: "6"
    },
    footer: {
      display: "flex",
      justifyContent: "flex-end",
      pb: "6",
      pt: "2",
      px: "6"
    },
    title: {
      color: "fg.default",
      textStyle: "lg",
      fontWeight: "semibold"
    },
    description: {
      color: "fg.muted",
      textStyle: "sm"
    }
  }
});

// src/theme/recipes/carousel.ts
import { carouselAnatomy } from "@ark-ui/anatomy";
import { defineSlotRecipe as defineSlotRecipe5 } from "@pandacss/dev";
var carousel = defineSlotRecipe5({
  className: "carousel",
  slots: carouselAnatomy.keys(),
  base: {
    root: {
      colorPalette: "accent"
    },
    viewport: {
      overflowX: "hidden",
      position: "relative",
      borderRadius: "l2"
    },
    control: {
      alignItems: "center",
      background: { _light: "gray.dark.a12", _dark: "gray.light.a12" },
      borderRadius: "l2",
      bottom: "4",
      display: "flex",
      left: "50%",
      position: "absolute",
      transform: "translateX(-50%)"
    },
    indicatorGroup: {
      display: "flex"
    },
    indicator: {
      borderRadius: "full",
      background: "gray.6",
      cursor: "pointer",
      _current: {
        background: "colorPalette.default"
      },
      _focusVisible: {
        outlineOffset: "2px",
        outline: "2px solid",
        outlineColor: "border.outline"
      }
    }
  },
  defaultVariants: {
    size: "md"
  },
  variants: {
    size: {
      sm: {
        control: {
          gap: "1",
          p: "1"
        },
        indicatorGroup: {
          gap: "2"
        },
        indicator: {
          width: "2",
          height: "2"
        }
      },
      md: {
        control: {
          gap: "2",
          p: "2.5"
        },
        indicatorGroup: {
          gap: "3"
        },
        indicator: {
          width: "2.5",
          height: "2.5"
        }
      }
    }
  }
});

// src/theme/recipes/checkbox.ts
import { checkboxAnatomy } from "@ark-ui/anatomy";
import { defineSlotRecipe as defineSlotRecipe6 } from "@pandacss/dev";
var checkbox = defineSlotRecipe6({
  className: "checkbox",
  slots: checkboxAnatomy.keys(),
  base: {
    root: {
      alignItems: "center",
      colorPalette: "accent",
      display: "flex"
    },
    label: {
      color: "fg.default",
      fontWeight: "medium"
    },
    control: {
      alignItems: "center",
      borderColor: "border.default",
      borderWidth: "1px",
      color: "colorPalette.fg",
      cursor: "pointer",
      display: "flex",
      justifyContent: "center",
      transitionDuration: "normal",
      transitionProperty: "border-color, background",
      transitionTimingFunction: "default",
      _hover: {
        background: "bg.subtle"
      },
      _checked: {
        background: "colorPalette.default",
        borderColor: "colorPalette.default",
        _hover: {
          background: "colorPalette.default"
        }
      },
      _indeterminate: {
        background: "colorPalette.default",
        borderColor: "colorPalette.default",
        _hover: {
          background: "colorPalette.default"
        }
      },
      "&:has(+ :focus-visible)": {
        outlineOffset: "2px",
        outline: "2px solid",
        outlineColor: "border.outline",
        _checked: {
          outlineColor: "colorPalette.default"
        }
      }
    }
  },
  defaultVariants: {
    size: "md"
  },
  variants: {
    size: {
      sm: {
        root: {
          gap: "2"
        },
        control: {
          width: "4",
          height: "4",
          borderRadius: "l1",
          "& svg": {
            width: "3",
            height: "3"
          }
        },
        label: {
          textStyle: "sm"
        }
      },
      md: {
        root: {
          gap: "3"
        },
        control: {
          width: "5",
          height: "5",
          borderRadius: "l1",
          "& svg": {
            width: "3.5",
            height: "3.5"
          }
        },
        label: {
          textStyle: "md"
        }
      },
      lg: {
        root: {
          gap: "4"
        },
        control: {
          width: "6",
          height: "6",
          borderRadius: "l1",
          "& svg": {
            width: "4",
            height: "4"
          }
        },
        label: {
          textStyle: "lg"
        }
      }
    }
  }
});

// src/theme/recipes/clipboard.ts
import { clipboardAnatomy } from "@ark-ui/anatomy";
import { defineSlotRecipe as defineSlotRecipe7 } from "@pandacss/dev";
var clipboard = defineSlotRecipe7({
  className: "clipboard",
  slots: clipboardAnatomy.keys(),
  base: {
    root: {
      display: "flex",
      flexDirection: "column",
      gap: "1.5"
    },
    control: {
      display: "flex",
      gap: "3"
    }
  }
});

// src/theme/recipes/code.ts
import { defineRecipe as defineRecipe3 } from "@pandacss/dev";
var code = defineRecipe3({
  className: "code",
  base: {
    alignItems: "center",
    bg: "bg.subtle",
    borderRadius: "l2",
    color: "fg.default",
    display: "inline-flex",
    fontWeight: "medium!",
    fontFamily: "var(--fonts-code)",
    whiteSpace: "pre"
  },
  defaultVariants: {
    size: "md",
    variant: "outline"
  },
  variants: {
    variant: {
      outline: {
        borderWidth: "1px"
      },
      ghost: {}
    },
    size: {
      sm: {
        minHeight: "5",
        px: "0.5",
        textStyle: "xs"
      },
      md: {
        minHeight: "6",
        textStyle: "sm",
        px: "1",
        py: "1px"
      },
      lg: {
        minHeight: "7",
        px: "1.5",
        py: "1px",
        textStyle: "md"
      }
    }
  }
});

// src/theme/recipes/collapsible.ts
import { collapsibleAnatomy } from "@ark-ui/anatomy";
import { defineSlotRecipe as defineSlotRecipe8 } from "@pandacss/dev";
var collapsible = defineSlotRecipe8({
  className: "collapsible",
  slots: collapsibleAnatomy.keys(),
  base: {
    root: {
      alignItems: "flex-start",
      display: "flex",
      flexDirection: "column",
      width: "full"
    },
    content: {
      overflow: "hidden",
      width: "full",
      _open: {
        animation: "collapse-in"
      },
      _closed: {
        animation: "collapse-out"
      }
    }
  }
});

// src/theme/recipes/color-picker.ts
import { colorPickerAnatomy } from "@ark-ui/anatomy";
import { defineSlotRecipe as defineSlotRecipe9 } from "@pandacss/dev";
var colorPicker = defineSlotRecipe9({
  className: "colorPicker",
  slots: colorPickerAnatomy.keys(),
  base: {
    root: {
      display: "flex",
      flexDirection: "column",
      gap: "1.5"
    },
    label: {
      color: "fg.default",
      fontWeight: "medium",
      textStyle: "sm"
    },
    control: {
      display: "flex",
      flexDirection: "row",
      gap: "2"
    },
    content: {
      background: "bg.default",
      borderRadius: "l3",
      boxShadow: "lg",
      display: "flex",
      flexDirection: "column",
      maxWidth: "sm",
      p: "4",
      zIndex: "dropdown",
      _open: {
        animation: "fadeIn 0.25s ease-out"
      },
      _closed: {
        animation: "fadeOut 0.2s ease-out"
      },
      _hidden: {
        display: "none"
      }
    },
    area: {
      height: "36",
      borderRadius: "l2",
      overflow: "hidden"
    },
    areaThumb: {
      borderRadius: "full",
      height: "2.5",
      width: "2.5",
      boxShadow: "white 0px 0px 0px 2px, black 0px 0px 2px 1px",
      outline: "none"
    },
    areaBackground: {
      height: "full"
    },
    channelSlider: {
      borderRadius: "l2"
    },
    channelSliderTrack: {
      height: "3",
      borderRadius: "l2"
    },
    swatchGroup: {
      display: "grid",
      gridTemplateColumns: "repeat(7, 1fr)",
      gap: "2",
      background: "bg.default"
    },
    swatch: {
      height: "6",
      width: "6",
      borderRadius: "l2",
      boxShadow: "0 0 0 1px var(--colors-border-emphasized), 0 0 0 2px var(--colors-bg-default) inset"
    },
    channelSliderThumb: {
      borderRadius: "full",
      height: "2.5",
      width: "2.5",
      boxShadow: "white 0px 0px 0px 2px, black 0px 0px 2px 1px",
      transform: "translate(-50%, -50%)",
      outline: "none"
    },
    transparencyGrid: {
      borderRadius: "l2"
    }
  }
});

// src/theme/recipes/combobox.ts
import { comboboxAnatomy } from "@ark-ui/anatomy";
import { defineSlotRecipe as defineSlotRecipe10 } from "@pandacss/dev";
var combobox = defineSlotRecipe10({
  className: "combobox",
  slots: comboboxAnatomy.keys(),
  base: {
    root: {
      display: "flex",
      flexDirection: "column",
      gap: "1.5",
      width: "full"
    },
    control: {
      position: "relative"
    },
    label: {
      color: "fg.default",
      fontWeight: "medium"
    },
    trigger: {
      bottom: "0",
      color: "fg.muted",
      position: "absolute",
      right: "0",
      top: "0"
    },
    content: {
      background: "bg.default",
      borderRadius: "l2",
      boxShadow: "lg",
      display: "flex",
      flexDirection: "column",
      zIndex: "dropdown",
      _hidden: {
        display: "none"
      },
      _open: {
        animation: "fadeIn 0.25s ease-out"
      },
      _closed: {
        animation: "fadeOut 0.2s ease-out"
      },
      _focusVisible: {
        outlineOffset: "2px",
        outline: "2px solid",
        outlineColor: "border.outline"
      }
    },
    item: {
      alignItems: "center",
      borderRadius: "l1",
      cursor: "pointer",
      display: "flex",
      justifyContent: "space-between",
      transitionDuration: "fast",
      transitionProperty: "background, color",
      transitionTimingFunction: "default",
      _hover: {
        background: "bg.muted"
      },
      _highlighted: {
        background: "bg.muted"
      },
      _disabled: {
        color: "fg.disabled",
        cursor: "not-allowed",
        _hover: {
          background: "transparent"
        }
      }
    },
    itemGroupLabel: {
      fontWeight: "semibold",
      textStyle: "sm"
    },
    itemIndicator: {
      color: "colorPalette.default"
    }
  },
  defaultVariants: {
    size: "md"
  },
  variants: {
    size: {
      sm: {
        content: { p: "0.5", gap: "1" },
        item: { textStyle: "sm", px: "2", height: "9" },
        itemIndicator: {
          "& :where(svg)": {
            width: "4",
            height: "4"
          }
        },
        itemGroupLabel: {
          px: "2",
          py: "1.5"
        },
        label: { textStyle: "sm" },
        trigger: { right: "2.5" }
      },
      md: {
        content: { p: "1", gap: "1" },
        item: { textStyle: "md", px: "2", height: "10" },
        itemIndicator: {
          "& :where(svg)": {
            width: "4",
            height: "4"
          }
        },
        itemGroupLabel: {
          px: "2",
          py: "1.5"
        },
        label: { textStyle: "sm" },
        trigger: { right: "3" }
      },
      lg: {
        content: { p: "1.5", gap: "1" },
        item: { textStyle: "md", px: "2", height: "11" },
        itemIndicator: {
          "& :where(svg)": {
            width: "5",
            height: "5"
          }
        },
        itemGroupLabel: {
          px: "2",
          py: "1.5"
        },
        label: { textStyle: "sm" },
        trigger: { right: "3.5" }
      }
    }
  }
});

// src/theme/recipes/date-picker.ts
import { datePickerAnatomy } from "@ark-ui/anatomy";
import { defineSlotRecipe as defineSlotRecipe11 } from "@pandacss/dev";
var datePicker = defineSlotRecipe11({
  className: "datePicker",
  slots: [...datePickerAnatomy.keys()],
  base: {
    root: {
      colorPalette: "accent",
      display: "flex",
      flexDirection: "column",
      gap: "1.5"
    },
    content: {
      background: "bg.default",
      borderRadius: "l3",
      boxShadow: "lg",
      display: "flex",
      flexDirection: "column",
      gap: "3",
      p: "4",
      width: "344px",
      zIndex: "dropdown",
      _open: {
        animation: "fadeIn 0.25s ease-out"
      },
      _closed: {
        animation: "fadeOut 0.2s ease-out"
      },
      _hidden: {
        display: "none"
      }
    },
    control: {
      display: "flex",
      flexDirection: "row",
      gap: "2"
    },
    label: {
      color: "fg.default",
      fontWeight: "medium",
      textStyle: "sm"
    },
    tableHeader: {
      color: "fg.muted",
      fontWeight: "semibold",
      height: "10",
      textStyle: "sm"
    },
    viewControl: {
      display: "flex",
      gap: "2",
      justifyContent: "space-between"
    },
    table: {
      width: "full",
      borderCollapse: "separate",
      borderSpacing: "1",
      m: "-1"
    },
    tableCell: {
      textAlign: "center"
    },
    tableCellTrigger: {
      width: "100%",
      _today: {
        _before: {
          content: "'\u2212'",
          color: "colorPalette.default",
          position: "absolute",
          marginTop: "6"
        }
      },
      "&[data-in-range]": {
        background: "bg.muted"
      },
      _selected: {
        _before: {
          color: "colorPalette.fg"
        }
      }
    },
    view: {
      display: "flex",
      flexDirection: "column",
      gap: "3",
      _hidden: {
        display: "none"
      }
    }
  }
});

// src/theme/recipes/dialog.ts
import { dialogAnatomy } from "@ark-ui/anatomy";
import { defineSlotRecipe as defineSlotRecipe12 } from "@pandacss/dev";
var dialog = defineSlotRecipe12({
  className: "dialog",
  slots: dialogAnatomy.keys(),
  base: {
    backdrop: {
      backdropFilter: "blur(4px)",
      background: {
        _light: "white.a10",
        _dark: "black.a10"
      },
      height: "100vh",
      left: "0",
      position: "fixed",
      top: "0",
      width: "100vw",
      zIndex: "overlay",
      _open: {
        animation: "backdrop-in"
      },
      _closed: {
        animation: "backdrop-out"
      }
    },
    positioner: {
      alignItems: "center",
      display: "flex",
      justifyContent: "center",
      left: "0",
      overflow: "auto",
      position: "fixed",
      top: "0",
      width: "100vw",
      height: "100dvh",
      zIndex: "modal"
    },
    content: {
      background: "bg.default",
      borderRadius: "l3",
      boxShadow: "lg",
      minW: "sm",
      position: "relative",
      _open: {
        animation: "dialog-in"
      },
      _closed: {
        animation: "dialog-out"
      }
    },
    title: {
      fontWeight: "semibold",
      textStyle: "lg"
    },
    description: {
      color: "fg.muted",
      textStyle: "sm"
    }
  }
});

// src/theme/recipes/drawer.ts
import { dialogAnatomy as dialogAnatomy2 } from "@ark-ui/anatomy";
import { defineSlotRecipe as defineSlotRecipe13 } from "@pandacss/dev";
var anatomy = dialogAnatomy2.extendWith("header", "body", "footer");
var drawer = defineSlotRecipe13({
  className: "drawer",
  slots: [...anatomy.keys()],
  base: {
    backdrop: {
      backdropFilter: "blur(4px)",
      background: {
        _light: "white.a10",
        _dark: "black.a10"
      },
      height: "100vh",
      left: "0",
      position: "fixed",
      top: "0",
      width: "100vw",
      zIndex: "overlay",
      _open: {
        animation: "backdrop-in"
      },
      _closed: {
        animation: "backdrop-out"
      }
    },
    positioner: {
      alignItems: "center",
      display: "flex",
      height: "100dvh",
      justifyContent: "center",
      position: "fixed",
      top: 0,
      width: { base: "100vw", sm: "sm" },
      zIndex: "modal"
    },
    content: {
      background: "bg.default",
      boxShadow: "lg",
      display: "grid",
      divideY: "1px",
      gridTemplateColumns: "1fr",
      gridTemplateRows: "auto 1fr auto",
      gridTemplateAreas: `
        'header'
        'body'
        'footer'
      `,
      height: "full",
      width: "full",
      _hidden: {
        display: "none"
      }
    },
    header: {
      display: "flex",
      flexDirection: "column",
      gap: "1",
      gridArea: "header",
      pt: { base: "4", md: "6" },
      pb: "4",
      px: { base: "4", md: "6" }
    },
    body: {
      display: "flex",
      flexDirection: "column",
      gridArea: "body",
      overflow: "auto",
      p: { base: "4", md: "6" }
    },
    footer: {
      display: "flex",
      gridArea: "footer",
      justifyContent: "flex-end",
      py: "4",
      px: { base: "4", md: "6" }
    },
    title: {
      color: "fg.default",
      fontWeight: "semibold",
      textStyle: "xl"
    },
    description: {
      color: "fg.muted",
      textStyle: "sm"
    }
  },
  defaultVariants: {
    variant: "right"
  },
  variants: {
    variant: {
      left: {
        positioner: {
          left: 0
        },
        content: {
          _open: {
            animation: "drawer-in-left"
          },
          _closed: {
            animation: "drawer-out-left"
          }
        }
      },
      right: {
        positioner: {
          right: 0
        },
        content: {
          _open: {
            animation: "drawer-in-right"
          },
          _closed: {
            animation: "drawer-out-right"
          }
        }
      }
    }
  }
});

// src/theme/recipes/editable.ts
import { editableAnatomy } from "@ark-ui/anatomy";
import { defineSlotRecipe as defineSlotRecipe14 } from "@pandacss/dev";
var editable = defineSlotRecipe14({
  className: "editable",
  slots: editableAnatomy.keys(),
  base: {
    root: {
      display: "flex",
      flexDirection: "column",
      gap: "1.5",
      width: "100%"
    },
    control: {
      display: "flex",
      gap: "2"
    }
  }
});

// src/theme/recipes/field.ts
import { fieldAnatomy } from "@ark-ui/anatomy";
import { defineSlotRecipe as defineSlotRecipe15 } from "@pandacss/dev";
var field = defineSlotRecipe15({
  className: "field",
  slots: fieldAnatomy.keys(),
  base: {
    root: {
      display: "flex",
      flexDirection: "column",
      gap: "1.5"
    },
    label: {
      color: "fg.default",
      fontWeight: "medium",
      textStyle: "sm",
      _disabled: {
        color: "fg.disabled"
      }
    },
    helperText: {
      color: "fg.muted",
      textStyle: "sm",
      _disabled: {
        color: "fg.disabled"
      }
    },
    errorText: {
      alignItems: "center",
      color: "fg.error",
      display: "inline-flex",
      gap: "2",
      textStyle: "sm",
      _disabled: {
        color: "fg.disabled"
      }
    }
  }
});

// src/theme/recipes/fieldset.ts
import { fieldsetAnatomy } from "@ark-ui/anatomy";
import { defineSlotRecipe as defineSlotRecipe16 } from "@pandacss/dev";
var fieldset = defineSlotRecipe16({
  className: "fieldset",
  slots: [...fieldsetAnatomy.keys(), "control"],
  base: {
    root: {
      display: "grid",
      borderTopWidth: "1px",
      py: "6",
      columnGap: "8",
      rowGap: "1.5",
      gridTemplateAreas: {
        base: `
        "legend legend" 
        "helperText helperText"
        "control control"
        "errorText errorText"
        `,
        md: `
        "legend control"
        "helperText control"
        "errorText errorText"`
      },
      gridTemplateRows: "auto 1fr",
      gridTemplateColumns: "1fr auto",
      width: "full"
    },
    control: {
      gridArea: "control",
      display: "grid",
      gap: "4"
    },
    legend: {
      color: "fg.default",
      fontWeight: "medium",
      gridArea: "legend",
      textStyle: "sm",
      float: "left",
      "+ *": {
        clear: "both"
      },
      _disabled: {
        color: "fg.disabled"
      }
    },
    helperText: {
      color: "fg.muted",
      gridArea: "helperText",
      textStyle: "sm",
      _disabled: {
        color: "fg.disabled"
      }
    },
    errorText: {
      alignItems: "center",
      color: "fg.error",
      display: "inline-flex",
      gap: "2",
      gridArea: "errorText",
      mt: "4",
      textStyle: "sm",
      _disabled: {
        color: "fg.disabled"
      }
    }
  }
});

// src/theme/recipes/file-upload.ts
import { fileUploadAnatomy } from "@ark-ui/anatomy";
import { defineSlotRecipe as defineSlotRecipe17 } from "@pandacss/dev";
var fileUpload = defineSlotRecipe17({
  className: "fileUpload",
  slots: fileUploadAnatomy.keys(),
  base: {
    root: {
      display: "flex",
      flexDirection: "column",
      gap: "4",
      width: "100%"
    },
    label: {
      fontWeight: "medium",
      textStyle: "sm"
    },
    dropzone: {
      alignItems: "center",
      background: "bg.default",
      borderRadius: "l3",
      borderWidth: "1px",
      display: "flex",
      flexDirection: "column",
      gap: "3",
      justifyContent: "center",
      minHeight: "xs",
      px: "6",
      py: "4"
    },
    item: {
      animation: "fadeIn 0.25s ease-out",
      background: "bg.default",
      borderRadius: "l3",
      borderWidth: "1px",
      columnGap: "3",
      display: "grid",
      gridTemplateColumns: "auto 1fr auto",
      gridTemplateAreas: `
        "preview name delete"
        "preview size delete"
        `,
      p: "4"
    },
    itemGroup: {
      display: "flex",
      flexDirection: "column",
      gap: "3"
    },
    itemName: {
      color: "fg.default",
      fontWeight: "medium",
      gridArea: "name",
      textStyle: "sm"
    },
    itemSizeText: {
      color: "fg.muted",
      gridArea: "size",
      textStyle: "sm"
    },
    itemDeleteTrigger: {
      alignSelf: "flex-start",
      gridArea: "delete"
    },
    itemPreview: {
      gridArea: "preview"
    },
    itemPreviewImage: {
      aspectRatio: "1",
      height: "10",
      objectFit: "scale-down",
      width: "10"
    }
  }
});

// src/theme/recipes/form-label.ts
import { defineRecipe as defineRecipe4 } from "@pandacss/dev";
var formLabel = defineRecipe4({
  className: "formLabel",
  base: {
    color: "fg.default",
    fontWeight: "medium"
  },
  defaultVariants: {
    size: "md"
  },
  variants: {
    size: {
      sm: {
        textStyle: "sm"
      },
      md: {
        textStyle: "sm"
      },
      lg: {
        textStyle: "sm"
      },
      xl: {
        textStyle: "md"
      }
    }
  }
});

// src/theme/recipes/hover-card.ts
import { hoverCardAnatomy } from "@ark-ui/anatomy";
import { defineSlotRecipe as defineSlotRecipe18 } from "@pandacss/dev";
var hoverCard = defineSlotRecipe18({
  className: "hoverCard",
  slots: hoverCardAnatomy.keys(),
  base: {
    content: {
      "--hover-card-background": "colors.bg.default",
      background: "var(--hover-card-background)",
      borderRadius: "l3",
      boxShadow: "lg",
      maxW: "80",
      p: "4",
      position: "relative",
      _open: {
        animation: "fadeIn 0.25s ease-out"
      },
      _closed: {
        animation: "fadeOut 0.2s ease-out"
      }
    },
    arrow: {
      "--arrow-size": "12px",
      "--arrow-background": "var(--hover-card-background)"
    },
    arrowTip: {
      borderTopWidth: "1px",
      borderLeftWidth: "1px"
    }
  }
});

// src/theme/recipes/icon.ts
import { defineRecipe as defineRecipe5 } from "@pandacss/dev";
var icon = defineRecipe5({
  className: "icon",
  base: {
    color: "currentcolor",
    display: "inline-block",
    flexShrink: "0",
    verticalAlign: "middle",
    lineHeight: "1em"
  },
  defaultVariants: {
    size: "md"
  },
  variants: {
    size: {
      xs: {
        w: "3",
        h: "3"
      },
      sm: {
        w: "4",
        h: "4"
      },
      md: {
        w: "5",
        h: "5"
      },
      lg: {
        w: "6",
        h: "6"
      },
      xl: {
        w: "7",
        h: "7"
      },
      "2xl": {
        w: "8",
        h: "8"
      }
    }
  }
});

// src/theme/recipes/input.ts
import { defineRecipe as defineRecipe6 } from "@pandacss/dev";
var input = defineRecipe6({
  className: "input",
  jsx: ["Input", "Field.Input"],
  base: {
    appearance: "none",
    background: "none",
    borderColor: "border.default",
    borderRadius: "l2",
    borderWidth: "1px",
    colorPalette: "accent",
    color: "fg.default",
    outline: 0,
    position: "relative",
    transitionDuration: "normal",
    transitionProperty: "box-shadow, border-color",
    transitionTimingFunction: "default",
    width: "full",
    _disabled: {
      opacity: 0.4,
      cursor: "not-allowed"
    },
    _focus: {
      borderColor: "colorPalette.default",
      boxShadow: "0 0 0 1px var(--colors-color-palette-default)"
    },
    _invalid: {
      borderColor: "fg.error",
      _focus: {
        borderColor: "fg.error",
        boxShadow: "0 0 0 1px var(--colors-border-error)"
      }
    }
  },
  defaultVariants: {
    size: "md"
  },
  variants: {
    size: {
      "2xs": { px: "1.5", h: "7", minW: "7", fontSize: "xs" },
      xs: { px: "2", h: "8", minW: "8", fontSize: "xs" },
      sm: { px: "2.5", h: "9", minW: "9", fontSize: "sm" },
      md: { px: "3", h: "10", minW: "10", fontSize: "md" },
      lg: { px: "3.5", h: "11", minW: "11", fontSize: "md" },
      xl: { px: "4", h: "12", minW: "12", fontSize: "lg" },
      "2xl": { px: "4.5", h: "16", minW: "16", textStyle: "3xl" }
    }
  }
});

// src/theme/recipes/kbd.ts
import { defineRecipe as defineRecipe7 } from "@pandacss/dev";
var kbd = defineRecipe7({
  className: "kbd",
  base: {
    alignItems: "center",
    bg: "bg.subtle",
    borderRadius: "l2",
    boxShadow: "0 -2px 0 0 inset var(--colors-border-muted), 0 0 0 1px inset var(--colors-border-muted)",
    color: "fg.default",
    display: "inline-flex",
    fontFamily: "var(--fonts-code)",
    fontWeight: "medium",
    whiteSpace: "pre"
  },
  defaultVariants: {
    size: "md"
  },
  variants: {
    size: {
      sm: {
        minHeight: "5",
        px: "0.5",
        textStyle: "xs"
      },
      md: {
        minHeight: "6",
        textStyle: "sm",
        px: "1",
        py: "1px"
      },
      lg: {
        minHeight: "7",
        px: "1.5",
        py: "1px",
        textStyle: "md"
      }
    }
  }
});

// src/theme/recipes/link.ts
import { defineRecipe as defineRecipe8 } from "@pandacss/dev";
var link = defineRecipe8({
  className: "link",
  base: {
    alignItems: "center",
    color: "fg.default",
    colorPalette: "accent",
    cursor: "pointer",
    display: "inline-flex",
    fontWeight: "medium",
    gap: "2",
    textDecoration: "underline 0.1em transparent",
    textUnderlineOffset: "0.125em",
    transitionDuration: "normal",
    transitionProperty: "text-decoration-color",
    transitionTimingFunction: "default",
    _hover: {
      textDecorationColor: "colorPalette.default"
    },
    "& svg": {
      width: "1em",
      height: "1em"
    }
  }
});

// src/theme/recipes/menu.ts
import { menuAnatomy } from "@ark-ui/anatomy";
import { defineSlotRecipe as defineSlotRecipe19 } from "@pandacss/dev";
var itemStyle = {
  alignItems: "center",
  borderRadius: "l1",
  cursor: "pointer",
  display: "flex",
  fontWeight: "medium",
  textStyle: "sm",
  transitionDuration: "fast",
  transitionProperty: "background, color",
  transitionTimingFunction: "default",
  _hover: {
    background: "bg.muted",
    "& :where(svg)": {
      color: "fg.default"
    }
  },
  _highlighted: {
    background: "bg.muted"
  },
  "& :where(svg)": {
    color: "fg.muted"
  }
};
var menu = defineSlotRecipe19({
  className: "menu",
  slots: menuAnatomy.keys(),
  base: {
    itemGroupLabel: {
      fontWeight: "semibold",
      textStyle: "sm"
    },
    content: {
      background: "bg.default",
      borderRadius: "l2",
      boxShadow: "lg",
      display: "flex",
      flexDirection: "column",
      outline: "none",
      width: "calc(100% + 2rem)",
      zIndex: "dropdown",
      _hidden: {
        display: "none"
      },
      _open: {
        animation: "fadeIn 0.25s ease-out"
      },
      _closed: {
        animation: "fadeOut 0.2s ease-out"
      }
    },
    itemGroup: {
      display: "flex",
      flexDirection: "column"
    },
    positioner: {
      zIndex: "dropdown"
    },
    item: itemStyle,
    triggerItem: itemStyle
  },
  defaultVariants: {
    size: "md"
  },
  variants: {
    size: {
      xs: {
        itemGroup: {
          gap: "1"
        },
        itemGroupLabel: {
          py: "1.5",
          px: "1.5",
          mx: "1"
        },
        content: {
          py: "1",
          gap: "1"
        },
        item: {
          h: "8",
          px: "1.5",
          mx: "1",
          "& :where(svg)": {
            width: "4",
            height: "4"
          }
        },
        optionItem: {
          h: "8",
          px: "1.5",
          mx: "1",
          "& :where(svg)": {
            width: "4",
            height: "4"
          }
        },
        triggerItem: {
          h: "8",
          px: "1.5",
          mx: "1",
          "& :where(svg)": {
            width: "4",
            height: "4"
          }
        }
      },
      sm: {
        itemGroup: {
          gap: "1"
        },
        itemGroupLabel: {
          py: "2",
          px: "2",
          mx: "1"
        },
        content: {
          py: "1",
          gap: "1"
        },
        item: {
          h: "9",
          px: "2",
          mx: "1",
          "& :where(svg)": {
            width: "4",
            height: "4"
          }
        },
        optionItem: {
          h: "9",
          px: "2",
          mx: "1",
          "& :where(svg)": {
            width: "4",
            height: "4"
          }
        },
        triggerItem: {
          h: "9",
          px: "2",
          mx: "1.5",
          "& :where(svg)": {
            width: "4",
            height: "4"
          }
        }
      },
      md: {
        itemGroup: {
          gap: "1"
        },
        itemGroupLabel: {
          py: "2.5",
          px: "2.5",
          mx: "1"
        },
        content: {
          py: "1",
          gap: "1"
        },
        item: {
          h: "10",
          px: "2.5",
          mx: "1",
          "& :where(svg)": {
            width: "4",
            height: "4"
          }
        },
        optionItem: {
          h: "10",
          px: "2.5",
          mx: "1",
          "& :where(svg)": {
            width: "4",
            height: "4"
          }
        },
        triggerItem: {
          h: "10",
          px: "2.5",
          mx: "1.5",
          "& :where(svg)": {
            width: "4",
            height: "4"
          }
        }
      },
      lg: {
        itemGroup: {
          gap: "1"
        },
        itemGroupLabel: {
          py: "2.5",
          px: "2.5",
          mx: "1"
        },
        content: {
          py: "1",
          gap: "1"
        },
        item: {
          h: "11",
          px: "2.5",
          mx: "1",
          "& :where(svg)": {
            width: "5",
            height: "5"
          }
        },
        optionItem: {
          h: "11",
          px: "2.5",
          mx: "1",
          "& :where(svg)": {
            width: "5",
            height: "5"
          }
        },
        triggerItem: {
          h: "11",
          px: "2.5",
          mx: "1.5",
          "& :where(svg)": {
            width: "5",
            height: "5"
          }
        }
      }
    }
  }
});

// src/theme/recipes/number-input.ts
import { numberInputAnatomy } from "@ark-ui/anatomy";
import { defineSlotRecipe as defineSlotRecipe20 } from "@pandacss/dev";
var trigger = {
  alignItems: "center",
  borderColor: "border.default",
  color: "fg.muted",
  cursor: "pointer",
  display: "inline-flex",
  justifyContent: "center",
  transitionDuration: "normal",
  transitionProperty: "background, border-color, color, box-shadow",
  transitionTimingFunction: "default",
  "& :where(svg)": {
    width: "4",
    height: "4"
  },
  _hover: {
    background: "gray.a2",
    color: "fg.default"
  },
  _disabled: {
    color: "fg.disabled",
    cursor: "not-allowed",
    _hover: {
      background: "transparent",
      color: "fg.disabled"
    }
  }
};
var numberInput = defineSlotRecipe20({
  className: "numberInput",
  slots: numberInputAnatomy.keys(),
  base: {
    root: {
      colorPalette: "accent",
      display: "flex",
      flexDirection: "column",
      gap: "1.5"
    },
    control: {
      borderColor: "border.default",
      borderRadius: "l2",
      borderWidth: "1px",
      display: "grid",
      divideX: "1px",
      gridTemplateColumns: "1fr 32px",
      gridTemplateRows: "1fr 1fr",
      overflow: "hidden",
      transitionDuration: "normal",
      transitionProperty: "border-color, box-shadow",
      transitionTimingFunction: "default",
      _focusWithin: {
        borderColor: "colorPalette.default",
        boxShadow: "0 0 0 1px var(--colors-color-palette-default)"
      }
    },
    input: {
      background: "transparent",
      border: "none",
      gridRow: "2",
      outline: "none",
      width: "full"
    },
    label: {
      color: "fg.default",
      fontWeight: "medium"
    },
    decrementTrigger: { ...trigger, borderTopWidth: "1px" },
    incrementTrigger: trigger
  },
  defaultVariants: {
    size: "md"
  },
  variants: {
    size: {
      md: {
        control: {
          ps: "3",
          h: "10",
          minW: "10",
          fontSize: "md"
        },
        label: {
          textStyle: "sm"
        }
      },
      lg: {
        control: {
          ps: "3.5",
          h: "11",
          minW: "11",
          fontSize: "md"
        },
        label: {
          textStyle: "sm"
        }
      },
      xl: {
        control: {
          ps: "4",
          h: "12",
          minW: "12",
          fontSize: "lg"
        },
        label: {
          textStyle: "md"
        }
      }
    }
  }
});

// src/theme/recipes/pagination.ts
import { paginationAnatomy } from "@ark-ui/anatomy";
import { defineSlotRecipe as defineSlotRecipe21 } from "@pandacss/dev";
var pagination = defineSlotRecipe21({
  className: "pagination",
  slots: paginationAnatomy.keys(),
  base: {
    root: {
      display: "flex",
      gap: "2.5"
    },
    item: {
      fontVariantNumeric: "tabular-nums"
    },
    ellipsis: {
      alignItems: "center",
      color: "fg.default",
      display: "inline-flex",
      fontWeight: "semibold",
      px: "2"
    }
  }
});

// src/theme/recipes/pin-input.ts
import { pinInputAnatomy } from "@ark-ui/anatomy";
import { defineSlotRecipe as defineSlotRecipe22 } from "@pandacss/dev";
var pinInput = defineSlotRecipe22({
  className: "pinInput",
  slots: pinInputAnatomy.keys(),
  base: {
    root: {
      display: "flex",
      flexDirection: "column",
      gap: "1.5"
    },
    control: {
      display: "flex",
      gap: "2"
    },
    label: {
      color: "fg.default",
      fontWeight: "medium"
    },
    input: {
      px: "0!",
      textAlign: "center"
    }
  },
  defaultVariants: {
    size: "md"
  },
  variants: {
    size: {
      xs: {
        label: {
          textStyle: "sm"
        },
        input: {
          width: "8"
        }
      },
      sm: {
        label: {
          textStyle: "sm"
        },
        input: {
          width: "9"
        }
      },
      md: {
        label: {
          textStyle: "sm"
        },
        input: {
          width: "10"
        }
      },
      lg: {
        label: {
          textStyle: "sm"
        },
        input: {
          width: "11"
        }
      },
      xl: {
        label: {
          textStyle: "md"
        },
        input: {
          width: "12"
        }
      },
      "2xl": {
        label: {
          textStyle: "md"
        },
        input: {
          width: "16"
        }
      }
    }
  }
});

// src/theme/recipes/popover.ts
import { popoverAnatomy } from "@ark-ui/anatomy";
import { defineSlotRecipe as defineSlotRecipe23 } from "@pandacss/dev";
var popover = defineSlotRecipe23({
  className: "popover",
  slots: popoverAnatomy.keys(),
  base: {
    positioner: {
      position: "relative"
    },
    content: {
      background: "bg.default",
      borderRadius: "l3",
      boxShadow: "lg",
      display: "flex",
      flexDirection: "column",
      maxWidth: "sm",
      zIndex: "popover",
      p: "4",
      _open: {
        animation: "fadeIn 0.25s ease-out"
      },
      _closed: {
        animation: "fadeOut 0.2s ease-out"
      },
      _hidden: {
        display: "none"
      }
    },
    title: {
      fontWeight: "medium",
      textStyle: "sm"
    },
    description: {
      color: "fg.muted",
      textStyle: "sm"
    },
    closeTrigger: {
      color: "fg.muted"
    },
    arrow: {
      "--arrow-size": "var(--sizes-3)",
      "--arrow-background": "var(--colors-bg-default)"
    },
    arrowTip: {
      borderTopWidth: "1px",
      borderLeftWidth: "1px"
    }
  }
});

// src/theme/recipes/progress.ts
import { progressAnatomy } from "@ark-ui/anatomy";
import { defineSlotRecipe as defineSlotRecipe24 } from "@pandacss/dev";
var progress = defineSlotRecipe24({
  className: "progress",
  slots: progressAnatomy.keys(),
  base: {
    root: {
      alignItems: "center",
      colorPalette: "accent",
      display: "flex",
      flexDirection: "column",
      gap: "1.5",
      width: "full"
    },
    label: {
      color: "fg.default",
      fontWeight: "medium",
      textStyle: "sm"
    },
    track: {
      backgroundColor: "bg.emphasized",
      borderRadius: "l2",
      overflow: "hidden",
      width: "100%"
    },
    range: {
      backgroundColor: "colorPalette.default",
      height: "100%",
      transition: "width 0.2s ease-in-out",
      "--translate-x": "-100%"
    },
    circleTrack: {
      stroke: "bg.emphasized"
    },
    circleRange: {
      stroke: "colorPalette.default",
      transitionProperty: "stroke-dasharray, stroke",
      transitionDuration: "0.6s"
    },
    valueText: {
      textStyle: "sm"
    }
  },
  defaultVariants: {
    size: "md"
  },
  variants: {
    size: {
      sm: {
        circle: {
          "--size": "36px",
          "--thickness": "4px"
        },
        track: {
          height: "1.5"
        }
      },
      md: {
        track: {
          height: "2"
        },
        circle: {
          "--size": "40px",
          "--thickness": "4px"
        }
      },
      lg: {
        track: {
          height: "2.5"
        },
        circle: {
          "--size": "44px",
          "--thickness": "4px"
        }
      }
    }
  }
});

// src/theme/recipes/qr-code.ts
import { qrCodeAnatomy } from "@ark-ui/anatomy";
import { defineSlotRecipe as defineSlotRecipe25 } from "@pandacss/dev";
var qrCode = defineSlotRecipe25({
  className: "qrCode",
  slots: qrCodeAnatomy.keys(),
  base: {}
});

// src/theme/recipes/radio-button-group.ts
import { radioGroupAnatomy } from "@ark-ui/anatomy";
import { defineSlotRecipe as defineSlotRecipe26 } from "@pandacss/dev";
var radioButtonGroup = defineSlotRecipe26({
  className: "radioButtonGroup",
  slots: radioGroupAnatomy.keys(),
  base: {
    root: {
      colorPalette: "accent",
      display: "flex",
      flexWrap: "wrap"
    },
    item: {
      alignItems: "center",
      appearance: "none",
      borderColor: "border.default",
      borderRadius: "l2",
      borderWidth: "1px",
      color: "fg.default",
      cursor: "pointer",
      display: "inline-flex",
      fontWeight: "semibold",
      justifyContent: "center",
      outline: "none",
      position: "relative",
      transitionDuration: "normal",
      transitionProperty: "background, border-color, color, box-shadow",
      transitionTimingFunction: "default",
      userSelect: "none",
      verticalAlign: "middle",
      whiteSpace: "nowrap",
      _hover: {
        background: "gray.a2"
      },
      _checked: {
        cursor: "default"
      },
      _disabled: {
        borderColor: "border.disabled",
        color: "fg.disabled",
        cursor: "not-allowed",
        _hover: {
          background: "initial",
          borderColor: "border.disabled",
          color: "fg.disabled"
        }
      }
    },
    itemText: {
      display: "inline-flex",
      alignItems: "center"
    }
  },
  defaultVariants: {
    size: "md",
    variant: "solid"
  },
  variants: {
    variant: {
      solid: {
        item: {
          _checked: {
            background: "colorPalette.default",
            borderColor: "colorPalette.default",
            color: "colorPalette.fg",
            _hover: {
              color: "colorPalette.fg",
              background: "colorPalette.default"
            }
          }
        }
      },
      outline: {
        item: {
          _checked: {
            borderColor: "colorPalette.default",
            boxShadow: "0 0 0 1px var(--colors-color-palette-default)",
            _hover: {
              background: "initial"
            }
          }
        }
      }
    },
    size: {
      sm: {
        root: {
          gap: "2"
        },
        item: {
          h: "9",
          minW: "9",
          textStyle: "sm",
          px: "3.5",
          "& svg": {
            width: "4.5",
            height: "4.5"
          }
        },
        itemText: {
          gap: "2"
        }
      },
      md: {
        root: {
          gap: "3"
        },
        item: {
          h: "10",
          minW: "10",
          textStyle: "sm",
          px: "4",
          "& svg": {
            width: "5",
            height: "5"
          }
        },
        itemText: {
          gap: "2"
        }
      },
      lg: {
        root: {
          gap: "3"
        },
        item: {
          h: "11",
          minW: "11",
          textStyle: "md",
          px: "4.5",
          "& svg": {
            width: "5",
            height: "5"
          }
        },
        itemText: {
          gap: "2"
        }
      },
      xl: {
        root: {
          gap: "3"
        },
        item: {
          h: "12",
          minW: "12",
          textStyle: "md",
          px: "5",
          "& svg": {
            width: "5",
            height: "5"
          }
        },
        itemText: {
          gap: "2.5"
        }
      }
    }
  }
});

// src/theme/recipes/radio-group.ts
import { radioGroupAnatomy as radioGroupAnatomy2 } from "@ark-ui/anatomy";
import { defineSlotRecipe as defineSlotRecipe27 } from "@pandacss/dev";
var radioGroup = defineSlotRecipe27({
  className: "radioGroup",
  slots: radioGroupAnatomy2.keys(),
  base: {
    root: {
      colorPalette: "accent",
      display: "flex",
      flexDirection: {
        _vertical: "column",
        _horizontal: "row"
      }
    },
    itemControl: {
      background: "transparent",
      borderColor: "border.default",
      borderRadius: "full",
      borderWidth: "1px",
      transitionDuration: "normal",
      transitionProperty: "background",
      transitionTimingFunction: "default",
      _hover: {
        background: "bg.subtle"
      },
      _checked: {
        background: "colorPalette.default",
        borderColor: "colorPalette.default",
        outlineColor: "bg.default",
        outlineStyle: "solid",
        _hover: {
          background: "colorPalette.default"
        }
      },
      _disabled: {
        borderColor: "border.disabled",
        color: "fg.disabled",
        _hover: {
          bg: "initial",
          color: "fg.disabled"
        }
      }
    },
    item: {
      alignItems: "center",
      cursor: "pointer",
      display: "flex",
      _disabled: {
        cursor: "not-allowed"
      }
    },
    itemText: {
      color: "fg.default",
      fontWeight: "medium",
      _disabled: {
        color: "fg.disabled"
      }
    }
  },
  defaultVariants: {
    size: "md"
  },
  variants: {
    size: {
      sm: {
        root: {
          gap: {
            _vertical: "3",
            _horizontal: "4"
          }
        },
        item: {
          gap: "2"
        },
        itemControl: {
          width: "4",
          height: "4",
          _checked: {
            outlineWidth: "3px",
            outlineOffset: "-4px"
          }
        },
        itemText: {
          textStyle: "sm"
        }
      },
      md: {
        root: {
          gap: {
            _vertical: "4",
            _horizontal: "6"
          }
        },
        item: {
          gap: "3"
        },
        itemControl: {
          width: "5",
          height: "5",
          _checked: {
            outlineWidth: "4px",
            outlineOffset: "-5px"
          }
        },
        itemText: {
          textStyle: "md"
        }
      },
      lg: {
        root: {
          gap: {
            _vertical: "5",
            _horizontal: "8"
          }
        },
        item: {
          gap: "4"
        },
        itemControl: {
          width: "6",
          height: "6",
          _checked: {
            outlineWidth: "5px",
            outlineOffset: "-6px"
          }
        },
        itemText: {
          textStyle: "lg"
        }
      }
    }
  }
});

// src/theme/recipes/rating-group.ts
import { ratingGroupAnatomy } from "@ark-ui/anatomy";
import { defineSlotRecipe as defineSlotRecipe28 } from "@pandacss/dev";
var ratingGroup = defineSlotRecipe28({
  className: "ratingGroup",
  slots: ratingGroupAnatomy.keys(),
  base: {
    root: {
      colorPalette: "accent",
      display: "flex",
      flexDirection: "column",
      gap: "1.5"
    },
    label: {
      color: "fg.default",
      fontWeight: "medium"
    },
    control: {
      display: "flex"
    },
    item: {
      cursor: "pointer",
      transitionDuration: "normal",
      transitionProperty: "color, fill",
      transitionTimingFunction: "default",
      fill: "bg.emphasized",
      _highlighted: {
        fill: "colorPalette.default"
      },
      _focusVisible: {
        outline: "none"
      }
    }
  },
  defaultVariants: {
    size: "md"
  },
  variants: {
    size: {
      sm: {
        control: {
          gap: "0"
        },
        item: {
          "& svg": {
            width: "4",
            height: "4"
          }
        },
        label: {
          textStyle: "sm"
        }
      },
      md: {
        control: {
          gap: "0.5"
        },
        item: {
          "& svg": {
            width: "5",
            height: "5"
          }
        },
        label: {
          textStyle: "sm"
        }
      },
      lg: {
        control: {
          gap: "0.5"
        },
        item: {
          "& svg": {
            width: "6",
            height: "6"
          }
        },
        label: {
          textStyle: "md"
        }
      }
    }
  }
});

// src/theme/recipes/segment-group.ts
import { segmentGroupAnatomy } from "@ark-ui/anatomy";
import { defineSlotRecipe as defineSlotRecipe29 } from "@pandacss/dev";
var segmentGroup = defineSlotRecipe29({
  className: "segmentGroup",
  slots: segmentGroupAnatomy.keys(),
  base: {
    root: {
      alignItems: "flex-start",
      colorPalette: "accent",
      display: "flex",
      flexDirection: {
        _horizontal: "row",
        _vertical: "column"
      },
      gap: {
        _horizontal: "4",
        _vertical: "1"
      },
      borderBottomWidth: {
        _horizontal: "1px"
      },
      borderLeftWidth: {
        _vertical: "1px"
      }
    },
    indicator: {
      borderColor: "colorPalette.default",
      _horizontal: {
        bottom: "0",
        borderBottomWidth: "2px",
        transform: "translateY(1px)",
        width: "var(--width)"
      },
      _vertical: {
        borderLeftWidth: "2px",
        height: "var(--height)",
        transform: "translateX(-1px)"
      }
    },
    item: {
      color: "fg.muted",
      cursor: "pointer",
      fontWeight: "medium",
      transitionDuration: "normal",
      transitionProperty: "color",
      transitionTimingFunction: "default",
      _hover: {
        color: "fg.default"
      },
      _checked: {
        fontWeight: "semibold",
        color: "fg.default",
        _hover: {
          color: "fg.default"
        }
      },
      _disabled: {
        color: "fg.disabled",
        cursor: "not-allowed",
        _hover: {
          color: "fg.disabled"
        }
      },
      px: {
        _horizontal: "1",
        _vertical: "3"
      },
      pb: {
        _horizontal: "3"
      },
      py: {
        _vertical: "1.5"
      }
    }
  },
  defaultVariants: {
    size: "md"
  },
  variants: {
    size: {
      sm: {
        item: {
          textStyle: "sm"
        }
      },
      md: {
        item: {
          textStyle: "md"
        }
      }
    }
  }
});

// src/theme/recipes/select.ts
import { selectAnatomy } from "@ark-ui/anatomy";
import { defineSlotRecipe as defineSlotRecipe30 } from "@pandacss/dev";
var select = defineSlotRecipe30({
  className: "select",
  slots: selectAnatomy.keys(),
  base: {
    root: {
      colorPalette: "accent",
      display: "flex",
      flexDirection: "column",
      gap: "1.5",
      width: "full"
    },
    content: {
      background: "bg.default",
      borderRadius: "l2",
      boxShadow: "lg",
      display: "flex",
      flexDirection: "column",
      zIndex: "dropdown",
      _hidden: {
        display: "none"
      },
      _open: {
        animation: "fadeIn 0.25s ease-out"
      },
      _closed: {
        animation: "fadeOut 0.2s ease-out"
      },
      _focusVisible: {
        outlineOffset: "2px",
        outline: "2px solid",
        outlineColor: "border.outline"
      }
    },
    item: {
      alignItems: "center",
      borderRadius: "l1",
      cursor: "pointer",
      display: "flex",
      justifyContent: "space-between",
      transitionDuration: "fast",
      transitionProperty: "background, color",
      transitionTimingFunction: "default",
      _hover: {
        background: "gray.a3",
        color: "fg.default"
      },
      _highlighted: {
        background: "gray.a3",
        color: "fg.default"
      },
      _selected: {
        color: "fg.default"
      },
      _disabled: {
        color: "fg.disabled",
        cursor: "not-allowed",
        _hover: {
          background: "transparent",
          color: "fg.disabled"
        }
      }
    },
    itemGroupLabel: {
      fontWeight: "semibold",
      textStyle: "sm"
    },
    itemIndicator: {
      color: "colorPalette.default"
    },
    label: {
      color: "fg.default",
      fontWeight: "medium"
    },
    trigger: {
      appearance: "none",
      alignItems: "center",
      borderColor: "border.default",
      borderRadius: "l2",
      cursor: "pointer",
      color: "fg.default",
      display: "inline-flex",
      justifyContent: "space-between",
      outline: 0,
      position: "relative",
      transitionDuration: "normal",
      transitionProperty: "background, box-shadow, border-color",
      transitionTimingFunction: "default",
      width: "full",
      _placeholderShown: {
        color: "fg.subtle"
      },
      _disabled: {
        color: "fg.disabled",
        cursor: "not-allowed",
        "& :where(svg)": {
          color: "fg.disabled"
        }
      },
      "& :where(svg)": {
        color: "fg.subtle"
      }
    }
  },
  defaultVariants: {
    size: "md",
    variant: "outline"
  },
  variants: {
    variant: {
      outline: {
        trigger: {
          borderWidth: "1px",
          _focus: {
            borderColor: "colorPalette.default",
            boxShadow: "0 0 0 1px var(--colors-color-palette-default)"
          }
        }
      },
      ghost: {
        trigger: {
          _hover: {
            background: "gray.a3"
          },
          _focus: {
            background: "gray.a3"
          }
        }
      }
    },
    size: {
      sm: {
        content: { p: "0.5", gap: "1" },
        item: { textStyle: "sm", px: "2", height: "9" },
        itemIndicator: {
          "& :where(svg)": {
            width: "4",
            height: "4"
          }
        },
        itemGroupLabel: {
          px: "2",
          py: "1.5"
        },
        label: { textStyle: "sm" },
        trigger: {
          px: "2.5",
          h: "9",
          minW: "9",
          fontSize: "sm",
          gap: "2",
          "& :where(svg)": {
            width: "4",
            height: "4"
          }
        }
      },
      md: {
        content: { p: "1", gap: "1" },
        item: { textStyle: "md", px: "2", height: "10" },
        itemIndicator: {
          "& :where(svg)": {
            width: "4",
            height: "4"
          }
        },
        itemGroupLabel: {
          px: "2",
          py: "1.5"
        },
        label: { textStyle: "sm" },
        trigger: {
          px: "3",
          h: "10",
          minW: "10",
          fontSize: "md",
          gap: "2",
          "& :where(svg)": {
            width: "4",
            height: "4"
          }
        }
      },
      lg: {
        content: { p: "1.5", gap: "1" },
        item: { textStyle: "md", px: "2", height: "11" },
        itemIndicator: {
          "& :where(svg)": {
            width: "5",
            height: "5"
          }
        },
        itemGroupLabel: {
          px: "2",
          py: "1.5"
        },
        label: { textStyle: "sm" },
        trigger: {
          px: "3.5",
          h: "11",
          minW: "11",
          fontSize: "md",
          gap: "2",
          "& :where(svg)": {
            width: "5",
            height: "5"
          }
        }
      }
    }
  }
});

// src/theme/recipes/signature-pad.ts
import { signaturePadAnatomy } from "@ark-ui/anatomy";
import { defineSlotRecipe as defineSlotRecipe31 } from "@pandacss/dev";
var signaturePad = defineSlotRecipe31({
  className: "signaturePad",
  slots: signaturePadAnatomy.keys(),
  base: {}
});

// src/theme/recipes/skeleton.ts
import { defineRecipe as defineRecipe9 } from "@pandacss/dev";
var skeleton = defineRecipe9({
  className: "skeleton",
  base: {
    animation: "skeleton-pulse",
    backgroundClip: "padding-box",
    backgroundColor: "gray.a4",
    borderRadius: "l3",
    color: "transparent",
    cursor: "default",
    pointerEvents: "none",
    userSelect: "none",
    "&::before, &::after, *": {
      visibility: "hidden"
    }
  }
});

// src/theme/recipes/slider.ts
import { sliderAnatomy } from "@ark-ui/anatomy";
import { defineSlotRecipe as defineSlotRecipe32 } from "@pandacss/dev";
var slider = defineSlotRecipe32({
  className: "slider",
  slots: sliderAnatomy.keys(),
  base: {
    root: {
      colorPalette: "accent",
      display: "flex",
      flexDirection: "column",
      gap: "1",
      width: "full"
    },
    control: {
      position: "relative",
      display: "flex",
      alignItems: "center"
    },
    track: {
      backgroundColor: "bg.emphasized",
      borderRadius: "full",
      overflow: "hidden",
      flex: "1"
    },
    range: {
      background: "colorPalette.default"
    },
    thumb: {
      background: "bg.default",
      borderColor: "colorPalette.default",
      borderRadius: "full",
      borderWidth: "2px",
      boxShadow: "sm",
      outline: "none",
      zIndex: "1"
    },
    label: {
      color: "fg.default",
      fontWeight: "medium"
    },
    markerGroup: {
      mt: "-1"
    },
    marker: {
      "--before-background": {
        _light: "white",
        _dark: "colors.colorPalette.fg"
      },
      color: "fg.muted",
      _before: {
        background: "white",
        borderRadius: "full",
        content: "''",
        display: "block",
        left: "50%",
        position: "relative",
        transform: "translateX(-50%)"
      },
      _underValue: {
        _before: {
          background: "var(--before-background)"
        }
      }
    }
  },
  defaultVariants: {
    size: "md"
  },
  variants: {
    size: {
      sm: {
        control: {
          height: "4"
        },
        range: {
          height: "1.5"
        },
        track: {
          height: "1.5"
        },
        thumb: {
          height: "4",
          width: "4"
        },
        marker: {
          _before: {
            height: "1",
            top: "-2.5",
            width: "1"
          },
          textStyle: "sm"
        },
        label: {
          textStyle: "sm"
        }
      },
      md: {
        control: {
          height: "5"
        },
        range: {
          height: "2"
        },
        track: {
          height: "2"
        },
        thumb: {
          height: "5",
          width: "5"
        },
        marker: {
          _before: {
            height: "1",
            top: "-3",
            width: "1"
          },
          textStyle: "sm"
        },
        label: {
          textStyle: "sm"
        }
      },
      lg: {
        control: {
          height: "6"
        },
        range: {
          height: "2.5"
        },
        track: {
          height: "2.5"
        },
        thumb: {
          height: "6",
          width: "6"
        },
        marker: {
          _before: {
            height: "1.5",
            top: "-15px",
            width: "1.5"
          },
          textStyle: "md"
        },
        label: {
          textStyle: "md"
        }
      }
    }
  }
});

// src/theme/recipes/spinner.ts
import { defineRecipe as defineRecipe10 } from "@pandacss/dev";
var spinner = defineRecipe10({
  className: "spinner",
  base: {
    colorPalette: "accent",
    display: "inline-block",
    borderWidth: "2px",
    borderColor: "colorPalette.default",
    borderStyle: "solid",
    borderRadius: "full",
    width: "var(--size)",
    height: "var(--size)",
    animation: "spin",
    animationDuration: "slowest"
  },
  defaultVariants: {
    size: "md"
  },
  variants: {
    size: {
      xs: { "--size": "sizes.3" },
      sm: { "--size": "sizes.4" },
      md: { "--size": "sizes.6" },
      lg: { "--size": "sizes.8" },
      xl: { "--size": "sizes.12" }
    }
  }
});

// src/theme/recipes/splitter.ts
import { splitterAnatomy } from "@ark-ui/anatomy";
import { defineSlotRecipe as defineSlotRecipe33 } from "@pandacss/dev";
var splitter = defineSlotRecipe33({
  className: "splitter",
  slots: splitterAnatomy.keys(),
  base: {
    root: {
      display: "flex",
      gap: "2"
    },
    panel: {
      borderWidth: "1px",
      background: "bg.default",
      borderRadius: "l2",
      color: "fg.muted",
      display: "flex",
      alignItems: "center",
      justifyContent: "center"
    },
    resizeTrigger: {
      borderRadius: "full",
      transitionDuration: "normal",
      transitionProperty: "background",
      transitionTimingFunction: "default",
      outline: "0",
      background: "gray.7",
      _hover: {
        background: "gray.8"
      },
      _active: {
        background: "gray.8"
      },
      _horizontal: {
        minWidth: "1.5",
        margin: "min(1rem, 20%) 0"
      },
      _vertical: {
        minHeight: "1.5",
        margin: "0 min(1rem, 20%)"
      }
    }
  }
});

// src/theme/recipes/switch.ts
import { switchAnatomy } from "@ark-ui/anatomy";
import { defineSlotRecipe as defineSlotRecipe34 } from "@pandacss/dev";
var switchRecipe = defineSlotRecipe34({
  className: "switchRecipe",
  jsx: ["Switch", /Switch\.+/],
  slots: switchAnatomy.keys(),
  base: {
    root: {
      alignItems: "center",
      colorPalette: "accent",
      display: "flex",
      position: "relative"
    },
    control: {
      alignItems: "center",
      background: "bg.emphasized",
      borderRadius: "full",
      cursor: "pointer",
      display: "inline-flex",
      flexShrink: "0",
      transitionDuration: "normal",
      transitionProperty: "background",
      transitionTimingFunction: "default",
      _checked: {
        background: "colorPalette.default"
      }
    },
    label: {
      color: "fg.default",
      fontWeight: "medium"
    },
    thumb: {
      background: "bg.default",
      borderRadius: "full",
      boxShadow: "xs",
      transitionDuration: "normal",
      transitionProperty: "transform, background",
      transitionTimingFunction: "default",
      _checked: {
        transform: "translateX(100%)",
        background: { _light: "bg.default", _dark: "colorPalette.fg" }
      }
    }
  },
  defaultVariants: {
    size: "md"
  },
  variants: {
    size: {
      sm: {
        root: {
          gap: "2"
        },
        control: {
          width: "7",
          p: "0.5"
        },
        thumb: {
          width: "3",
          height: "3"
        },
        label: {
          textStyle: "sm"
        }
      },
      md: {
        root: {
          gap: "3"
        },
        control: {
          width: "9",
          p: "0.5"
        },
        thumb: {
          width: "4",
          height: "4"
        },
        label: {
          textStyle: "md"
        }
      },
      lg: {
        root: {
          gap: "4"
        },
        control: {
          width: "11",
          p: "0.5"
        },
        thumb: {
          width: "5",
          height: "5"
        },
        label: {
          textStyle: "lg"
        }
      }
    }
  }
});

// src/theme/recipes/table.ts
import { defineSlotRecipe as defineSlotRecipe35 } from "@pandacss/dev";
var table = defineSlotRecipe35({
  className: "table",
  slots: ["root", "body", "cell", "footer", "head", "header", "row", "caption"],
  base: {
    root: {
      captionSide: "bottom",
      width: "full"
    },
    body: {
      "& tr:last-child": {
        borderBottomWidth: "0"
      }
    },
    caption: {
      color: "fg.subtle"
    },
    cell: {
      verticalAlign: "middle"
    },
    footer: {
      fontWeight: "medium",
      borderTopWidth: "1px",
      "& tr:last-child": {
        borderBottomWidth: "0"
      }
    },
    header: {
      color: "fg.muted",
      fontWeight: "medium",
      textAlign: "left",
      verticalAlign: "middle"
    },
    row: {
      borderBottomWidth: "1px",
      transitionDuration: "normal",
      transitionProperty: "background, color",
      transitionTimingFunction: "default"
    }
  },
  defaultVariants: {
    size: "md",
    variant: "plain"
  },
  variants: {
    variant: {
      outline: {
        root: {
          borderWidth: "1px"
        },
        head: {
          bg: "bg.subtle"
        }
      },
      plain: {
        row: {
          _hover: {
            bg: "bg.subtle"
          },
          _selected: {
            bg: "bg.muted"
          }
        }
      }
    },
    size: {
      sm: {
        root: {
          textStyle: "sm"
        },
        caption: {
          mt: "4"
        },
        cell: {
          height: "11",
          px: "3"
        },
        header: {
          height: "11",
          px: "3"
        }
      },
      md: {
        root: {
          textStyle: "sm"
        },
        caption: {
          mt: "4"
        },
        cell: {
          height: "14",
          px: "4"
        },
        header: {
          height: "11",
          px: "4"
        }
      }
    }
  }
});

// src/theme/recipes/tabs.ts
import { tabsAnatomy } from "@ark-ui/anatomy";
import { defineSlotRecipe as defineSlotRecipe36 } from "@pandacss/dev";
var tabs = defineSlotRecipe36({
  className: "tabs",
  slots: tabsAnatomy.keys(),
  base: {
    root: {
      colorPalette: "accent",
      display: "flex",
      width: "full",
      _horizontal: {
        flexDirection: "column"
      },
      _vertical: {
        flexDirection: "row"
      }
    },
    list: {
      display: "flex",
      flexShrink: "0",
      _horizontal: {
        flexDirection: "row"
      },
      _vertical: {
        flexDirection: "column"
      },
      overflow: "auto",
      position: "relative",
      scrollbarWidth: "none",
      "&::-webkit-scrollbar": {
        display: "none"
      }
    },
    trigger: {
      alignItems: "center",
      color: "fg.muted",
      cursor: "pointer",
      display: "inline-flex",
      flexShrink: "0",
      fontWeight: "semibold",
      gap: "2",
      justifyContent: "center",
      transitionDuration: "normal",
      transitionProperty: "color, background, border-color",
      transitionTimingFunction: "default",
      whiteSpace: "nowrap",
      zIndex: "1",
      _disabled: {
        color: "fg.disabled",
        cursor: "not-allowed",
        _hover: {
          color: "fg.disabled"
        }
      },
      _hover: {
        color: "fg.muted"
      },
      _selected: {
        color: "fg.default",
        _hover: {
          color: "fg.default"
        }
      },
      _vertical: {
        justifyContent: "flex-start"
      }
    }
  },
  defaultVariants: {
    size: "md",
    variant: "line"
  },
  variants: {
    variant: {
      enclosed: {
        list: {
          borderRadius: "l3",
          borderWidth: "1px",
          px: "1",
          backgroundColor: {
            _light: "gray.a2",
            _dark: "bg.canvas"
          },
          _horizontal: {
            alignItems: "center"
          },
          _vertical: {
            height: "fit-content!",
            py: "1"
          }
        },
        indicator: {
          backgroundColor: {
            _light: "bg.default",
            _dark: "bg.subtle"
          },
          boxShadow: "xs",
          borderRadius: "l2",
          "--transition-duration": "200ms!",
          height: "var(--height)",
          width: "var(--width)"
        }
      },
      line: {
        list: {
          _horizontal: {
            boxShadow: "0 -1px 0 0 inset var(--colors-border-default)",
            gap: "4"
          },
          _vertical: {
            boxShadow: "1px 0 0 0 inset var(--colors-border-default)",
            gap: "1"
          }
        },
        indicator: {
          background: "colorPalette.default",
          _horizontal: {
            bottom: "0",
            height: "2px",
            width: "var(--width)"
          },
          _vertical: {
            height: "var(--height)",
            left: "0",
            width: "2px"
          }
        },
        content: {
          pt: "4"
        },
        trigger: {
          _horizontal: {
            pb: "2.5"
          }
        }
      },
      outline: {
        list: {
          _horizontal: {
            mb: "-1px"
          },
          _vertical: {
            mr: "-1px"
          }
        },
        trigger: {
          borderColor: "transparent",
          borderWidth: "1px",
          _horizontal: {
            borderTopRadius: "l2"
          },
          _vertical: {
            borderTopLeftRadius: "l2",
            borderBottomLeftRadius: "l2"
          },
          _selected: {
            background: "bg.default",
            borderColor: "border.subtle",
            _horizontal: {
              borderBottomColor: "transparent"
            },
            _vertical: {
              borderRightColor: "transparent"
            }
          }
        },
        content: {
          borderWidth: "1px",
          borderColor: "border.subtle",
          background: "bg.default",
          width: "full"
        }
      }
    },
    size: {
      sm: {
        trigger: {
          "& svg": {
            width: "4",
            height: "4"
          }
        }
      },
      md: {
        trigger: {
          "& svg": {
            width: "5",
            height: "5"
          }
        }
      },
      lg: {
        trigger: {
          "& svg": {
            width: "5",
            height: "5"
          }
        }
      }
    }
  },
  compoundVariants: [
    {
      size: "sm",
      variant: "enclosed",
      css: {
        list: {
          height: "10"
        },
        trigger: {
          h: "8",
          minW: "8",
          textStyle: "sm",
          px: "3"
        },
        content: {
          p: "3.5"
        }
      }
    },
    {
      size: "md",
      variant: "enclosed",
      css: {
        list: {
          height: "11"
        },
        trigger: {
          h: "9",
          minW: "9",
          textStyle: "sm",
          px: "3.5"
        },
        content: {
          p: "4"
        }
      }
    },
    {
      size: "lg",
      variant: "enclosed",
      css: {
        list: {
          height: "12"
        },
        trigger: {
          h: "10",
          minW: "10",
          textStyle: "sm",
          px: "4"
        },
        content: {
          p: "4.5"
        }
      }
    },
    {
      size: "sm",
      variant: "outline",
      css: {
        trigger: {
          h: "9",
          minW: "9",
          textStyle: "sm",
          px: "3.5"
        },
        content: {
          p: "3.5"
        }
      }
    },
    {
      size: "md",
      variant: "outline",
      css: {
        trigger: {
          h: "10",
          minW: "10",
          textStyle: "sm",
          px: "4"
        },
        content: {
          p: "4"
        }
      }
    },
    {
      size: "lg",
      variant: "outline",
      css: {
        trigger: {
          h: "11",
          minW: "11",
          textStyle: "md",
          px: "4.5"
        },
        content: {
          p: "4.5"
        }
      }
    },
    {
      size: "sm",
      variant: "line",
      css: {
        trigger: {
          fontSize: "sm",
          h: "9",
          minW: "9",
          px: "2.5"
        },
        content: {
          pt: "3"
        }
      }
    },
    {
      size: "md",
      variant: "line",
      css: {
        trigger: {
          fontSize: "md",
          h: "10",
          minW: "10",
          px: "3"
        },
        content: {
          pt: "4"
        }
      }
    },
    {
      size: "lg",
      variant: "line",
      css: {
        trigger: {
          px: "3.5",
          h: "11",
          minW: "11",
          fontSize: "md"
        },
        content: {
          pt: "5"
        }
      }
    }
  ]
});

// src/theme/recipes/tags-input.ts
import { tagsInputAnatomy } from "@ark-ui/anatomy";
import { defineSlotRecipe as defineSlotRecipe37 } from "@pandacss/dev";
var tagsInput = defineSlotRecipe37({
  className: "tagsInput",
  slots: tagsInputAnatomy.keys(),
  base: {
    root: {
      colorPalette: "accent",
      display: "flex",
      flexDirection: "column",
      gap: "1.5",
      width: "full"
    },
    control: {
      alignItems: "center",
      borderColor: "border.default",
      borderRadius: "l2",
      borderWidth: "1px",
      display: "flex",
      flexWrap: "wrap",
      outline: 0,
      transitionDuration: "normal",
      transitionProperty: "border-color, box-shadow",
      transitionTimingFunction: "default",
      _focusWithin: {
        borderColor: "colorPalette.default",
        boxShadow: "0 0 0 1px var(--colors-color-palette-default)"
      }
    },
    input: {
      background: "transparent",
      color: "fg.default",
      outline: "none"
    },
    itemPreview: {
      alignItems: "center",
      borderColor: "border.default",
      borderRadius: "l1",
      borderWidth: "1px",
      color: "fg.default",
      display: "inline-flex",
      fontWeight: "medium",
      _highlighted: {
        borderColor: "colorPalette.default",
        boxShadow: "0 0 0 1px var(--colors-color-palette-default)"
      },
      _hidden: {
        display: "none"
      }
    },
    itemInput: {
      background: "transparent",
      color: "fg.default",
      outline: "none"
    },
    label: {
      color: "fg.default",
      fontWeight: "medium",
      textStyle: "sm"
    }
  },
  defaultVariants: {
    size: "md"
  },
  variants: {
    size: {
      md: {
        root: {
          gap: "1.5"
        },
        control: {
          fontSize: "md",
          gap: "1.5",
          minW: "10",
          px: "3",
          py: "7px"
          // TODO line break
        },
        itemPreview: {
          gap: "1",
          h: "6",
          pe: "1",
          ps: "2",
          textStyle: "sm"
        }
      }
    }
  }
});

// src/theme/recipes/text.ts
import { defineRecipe as defineRecipe11 } from "@pandacss/dev";
var text = defineRecipe11({
  className: "text",
  jsx: ["Heading", "Text"],
  variants: {
    variant: {
      heading: {
        color: "fg.default",
        fontWeight: "semibold"
      }
    },
    size: {
      xs: { textStyle: "xs", lineHeight: "1.125rem" },
      sm: { textStyle: "sm", lineHeight: "1.25rem" },
      md: { textStyle: "md", lineHeight: "1.5rem" },
      lg: { textStyle: "lg", lineHeight: "1.75rem" },
      xl: { textStyle: "xl", lineHeight: "1.875rem" },
      "2xl": { textStyle: "2xl", lineHeight: "2rem" },
      "3xl": { textStyle: "3xl", lineHeight: "2.375rem" },
      "4xl": { textStyle: "4xl", lineHeight: "2.75rem", letterSpacing: "-0.02em" },
      "5xl": { textStyle: "5xl", lineHeight: "3.75rem", letterSpacing: "-0.02em" },
      "6xl": { textStyle: "6xl", lineHeight: "4.5rem", letterSpacing: "-0.02em" },
      "7xl": { textStyle: "7xl", lineHeight: "5.75rem", letterSpacing: "-0.02em" }
    }
  }
});

// src/theme/recipes/textarea.ts
import { defineRecipe as defineRecipe12 } from "@pandacss/dev";
var textarea = defineRecipe12({
  className: "textarea",
  jsx: ["Textarea", "Field.Textarea"],
  base: {
    appearance: "none",
    background: "none",
    borderColor: "border.default",
    borderRadius: "l2",
    borderWidth: "1px",
    colorPalette: "accent",
    minWidth: 0,
    outline: 0,
    position: "relative",
    transitionDuration: "normal",
    transitionProperty: "border-color, box-shadow",
    width: "full",
    _disabled: {
      opacity: 0.4,
      cursor: "not-allowed"
    },
    _focus: {
      borderColor: "colorPalette.default",
      boxShadow: "0 0 0 1px var(--colors-color-palette-default)"
    },
    _invalid: {
      borderColor: "fg.error",
      _focus: {
        borderColor: "fg.error",
        boxShadow: "0 0 0 1px var(--colors-border-error)"
      }
    }
  },
  defaultVariants: {
    size: "md"
  },
  variants: {
    size: {
      sm: { p: "2.5", fontSize: "sm" },
      md: { p: "3", fontSize: "md" },
      lg: { p: "3.5", fontSize: "md" },
      xl: { p: "4", fontSize: "md" }
    }
  }
});

// src/theme/recipes/toast.ts
import { toastAnatomy } from "@ark-ui/anatomy";
import { defineSlotRecipe as defineSlotRecipe38 } from "@pandacss/dev";
var toast = defineSlotRecipe38({
  className: "toast",
  slots: toastAnatomy.keys(),
  base: {
    root: {
      background: "bg.default",
      borderRadius: "l3",
      boxShadow: "lg",
      minWidth: "xs",
      height: "var(--height)",
      opacity: "var(--opacity)",
      overflowWrap: "anywhere",
      p: "4",
      position: "relative",
      scale: "var(--scale)",
      translate: "var(--x) var(--y) 0",
      willChange: "translate, opacity, scale",
      zIndex: "var(--z-index)",
      transitionDuration: "slow",
      transitionProperty: "translate, scale, opacity, height",
      transitionTimingFunction: "default"
    },
    title: {
      color: "fg.default",
      fontWeight: "semibold",
      textStyle: "sm"
    },
    description: {
      color: "fg.muted",
      textStyle: "sm"
    },
    actionTrigger: {
      mt: "2"
    },
    closeTrigger: {
      position: "absolute",
      top: "3",
      right: "3"
    }
  }
});

// src/theme/recipes/toggle-group.ts
import { toggleGroupAnatomy } from "@ark-ui/anatomy";
import { defineSlotRecipe as defineSlotRecipe39 } from "@pandacss/dev";
var toggleGroup = defineSlotRecipe39({
  className: "toggleGroup",
  slots: toggleGroupAnatomy.keys(),
  base: {
    root: {
      display: "flex",
      overflow: "hidden",
      position: "relative",
      _vertical: {
        flexDirection: "column"
      }
    },
    item: {
      alignItems: "center",
      appearance: "none",
      cursor: "pointer",
      color: "fg.subtle",
      display: "inline-flex",
      fontWeight: "semibold",
      minWidth: "0",
      justifyContent: "center",
      outline: "none",
      position: "relative",
      transitionDuration: "normal",
      transitionProperty: "background, border-color, color, box-shadow",
      transitionTimingFunction: "default",
      userSelect: "none",
      verticalAlign: "middle",
      whiteSpace: "nowrap",
      _on: {
        background: "gray.a3",
        color: "fg.default",
        _hover: {
          background: "gray.a3"
        }
      },
      _hover: {
        background: "gray.a2"
      },
      _disabled: {
        borderColor: "border.disabled",
        color: "fg.disabled",
        cursor: "not-allowed",
        _hover: {
          background: "transparent",
          borderColor: "border.disabled",
          color: "fg.disabled"
        }
      }
    }
  },
  defaultVariants: {
    size: "md",
    variant: "outline"
  },
  variants: {
    variant: {
      outline: {
        root: {
          borderWidth: "1px",
          borderRadius: "l2",
          borderColor: "border.default",
          _horizontal: {
            divideX: "1px"
          },
          _vertical: {
            divideY: "1px"
          }
        },
        item: {
          borderColor: "border.default",
          _focusVisible: {
            color: "fg.default",
            background: "gray.a3"
          }
        }
      },
      ghost: {
        root: {
          gap: "1"
        },
        item: {
          borderRadius: "l2",
          _focusVisible: {
            outlineOffset: "2px",
            outline: "2px solid",
            outlineColor: "border.outline"
          }
        }
      }
    },
    size: {
      sm: {
        item: {
          h: "9",
          minW: "9",
          textStyle: "sm",
          gap: "2",
          "& svg": {
            width: "4.5",
            height: "4.5"
          }
        }
      },
      md: {
        item: {
          h: "10",
          minW: "10",
          textStyle: "sm",
          gap: "2",
          "& svg": {
            width: "5",
            height: "5"
          }
        }
      },
      lg: {
        item: {
          h: "11",
          minW: "11",
          textStyle: "md",
          gap: "2",
          "& svg": {
            width: "5",
            height: "5"
          }
        }
      }
    }
  }
});

// src/theme/recipes/tooltip.ts
import { tooltipAnatomy } from "@ark-ui/anatomy";
import { defineSlotRecipe as defineSlotRecipe40 } from "@pandacss/dev";
var tooltip = defineSlotRecipe40({
  className: "tooltip",
  slots: tooltipAnatomy.keys(),
  base: {
    content: {
      background: "gray.a12",
      borderRadius: "l2",
      boxShadow: "sm",
      color: "bg.default",
      fontWeight: "semibold",
      px: "3",
      py: "2",
      textStyle: "xs",
      maxWidth: "2xs",
      zIndex: "tooltip",
      _open: {
        animation: "fadeIn 0.25s ease-out"
      },
      _closed: {
        animation: "fadeOut 0.2s ease-out"
      }
    }
  }
});

// src/theme/recipes/tree-view.ts
import { treeViewAnatomy } from "@ark-ui/anatomy";
import { defineSlotRecipe as defineSlotRecipe41 } from "@pandacss/dev";
var treeView = defineSlotRecipe41({
  className: "treeView",
  slots: treeViewAnatomy.keys(),
  base: {
    root: {
      width: "full"
    },
    branch: {
      "&[data-depth='1'] > [data-part='branch-content']": {
        _before: {
          bg: "border.default",
          content: '""',
          height: "full",
          left: "3",
          position: "absolute",
          width: "1px",
          zIndex: "1"
        }
      }
    },
    branchContent: {
      position: "relative"
    },
    branchControl: {
      alignItems: "center",
      borderRadius: "l2",
      color: "fg.muted",
      display: "flex",
      fontWeight: "medium",
      gap: "1.5",
      ps: "calc((var(--depth) - 1) * 22px)",
      py: "1.5",
      textStyle: "sm",
      transitionDuration: "normal",
      transitionProperty: "background, color",
      transitionTimingFunction: "default",
      "&[data-depth='1']": {
        ps: "1"
      },
      "&[data-depth='1'] > [data-part='branch-text'] ": {
        fontWeight: "semibold",
        color: "fg.default"
      },
      _hover: {
        background: "gray.a2",
        color: "fg.default"
      }
    },
    branchIndicator: {
      color: "accent.default",
      transformOrigin: "center",
      transitionDuration: "normal",
      transitionProperty: "transform",
      transitionTimingFunction: "default",
      "& svg": {
        fontSize: "md",
        width: "4",
        height: "4"
      },
      _open: {
        transform: "rotate(90deg)"
      }
    },
    item: {
      borderRadius: "l2",
      color: "fg.muted",
      cursor: "pointer",
      fontWeight: "medium",
      position: "relative",
      ps: "calc(((var(--depth) - 1) * 22px) + 22px)",
      py: "1.5",
      textStyle: "sm",
      transitionDuration: "normal",
      transitionProperty: "background, color",
      transitionTimingFunction: "default",
      "&[data-depth='1']": {
        ps: "6",
        fontWeight: "semibold",
        color: "fg.default",
        _selected: {
          _before: {
            bg: "transparent"
          }
        }
      },
      _hover: {
        background: "gray.a2",
        color: "fg.default"
      },
      _selected: {
        background: "accent.a2",
        color: "accent.text",
        _hover: {
          background: "accent.a2",
          color: "accent.text"
        },
        _before: {
          content: '""',
          position: "absolute",
          left: "3",
          top: "0",
          width: "2px",
          height: "full",
          bg: "accent.default",
          zIndex: "1"
        }
      }
    },
    tree: {
      display: "flex",
      flexDirection: "column",
      gap: "3"
    }
  }
});

// src/theme/recipes/index.ts
var recipes = {
  badge,
  button,
  code,
  formLabel,
  icon,
  input,
  kbd,
  link,
  skeleton,
  spinner,
  textarea,
  text
};
var slotRecipes = {
  accordion,
  alert,
  avatar,
  card,
  carousel,
  checkbox,
  clipboard,
  collapsible,
  colorPicker,
  combobox,
  datePicker,
  dialog,
  drawer,
  editable,
  field,
  fieldset,
  fileUpload,
  hoverCard,
  menu,
  numberInput,
  pagination,
  pinInput,
  popover,
  progress,
  radioButtonGroup,
  radioGroup,
  ratingGroup,
  segmentGroup,
  select,
  signaturePad,
  slider,
  splitter,
  switchRecipe,
  table,
  tabs,
  tagsInput,
  toast,
  toggleGroup,
  tooltip,
  treeView,
  qrCode
};

// src/theme/semantic-tokens/index.ts
import { defineSemanticTokens as defineSemanticTokens3 } from "@pandacss/dev";

// src/theme/semantic-tokens/colors/amber.ts
var amber = {
  1: { value: { _light: "{colors.amber.light.1}", _dark: "{colors.amber.dark.1}" } },
  2: { value: { _light: "{colors.amber.light.2}", _dark: "{colors.amber.dark.2}" } },
  3: { value: { _light: "{colors.amber.light.3}", _dark: "{colors.amber.dark.3}" } },
  4: { value: { _light: "{colors.amber.light.4}", _dark: "{colors.amber.dark.4}" } },
  5: { value: { _light: "{colors.amber.light.5}", _dark: "{colors.amber.dark.5}" } },
  6: { value: { _light: "{colors.amber.light.6}", _dark: "{colors.amber.dark.6}" } },
  7: { value: { _light: "{colors.amber.light.7}", _dark: "{colors.amber.dark.7}" } },
  8: { value: { _light: "{colors.amber.light.8}", _dark: "{colors.amber.dark.8}" } },
  9: { value: { _light: "{colors.amber.light.9}", _dark: "{colors.amber.dark.9}" } },
  10: { value: { _light: "{colors.amber.light.10}", _dark: "{colors.amber.dark.10}" } },
  11: { value: { _light: "{colors.amber.light.11}", _dark: "{colors.amber.dark.11}" } },
  12: { value: { _light: "{colors.amber.light.12}", _dark: "{colors.amber.dark.12}" } },
  a1: { value: { _light: "{colors.amber.light.a1}", _dark: "{colors.amber.dark.a1}" } },
  a2: { value: { _light: "{colors.amber.light.a2}", _dark: "{colors.amber.dark.a2}" } },
  a3: { value: { _light: "{colors.amber.light.a3}", _dark: "{colors.amber.dark.a3}" } },
  a4: { value: { _light: "{colors.amber.light.a4}", _dark: "{colors.amber.dark.a4}" } },
  a5: { value: { _light: "{colors.amber.light.a5}", _dark: "{colors.amber.dark.a5}" } },
  a6: { value: { _light: "{colors.amber.light.a6}", _dark: "{colors.amber.dark.a6}" } },
  a7: { value: { _light: "{colors.amber.light.a7}", _dark: "{colors.amber.dark.a7}" } },
  a8: { value: { _light: "{colors.amber.light.a8}", _dark: "{colors.amber.dark.a8}" } },
  a9: { value: { _light: "{colors.amber.light.a9}", _dark: "{colors.amber.dark.a9}" } },
  a10: { value: { _light: "{colors.amber.light.a10}", _dark: "{colors.amber.dark.a10}" } },
  a11: { value: { _light: "{colors.amber.light.a11}", _dark: "{colors.amber.dark.a11}" } },
  a12: { value: { _light: "{colors.amber.light.a12}", _dark: "{colors.amber.dark.a12}" } },
  default: { value: { _light: "{colors.amber.9}", _dark: "{colors.amber.9}" } },
  emphasized: { value: { _light: "{colors.amber.10}", _dark: "{colors.amber.10}" } },
  fg: { value: { _light: "{colors.sand.light.12}", _dark: "{colors.sand.light.12}" } },
  text: { value: { _light: "{colors.amber.a11}", _dark: "{colors.amber.a11}" } }
};

// src/theme/semantic-tokens/colors/blue.ts
var blue = {
  1: { value: { _light: "{colors.blue.light.1}", _dark: "{colors.blue.dark.1}" } },
  2: { value: { _light: "{colors.blue.light.2}", _dark: "{colors.blue.dark.2}" } },
  3: { value: { _light: "{colors.blue.light.3}", _dark: "{colors.blue.dark.3}" } },
  4: { value: { _light: "{colors.blue.light.4}", _dark: "{colors.blue.dark.4}" } },
  5: { value: { _light: "{colors.blue.light.5}", _dark: "{colors.blue.dark.5}" } },
  6: { value: { _light: "{colors.blue.light.6}", _dark: "{colors.blue.dark.6}" } },
  7: { value: { _light: "{colors.blue.light.7}", _dark: "{colors.blue.dark.7}" } },
  8: { value: { _light: "{colors.blue.light.8}", _dark: "{colors.blue.dark.8}" } },
  9: { value: { _light: "{colors.blue.light.9}", _dark: "{colors.blue.dark.9}" } },
  10: { value: { _light: "{colors.blue.light.10}", _dark: "{colors.blue.dark.10}" } },
  11: { value: { _light: "{colors.blue.light.11}", _dark: "{colors.blue.dark.11}" } },
  12: { value: { _light: "{colors.blue.light.12}", _dark: "{colors.blue.dark.12}" } },
  a1: { value: { _light: "{colors.blue.light.a1}", _dark: "{colors.blue.dark.a1}" } },
  a2: { value: { _light: "{colors.blue.light.a2}", _dark: "{colors.blue.dark.a2}" } },
  a3: { value: { _light: "{colors.blue.light.a3}", _dark: "{colors.blue.dark.a3}" } },
  a4: { value: { _light: "{colors.blue.light.a4}", _dark: "{colors.blue.dark.a4}" } },
  a5: { value: { _light: "{colors.blue.light.a5}", _dark: "{colors.blue.dark.a5}" } },
  a6: { value: { _light: "{colors.blue.light.a6}", _dark: "{colors.blue.dark.a6}" } },
  a7: { value: { _light: "{colors.blue.light.a7}", _dark: "{colors.blue.dark.a7}" } },
  a8: { value: { _light: "{colors.blue.light.a8}", _dark: "{colors.blue.dark.a8}" } },
  a9: { value: { _light: "{colors.blue.light.a9}", _dark: "{colors.blue.dark.a9}" } },
  a10: { value: { _light: "{colors.blue.light.a10}", _dark: "{colors.blue.dark.a10}" } },
  a11: { value: { _light: "{colors.blue.light.a11}", _dark: "{colors.blue.dark.a11}" } },
  a12: { value: { _light: "{colors.blue.light.a12}", _dark: "{colors.blue.dark.a12}" } },
  default: { value: { _light: "{colors.blue.9}", _dark: "{colors.blue.9}" } },
  emphasized: { value: { _light: "{colors.blue.10}", _dark: "{colors.blue.10}" } },
  fg: { value: { _light: "white", _dark: "white" } },
  text: { value: { _light: "{colors.blue.a11}", _dark: "{colors.blue.a11}" } }
};

// src/theme/semantic-tokens/colors/bronze.ts
var bronze = {
  1: { value: { _light: "{colors.bronze.light.1}", _dark: "{colors.bronze.dark.1}" } },
  2: { value: { _light: "{colors.bronze.light.2}", _dark: "{colors.bronze.dark.2}" } },
  3: { value: { _light: "{colors.bronze.light.3}", _dark: "{colors.bronze.dark.3}" } },
  4: { value: { _light: "{colors.bronze.light.4}", _dark: "{colors.bronze.dark.4}" } },
  5: { value: { _light: "{colors.bronze.light.5}", _dark: "{colors.bronze.dark.5}" } },
  6: { value: { _light: "{colors.bronze.light.6}", _dark: "{colors.bronze.dark.6}" } },
  7: { value: { _light: "{colors.bronze.light.7}", _dark: "{colors.bronze.dark.7}" } },
  8: { value: { _light: "{colors.bronze.light.8}", _dark: "{colors.bronze.dark.8}" } },
  9: { value: { _light: "{colors.bronze.light.9}", _dark: "{colors.bronze.dark.9}" } },
  10: { value: { _light: "{colors.bronze.light.10}", _dark: "{colors.bronze.dark.10}" } },
  11: { value: { _light: "{colors.bronze.light.11}", _dark: "{colors.bronze.dark.11}" } },
  12: { value: { _light: "{colors.bronze.light.12}", _dark: "{colors.bronze.dark.12}" } },
  a1: { value: { _light: "{colors.bronze.light.a1}", _dark: "{colors.bronze.dark.a1}" } },
  a2: { value: { _light: "{colors.bronze.light.a2}", _dark: "{colors.bronze.dark.a2}" } },
  a3: { value: { _light: "{colors.bronze.light.a3}", _dark: "{colors.bronze.dark.a3}" } },
  a4: { value: { _light: "{colors.bronze.light.a4}", _dark: "{colors.bronze.dark.a4}" } },
  a5: { value: { _light: "{colors.bronze.light.a5}", _dark: "{colors.bronze.dark.a5}" } },
  a6: { value: { _light: "{colors.bronze.light.a6}", _dark: "{colors.bronze.dark.a6}" } },
  a7: { value: { _light: "{colors.bronze.light.a7}", _dark: "{colors.bronze.dark.a7}" } },
  a8: { value: { _light: "{colors.bronze.light.a8}", _dark: "{colors.bronze.dark.a8}" } },
  a9: { value: { _light: "{colors.bronze.light.a9}", _dark: "{colors.bronze.dark.a9}" } },
  a10: { value: { _light: "{colors.bronze.light.a10}", _dark: "{colors.bronze.dark.a10}" } },
  a11: { value: { _light: "{colors.bronze.light.a11}", _dark: "{colors.bronze.dark.a11}" } },
  a12: { value: { _light: "{colors.bronze.light.a12}", _dark: "{colors.bronze.dark.a12}" } },
  default: { value: { _light: "{colors.bronze.9}", _dark: "{colors.bronze.9}" } },
  emphasized: { value: { _light: "{colors.bronze.10}", _dark: "{colors.bronze.10}" } },
  fg: { value: { _light: "white", _dark: "white" } },
  text: { value: { _light: "{colors.bronze.a11}", _dark: "{colors.bronze.a11}" } }
};

// src/theme/semantic-tokens/colors/brown.ts
var brown = {
  1: { value: { _light: "{colors.brown.light.1}", _dark: "{colors.brown.dark.1}" } },
  2: { value: { _light: "{colors.brown.light.2}", _dark: "{colors.brown.dark.2}" } },
  3: { value: { _light: "{colors.brown.light.3}", _dark: "{colors.brown.dark.3}" } },
  4: { value: { _light: "{colors.brown.light.4}", _dark: "{colors.brown.dark.4}" } },
  5: { value: { _light: "{colors.brown.light.5}", _dark: "{colors.brown.dark.5}" } },
  6: { value: { _light: "{colors.brown.light.6}", _dark: "{colors.brown.dark.6}" } },
  7: { value: { _light: "{colors.brown.light.7}", _dark: "{colors.brown.dark.7}" } },
  8: { value: { _light: "{colors.brown.light.8}", _dark: "{colors.brown.dark.8}" } },
  9: { value: { _light: "{colors.brown.light.9}", _dark: "{colors.brown.dark.9}" } },
  10: { value: { _light: "{colors.brown.light.10}", _dark: "{colors.brown.dark.10}" } },
  11: { value: { _light: "{colors.brown.light.11}", _dark: "{colors.brown.dark.11}" } },
  12: { value: { _light: "{colors.brown.light.12}", _dark: "{colors.brown.dark.12}" } },
  a1: { value: { _light: "{colors.brown.light.a1}", _dark: "{colors.brown.dark.a1}" } },
  a2: { value: { _light: "{colors.brown.light.a2}", _dark: "{colors.brown.dark.a2}" } },
  a3: { value: { _light: "{colors.brown.light.a3}", _dark: "{colors.brown.dark.a3}" } },
  a4: { value: { _light: "{colors.brown.light.a4}", _dark: "{colors.brown.dark.a4}" } },
  a5: { value: { _light: "{colors.brown.light.a5}", _dark: "{colors.brown.dark.a5}" } },
  a6: { value: { _light: "{colors.brown.light.a6}", _dark: "{colors.brown.dark.a6}" } },
  a7: { value: { _light: "{colors.brown.light.a7}", _dark: "{colors.brown.dark.a7}" } },
  a8: { value: { _light: "{colors.brown.light.a8}", _dark: "{colors.brown.dark.a8}" } },
  a9: { value: { _light: "{colors.brown.light.a9}", _dark: "{colors.brown.dark.a9}" } },
  a10: { value: { _light: "{colors.brown.light.a10}", _dark: "{colors.brown.dark.a10}" } },
  a11: { value: { _light: "{colors.brown.light.a11}", _dark: "{colors.brown.dark.a11}" } },
  a12: { value: { _light: "{colors.brown.light.a12}", _dark: "{colors.brown.dark.a12}" } },
  default: { value: { _light: "{colors.brown.9}", _dark: "{colors.brown.9}" } },
  emphasized: { value: { _light: "{colors.brown.10}", _dark: "{colors.brown.10}" } },
  fg: { value: { _light: "white", _dark: "white" } },
  text: { value: { _light: "{colors.brown.a11}", _dark: "{colors.brown.a11}" } }
};

// src/theme/semantic-tokens/colors/crimson.ts
var crimson = {
  1: { value: { _light: "{colors.crimson.light.1}", _dark: "{colors.crimson.dark.1}" } },
  2: { value: { _light: "{colors.crimson.light.2}", _dark: "{colors.crimson.dark.2}" } },
  3: { value: { _light: "{colors.crimson.light.3}", _dark: "{colors.crimson.dark.3}" } },
  4: { value: { _light: "{colors.crimson.light.4}", _dark: "{colors.crimson.dark.4}" } },
  5: { value: { _light: "{colors.crimson.light.5}", _dark: "{colors.crimson.dark.5}" } },
  6: { value: { _light: "{colors.crimson.light.6}", _dark: "{colors.crimson.dark.6}" } },
  7: { value: { _light: "{colors.crimson.light.7}", _dark: "{colors.crimson.dark.7}" } },
  8: { value: { _light: "{colors.crimson.light.8}", _dark: "{colors.crimson.dark.8}" } },
  9: { value: { _light: "{colors.crimson.light.9}", _dark: "{colors.crimson.dark.9}" } },
  10: { value: { _light: "{colors.crimson.light.10}", _dark: "{colors.crimson.dark.10}" } },
  11: { value: { _light: "{colors.crimson.light.11}", _dark: "{colors.crimson.dark.11}" } },
  12: { value: { _light: "{colors.crimson.light.12}", _dark: "{colors.crimson.dark.12}" } },
  a1: { value: { _light: "{colors.crimson.light.a1}", _dark: "{colors.crimson.dark.a1}" } },
  a2: { value: { _light: "{colors.crimson.light.a2}", _dark: "{colors.crimson.dark.a2}" } },
  a3: { value: { _light: "{colors.crimson.light.a3}", _dark: "{colors.crimson.dark.a3}" } },
  a4: { value: { _light: "{colors.crimson.light.a4}", _dark: "{colors.crimson.dark.a4}" } },
  a5: { value: { _light: "{colors.crimson.light.a5}", _dark: "{colors.crimson.dark.a5}" } },
  a6: { value: { _light: "{colors.crimson.light.a6}", _dark: "{colors.crimson.dark.a6}" } },
  a7: { value: { _light: "{colors.crimson.light.a7}", _dark: "{colors.crimson.dark.a7}" } },
  a8: { value: { _light: "{colors.crimson.light.a8}", _dark: "{colors.crimson.dark.a8}" } },
  a9: { value: { _light: "{colors.crimson.light.a9}", _dark: "{colors.crimson.dark.a9}" } },
  a10: { value: { _light: "{colors.crimson.light.a10}", _dark: "{colors.crimson.dark.a10}" } },
  a11: { value: { _light: "{colors.crimson.light.a11}", _dark: "{colors.crimson.dark.a11}" } },
  a12: { value: { _light: "{colors.crimson.light.a12}", _dark: "{colors.crimson.dark.a12}" } },
  default: { value: { _light: "{colors.crimson.9}", _dark: "{colors.crimson.9}" } },
  emphasized: { value: { _light: "{colors.crimson.10}", _dark: "{colors.crimson.10}" } },
  fg: { value: { _light: "white", _dark: "white" } },
  text: { value: { _light: "{colors.crimson.a11}", _dark: "{colors.crimson.a11}" } }
};

// src/theme/semantic-tokens/colors/cyan.ts
var cyan = {
  1: { value: { _light: "{colors.cyan.light.1}", _dark: "{colors.cyan.dark.1}" } },
  2: { value: { _light: "{colors.cyan.light.2}", _dark: "{colors.cyan.dark.2}" } },
  3: { value: { _light: "{colors.cyan.light.3}", _dark: "{colors.cyan.dark.3}" } },
  4: { value: { _light: "{colors.cyan.light.4}", _dark: "{colors.cyan.dark.4}" } },
  5: { value: { _light: "{colors.cyan.light.5}", _dark: "{colors.cyan.dark.5}" } },
  6: { value: { _light: "{colors.cyan.light.6}", _dark: "{colors.cyan.dark.6}" } },
  7: { value: { _light: "{colors.cyan.light.7}", _dark: "{colors.cyan.dark.7}" } },
  8: { value: { _light: "{colors.cyan.light.8}", _dark: "{colors.cyan.dark.8}" } },
  9: { value: { _light: "{colors.cyan.light.9}", _dark: "{colors.cyan.dark.9}" } },
  10: { value: { _light: "{colors.cyan.light.10}", _dark: "{colors.cyan.dark.10}" } },
  11: { value: { _light: "{colors.cyan.light.11}", _dark: "{colors.cyan.dark.11}" } },
  12: { value: { _light: "{colors.cyan.light.12}", _dark: "{colors.cyan.dark.12}" } },
  a1: { value: { _light: "{colors.cyan.light.a1}", _dark: "{colors.cyan.dark.a1}" } },
  a2: { value: { _light: "{colors.cyan.light.a2}", _dark: "{colors.cyan.dark.a2}" } },
  a3: { value: { _light: "{colors.cyan.light.a3}", _dark: "{colors.cyan.dark.a3}" } },
  a4: { value: { _light: "{colors.cyan.light.a4}", _dark: "{colors.cyan.dark.a4}" } },
  a5: { value: { _light: "{colors.cyan.light.a5}", _dark: "{colors.cyan.dark.a5}" } },
  a6: { value: { _light: "{colors.cyan.light.a6}", _dark: "{colors.cyan.dark.a6}" } },
  a7: { value: { _light: "{colors.cyan.light.a7}", _dark: "{colors.cyan.dark.a7}" } },
  a8: { value: { _light: "{colors.cyan.light.a8}", _dark: "{colors.cyan.dark.a8}" } },
  a9: { value: { _light: "{colors.cyan.light.a9}", _dark: "{colors.cyan.dark.a9}" } },
  a10: { value: { _light: "{colors.cyan.light.a10}", _dark: "{colors.cyan.dark.a10}" } },
  a11: { value: { _light: "{colors.cyan.light.a11}", _dark: "{colors.cyan.dark.a11}" } },
  a12: { value: { _light: "{colors.cyan.light.a12}", _dark: "{colors.cyan.dark.a12}" } },
  default: { value: { _light: "{colors.cyan.9}", _dark: "{colors.cyan.9}" } },
  emphasized: { value: { _light: "{colors.cyan.10}", _dark: "{colors.cyan.10}" } },
  fg: { value: { _light: "white", _dark: "white" } },
  text: { value: { _light: "{colors.cyan.a11}", _dark: "{colors.cyan.a11}" } }
};

// src/theme/semantic-tokens/colors/gold.ts
var gold = {
  1: { value: { _light: "{colors.gold.light.1}", _dark: "{colors.gold.dark.1}" } },
  2: { value: { _light: "{colors.gold.light.2}", _dark: "{colors.gold.dark.2}" } },
  3: { value: { _light: "{colors.gold.light.3}", _dark: "{colors.gold.dark.3}" } },
  4: { value: { _light: "{colors.gold.light.4}", _dark: "{colors.gold.dark.4}" } },
  5: { value: { _light: "{colors.gold.light.5}", _dark: "{colors.gold.dark.5}" } },
  6: { value: { _light: "{colors.gold.light.6}", _dark: "{colors.gold.dark.6}" } },
  7: { value: { _light: "{colors.gold.light.7}", _dark: "{colors.gold.dark.7}" } },
  8: { value: { _light: "{colors.gold.light.8}", _dark: "{colors.gold.dark.8}" } },
  9: { value: { _light: "{colors.gold.light.9}", _dark: "{colors.gold.dark.9}" } },
  10: { value: { _light: "{colors.gold.light.10}", _dark: "{colors.gold.dark.10}" } },
  11: { value: { _light: "{colors.gold.light.11}", _dark: "{colors.gold.dark.11}" } },
  12: { value: { _light: "{colors.gold.light.12}", _dark: "{colors.gold.dark.12}" } },
  a1: { value: { _light: "{colors.gold.light.a1}", _dark: "{colors.gold.dark.a1}" } },
  a2: { value: { _light: "{colors.gold.light.a2}", _dark: "{colors.gold.dark.a2}" } },
  a3: { value: { _light: "{colors.gold.light.a3}", _dark: "{colors.gold.dark.a3}" } },
  a4: { value: { _light: "{colors.gold.light.a4}", _dark: "{colors.gold.dark.a4}" } },
  a5: { value: { _light: "{colors.gold.light.a5}", _dark: "{colors.gold.dark.a5}" } },
  a6: { value: { _light: "{colors.gold.light.a6}", _dark: "{colors.gold.dark.a6}" } },
  a7: { value: { _light: "{colors.gold.light.a7}", _dark: "{colors.gold.dark.a7}" } },
  a8: { value: { _light: "{colors.gold.light.a8}", _dark: "{colors.gold.dark.a8}" } },
  a9: { value: { _light: "{colors.gold.light.a9}", _dark: "{colors.gold.dark.a9}" } },
  a10: { value: { _light: "{colors.gold.light.a10}", _dark: "{colors.gold.dark.a10}" } },
  a11: { value: { _light: "{colors.gold.light.a11}", _dark: "{colors.gold.dark.a11}" } },
  a12: { value: { _light: "{colors.gold.light.a12}", _dark: "{colors.gold.dark.a12}" } },
  default: { value: { _light: "{colors.gold.9}", _dark: "{colors.gold.9}" } },
  emphasized: { value: { _light: "{colors.gold.10}", _dark: "{colors.gold.10}" } },
  fg: { value: { _light: "white", _dark: "white" } },
  text: { value: { _light: "{colors.gold.a11}", _dark: "{colors.gold.a11}" } }
};

// src/theme/semantic-tokens/colors/grass.ts
var grass = {
  1: { value: { _light: "{colors.grass.light.1}", _dark: "{colors.grass.dark.1}" } },
  2: { value: { _light: "{colors.grass.light.2}", _dark: "{colors.grass.dark.2}" } },
  3: { value: { _light: "{colors.grass.light.3}", _dark: "{colors.grass.dark.3}" } },
  4: { value: { _light: "{colors.grass.light.4}", _dark: "{colors.grass.dark.4}" } },
  5: { value: { _light: "{colors.grass.light.5}", _dark: "{colors.grass.dark.5}" } },
  6: { value: { _light: "{colors.grass.light.6}", _dark: "{colors.grass.dark.6}" } },
  7: { value: { _light: "{colors.grass.light.7}", _dark: "{colors.grass.dark.7}" } },
  8: { value: { _light: "{colors.grass.light.8}", _dark: "{colors.grass.dark.8}" } },
  9: { value: { _light: "{colors.grass.light.9}", _dark: "{colors.grass.dark.9}" } },
  10: { value: { _light: "{colors.grass.light.10}", _dark: "{colors.grass.dark.10}" } },
  11: { value: { _light: "{colors.grass.light.11}", _dark: "{colors.grass.dark.11}" } },
  12: { value: { _light: "{colors.grass.light.12}", _dark: "{colors.grass.dark.12}" } },
  a1: { value: { _light: "{colors.grass.light.a1}", _dark: "{colors.grass.dark.a1}" } },
  a2: { value: { _light: "{colors.grass.light.a2}", _dark: "{colors.grass.dark.a2}" } },
  a3: { value: { _light: "{colors.grass.light.a3}", _dark: "{colors.grass.dark.a3}" } },
  a4: { value: { _light: "{colors.grass.light.a4}", _dark: "{colors.grass.dark.a4}" } },
  a5: { value: { _light: "{colors.grass.light.a5}", _dark: "{colors.grass.dark.a5}" } },
  a6: { value: { _light: "{colors.grass.light.a6}", _dark: "{colors.grass.dark.a6}" } },
  a7: { value: { _light: "{colors.grass.light.a7}", _dark: "{colors.grass.dark.a7}" } },
  a8: { value: { _light: "{colors.grass.light.a8}", _dark: "{colors.grass.dark.a8}" } },
  a9: { value: { _light: "{colors.grass.light.a9}", _dark: "{colors.grass.dark.a9}" } },
  a10: { value: { _light: "{colors.grass.light.a10}", _dark: "{colors.grass.dark.a10}" } },
  a11: { value: { _light: "{colors.grass.light.a11}", _dark: "{colors.grass.dark.a11}" } },
  a12: { value: { _light: "{colors.grass.light.a12}", _dark: "{colors.grass.dark.a12}" } },
  default: { value: { _light: "{colors.grass.9}", _dark: "{colors.grass.9}" } },
  emphasized: { value: { _light: "{colors.grass.10}", _dark: "{colors.grass.10}" } },
  fg: { value: { _light: "white", _dark: "white" } },
  text: { value: { _light: "{colors.grass.a11}", _dark: "{colors.grass.a11}" } }
};

// src/theme/semantic-tokens/colors/green.ts
var green = {
  1: { value: { _light: "{colors.green.light.1}", _dark: "{colors.green.dark.1}" } },
  2: { value: { _light: "{colors.green.light.2}", _dark: "{colors.green.dark.2}" } },
  3: { value: { _light: "{colors.green.light.3}", _dark: "{colors.green.dark.3}" } },
  4: { value: { _light: "{colors.green.light.4}", _dark: "{colors.green.dark.4}" } },
  5: { value: { _light: "{colors.green.light.5}", _dark: "{colors.green.dark.5}" } },
  6: { value: { _light: "{colors.green.light.6}", _dark: "{colors.green.dark.6}" } },
  7: { value: { _light: "{colors.green.light.7}", _dark: "{colors.green.dark.7}" } },
  8: { value: { _light: "{colors.green.light.8}", _dark: "{colors.green.dark.8}" } },
  9: { value: { _light: "{colors.green.light.9}", _dark: "{colors.green.dark.9}" } },
  10: { value: { _light: "{colors.green.light.10}", _dark: "{colors.green.dark.10}" } },
  11: { value: { _light: "{colors.green.light.11}", _dark: "{colors.green.dark.11}" } },
  12: { value: { _light: "{colors.green.light.12}", _dark: "{colors.green.dark.12}" } },
  a1: { value: { _light: "{colors.green.light.a1}", _dark: "{colors.green.dark.a1}" } },
  a2: { value: { _light: "{colors.green.light.a2}", _dark: "{colors.green.dark.a2}" } },
  a3: { value: { _light: "{colors.green.light.a3}", _dark: "{colors.green.dark.a3}" } },
  a4: { value: { _light: "{colors.green.light.a4}", _dark: "{colors.green.dark.a4}" } },
  a5: { value: { _light: "{colors.green.light.a5}", _dark: "{colors.green.dark.a5}" } },
  a6: { value: { _light: "{colors.green.light.a6}", _dark: "{colors.green.dark.a6}" } },
  a7: { value: { _light: "{colors.green.light.a7}", _dark: "{colors.green.dark.a7}" } },
  a8: { value: { _light: "{colors.green.light.a8}", _dark: "{colors.green.dark.a8}" } },
  a9: { value: { _light: "{colors.green.light.a9}", _dark: "{colors.green.dark.a9}" } },
  a10: { value: { _light: "{colors.green.light.a10}", _dark: "{colors.green.dark.a10}" } },
  a11: { value: { _light: "{colors.green.light.a11}", _dark: "{colors.green.dark.a11}" } },
  a12: { value: { _light: "{colors.green.light.a12}", _dark: "{colors.green.dark.a12}" } },
  default: { value: { _light: "{colors.green.9}", _dark: "{colors.green.9}" } },
  emphasized: { value: { _light: "{colors.green.10}", _dark: "{colors.green.10}" } },
  fg: { value: { _light: "white", _dark: "white" } },
  text: { value: { _light: "{colors.green.a11}", _dark: "{colors.green.a11}" } }
};

// src/theme/semantic-tokens/colors/indigo.ts
var indigo = {
  1: { value: { _light: "{colors.indigo.light.1}", _dark: "{colors.indigo.dark.1}" } },
  2: { value: { _light: "{colors.indigo.light.2}", _dark: "{colors.indigo.dark.2}" } },
  3: { value: { _light: "{colors.indigo.light.3}", _dark: "{colors.indigo.dark.3}" } },
  4: { value: { _light: "{colors.indigo.light.4}", _dark: "{colors.indigo.dark.4}" } },
  5: { value: { _light: "{colors.indigo.light.5}", _dark: "{colors.indigo.dark.5}" } },
  6: { value: { _light: "{colors.indigo.light.6}", _dark: "{colors.indigo.dark.6}" } },
  7: { value: { _light: "{colors.indigo.light.7}", _dark: "{colors.indigo.dark.7}" } },
  8: { value: { _light: "{colors.indigo.light.8}", _dark: "{colors.indigo.dark.8}" } },
  9: { value: { _light: "{colors.indigo.light.9}", _dark: "{colors.indigo.dark.9}" } },
  10: { value: { _light: "{colors.indigo.light.10}", _dark: "{colors.indigo.dark.10}" } },
  11: { value: { _light: "{colors.indigo.light.11}", _dark: "{colors.indigo.dark.11}" } },
  12: { value: { _light: "{colors.indigo.light.12}", _dark: "{colors.indigo.dark.12}" } },
  a1: { value: { _light: "{colors.indigo.light.a1}", _dark: "{colors.indigo.dark.a1}" } },
  a2: { value: { _light: "{colors.indigo.light.a2}", _dark: "{colors.indigo.dark.a2}" } },
  a3: { value: { _light: "{colors.indigo.light.a3}", _dark: "{colors.indigo.dark.a3}" } },
  a4: { value: { _light: "{colors.indigo.light.a4}", _dark: "{colors.indigo.dark.a4}" } },
  a5: { value: { _light: "{colors.indigo.light.a5}", _dark: "{colors.indigo.dark.a5}" } },
  a6: { value: { _light: "{colors.indigo.light.a6}", _dark: "{colors.indigo.dark.a6}" } },
  a7: { value: { _light: "{colors.indigo.light.a7}", _dark: "{colors.indigo.dark.a7}" } },
  a8: { value: { _light: "{colors.indigo.light.a8}", _dark: "{colors.indigo.dark.a8}" } },
  a9: { value: { _light: "{colors.indigo.light.a9}", _dark: "{colors.indigo.dark.a9}" } },
  a10: { value: { _light: "{colors.indigo.light.a10}", _dark: "{colors.indigo.dark.a10}" } },
  a11: { value: { _light: "{colors.indigo.light.a11}", _dark: "{colors.indigo.dark.a11}" } },
  a12: { value: { _light: "{colors.indigo.light.a12}", _dark: "{colors.indigo.dark.a12}" } },
  default: { value: { _light: "{colors.indigo.9}", _dark: "{colors.indigo.9}" } },
  emphasized: { value: { _light: "{colors.indigo.10}", _dark: "{colors.indigo.10}" } },
  fg: { value: { _light: "white", _dark: "white" } },
  text: { value: { _light: "{colors.indigo.a11}", _dark: "{colors.indigo.a11}" } }
};

// src/theme/semantic-tokens/colors/iris.ts
var iris = {
  1: { value: { _light: "{colors.iris.light.1}", _dark: "{colors.iris.dark.1}" } },
  2: { value: { _light: "{colors.iris.light.2}", _dark: "{colors.iris.dark.2}" } },
  3: { value: { _light: "{colors.iris.light.3}", _dark: "{colors.iris.dark.3}" } },
  4: { value: { _light: "{colors.iris.light.4}", _dark: "{colors.iris.dark.4}" } },
  5: { value: { _light: "{colors.iris.light.5}", _dark: "{colors.iris.dark.5}" } },
  6: { value: { _light: "{colors.iris.light.6}", _dark: "{colors.iris.dark.6}" } },
  7: { value: { _light: "{colors.iris.light.7}", _dark: "{colors.iris.dark.7}" } },
  8: { value: { _light: "{colors.iris.light.8}", _dark: "{colors.iris.dark.8}" } },
  9: { value: { _light: "{colors.iris.light.9}", _dark: "{colors.iris.dark.9}" } },
  10: { value: { _light: "{colors.iris.light.10}", _dark: "{colors.iris.dark.10}" } },
  11: { value: { _light: "{colors.iris.light.11}", _dark: "{colors.iris.dark.11}" } },
  12: { value: { _light: "{colors.iris.light.12}", _dark: "{colors.iris.dark.12}" } },
  a1: { value: { _light: "{colors.iris.light.a1}", _dark: "{colors.iris.dark.a1}" } },
  a2: { value: { _light: "{colors.iris.light.a2}", _dark: "{colors.iris.dark.a2}" } },
  a3: { value: { _light: "{colors.iris.light.a3}", _dark: "{colors.iris.dark.a3}" } },
  a4: { value: { _light: "{colors.iris.light.a4}", _dark: "{colors.iris.dark.a4}" } },
  a5: { value: { _light: "{colors.iris.light.a5}", _dark: "{colors.iris.dark.a5}" } },
  a6: { value: { _light: "{colors.iris.light.a6}", _dark: "{colors.iris.dark.a6}" } },
  a7: { value: { _light: "{colors.iris.light.a7}", _dark: "{colors.iris.dark.a7}" } },
  a8: { value: { _light: "{colors.iris.light.a8}", _dark: "{colors.iris.dark.a8}" } },
  a9: { value: { _light: "{colors.iris.light.a9}", _dark: "{colors.iris.dark.a9}" } },
  a10: { value: { _light: "{colors.iris.light.a10}", _dark: "{colors.iris.dark.a10}" } },
  a11: { value: { _light: "{colors.iris.light.a11}", _dark: "{colors.iris.dark.a11}" } },
  a12: { value: { _light: "{colors.iris.light.a12}", _dark: "{colors.iris.dark.a12}" } },
  default: { value: { _light: "{colors.iris.9}", _dark: "{colors.iris.9}" } },
  emphasized: { value: { _light: "{colors.iris.10}", _dark: "{colors.iris.10}" } },
  fg: { value: { _light: "white", _dark: "white" } },
  text: { value: { _light: "{colors.iris.a11}", _dark: "{colors.iris.a11}" } }
};

// src/theme/semantic-tokens/colors/jade.ts
var jade = {
  1: { value: { _light: "{colors.jade.light.1}", _dark: "{colors.jade.dark.1}" } },
  2: { value: { _light: "{colors.jade.light.2}", _dark: "{colors.jade.dark.2}" } },
  3: { value: { _light: "{colors.jade.light.3}", _dark: "{colors.jade.dark.3}" } },
  4: { value: { _light: "{colors.jade.light.4}", _dark: "{colors.jade.dark.4}" } },
  5: { value: { _light: "{colors.jade.light.5}", _dark: "{colors.jade.dark.5}" } },
  6: { value: { _light: "{colors.jade.light.6}", _dark: "{colors.jade.dark.6}" } },
  7: { value: { _light: "{colors.jade.light.7}", _dark: "{colors.jade.dark.7}" } },
  8: { value: { _light: "{colors.jade.light.8}", _dark: "{colors.jade.dark.8}" } },
  9: { value: { _light: "{colors.jade.light.9}", _dark: "{colors.jade.dark.9}" } },
  10: { value: { _light: "{colors.jade.light.10}", _dark: "{colors.jade.dark.10}" } },
  11: { value: { _light: "{colors.jade.light.11}", _dark: "{colors.jade.dark.11}" } },
  12: { value: { _light: "{colors.jade.light.12}", _dark: "{colors.jade.dark.12}" } },
  a1: { value: { _light: "{colors.jade.light.a1}", _dark: "{colors.jade.dark.a1}" } },
  a2: { value: { _light: "{colors.jade.light.a2}", _dark: "{colors.jade.dark.a2}" } },
  a3: { value: { _light: "{colors.jade.light.a3}", _dark: "{colors.jade.dark.a3}" } },
  a4: { value: { _light: "{colors.jade.light.a4}", _dark: "{colors.jade.dark.a4}" } },
  a5: { value: { _light: "{colors.jade.light.a5}", _dark: "{colors.jade.dark.a5}" } },
  a6: { value: { _light: "{colors.jade.light.a6}", _dark: "{colors.jade.dark.a6}" } },
  a7: { value: { _light: "{colors.jade.light.a7}", _dark: "{colors.jade.dark.a7}" } },
  a8: { value: { _light: "{colors.jade.light.a8}", _dark: "{colors.jade.dark.a8}" } },
  a9: { value: { _light: "{colors.jade.light.a9}", _dark: "{colors.jade.dark.a9}" } },
  a10: { value: { _light: "{colors.jade.light.a10}", _dark: "{colors.jade.dark.a10}" } },
  a11: { value: { _light: "{colors.jade.light.a11}", _dark: "{colors.jade.dark.a11}" } },
  a12: { value: { _light: "{colors.jade.light.a12}", _dark: "{colors.jade.dark.a12}" } },
  default: { value: { _light: "{colors.jade.9}", _dark: "{colors.jade.9}" } },
  emphasized: { value: { _light: "{colors.jade.10}", _dark: "{colors.jade.10}" } },
  fg: { value: { _light: "white", _dark: "white" } },
  text: { value: { _light: "{colors.jade.a11}", _dark: "{colors.jade.a11}" } }
};

// src/theme/semantic-tokens/colors/lime.ts
var lime = {
  1: { value: { _light: "{colors.lime.light.1}", _dark: "{colors.lime.dark.1}" } },
  2: { value: { _light: "{colors.lime.light.2}", _dark: "{colors.lime.dark.2}" } },
  3: { value: { _light: "{colors.lime.light.3}", _dark: "{colors.lime.dark.3}" } },
  4: { value: { _light: "{colors.lime.light.4}", _dark: "{colors.lime.dark.4}" } },
  5: { value: { _light: "{colors.lime.light.5}", _dark: "{colors.lime.dark.5}" } },
  6: { value: { _light: "{colors.lime.light.6}", _dark: "{colors.lime.dark.6}" } },
  7: { value: { _light: "{colors.lime.light.7}", _dark: "{colors.lime.dark.7}" } },
  8: { value: { _light: "{colors.lime.light.8}", _dark: "{colors.lime.dark.8}" } },
  9: { value: { _light: "{colors.lime.light.9}", _dark: "{colors.lime.dark.9}" } },
  10: { value: { _light: "{colors.lime.light.10}", _dark: "{colors.lime.dark.10}" } },
  11: { value: { _light: "{colors.lime.light.11}", _dark: "{colors.lime.dark.11}" } },
  12: { value: { _light: "{colors.lime.light.12}", _dark: "{colors.lime.dark.12}" } },
  a1: { value: { _light: "{colors.lime.light.a1}", _dark: "{colors.lime.dark.a1}" } },
  a2: { value: { _light: "{colors.lime.light.a2}", _dark: "{colors.lime.dark.a2}" } },
  a3: { value: { _light: "{colors.lime.light.a3}", _dark: "{colors.lime.dark.a3}" } },
  a4: { value: { _light: "{colors.lime.light.a4}", _dark: "{colors.lime.dark.a4}" } },
  a5: { value: { _light: "{colors.lime.light.a5}", _dark: "{colors.lime.dark.a5}" } },
  a6: { value: { _light: "{colors.lime.light.a6}", _dark: "{colors.lime.dark.a6}" } },
  a7: { value: { _light: "{colors.lime.light.a7}", _dark: "{colors.lime.dark.a7}" } },
  a8: { value: { _light: "{colors.lime.light.a8}", _dark: "{colors.lime.dark.a8}" } },
  a9: { value: { _light: "{colors.lime.light.a9}", _dark: "{colors.lime.dark.a9}" } },
  a10: { value: { _light: "{colors.lime.light.a10}", _dark: "{colors.lime.dark.a10}" } },
  a11: { value: { _light: "{colors.lime.light.a11}", _dark: "{colors.lime.dark.a11}" } },
  a12: { value: { _light: "{colors.lime.light.a12}", _dark: "{colors.lime.dark.a12}" } },
  default: { value: { _light: "{colors.lime.9}", _dark: "{colors.lime.9}" } },
  emphasized: { value: { _light: "{colors.lime.10}", _dark: "{colors.lime.10}" } },
  fg: { value: { _light: "{colors.olive.light.12}", _dark: "{colors.olive.light.12}" } },
  text: { value: { _light: "{colors.lime.a11}", _dark: "{colors.lime.a11}" } }
};

// src/theme/semantic-tokens/colors/mauve.ts
var mauve = {
  1: { value: { _light: "{colors.mauve.light.1}", _dark: "{colors.mauve.dark.1}" } },
  2: { value: { _light: "{colors.mauve.light.2}", _dark: "{colors.mauve.dark.2}" } },
  3: { value: { _light: "{colors.mauve.light.3}", _dark: "{colors.mauve.dark.3}" } },
  4: { value: { _light: "{colors.mauve.light.4}", _dark: "{colors.mauve.dark.4}" } },
  5: { value: { _light: "{colors.mauve.light.5}", _dark: "{colors.mauve.dark.5}" } },
  6: { value: { _light: "{colors.mauve.light.6}", _dark: "{colors.mauve.dark.6}" } },
  7: { value: { _light: "{colors.mauve.light.7}", _dark: "{colors.mauve.dark.7}" } },
  8: { value: { _light: "{colors.mauve.light.8}", _dark: "{colors.mauve.dark.8}" } },
  9: { value: { _light: "{colors.mauve.light.9}", _dark: "{colors.mauve.dark.9}" } },
  10: { value: { _light: "{colors.mauve.light.10}", _dark: "{colors.mauve.dark.10}" } },
  11: { value: { _light: "{colors.mauve.light.11}", _dark: "{colors.mauve.dark.11}" } },
  12: { value: { _light: "{colors.mauve.light.12}", _dark: "{colors.mauve.dark.12}" } },
  a1: { value: { _light: "{colors.mauve.light.a1}", _dark: "{colors.mauve.dark.a1}" } },
  a2: { value: { _light: "{colors.mauve.light.a2}", _dark: "{colors.mauve.dark.a2}" } },
  a3: { value: { _light: "{colors.mauve.light.a3}", _dark: "{colors.mauve.dark.a3}" } },
  a4: { value: { _light: "{colors.mauve.light.a4}", _dark: "{colors.mauve.dark.a4}" } },
  a5: { value: { _light: "{colors.mauve.light.a5}", _dark: "{colors.mauve.dark.a5}" } },
  a6: { value: { _light: "{colors.mauve.light.a6}", _dark: "{colors.mauve.dark.a6}" } },
  a7: { value: { _light: "{colors.mauve.light.a7}", _dark: "{colors.mauve.dark.a7}" } },
  a8: { value: { _light: "{colors.mauve.light.a8}", _dark: "{colors.mauve.dark.a8}" } },
  a9: { value: { _light: "{colors.mauve.light.a9}", _dark: "{colors.mauve.dark.a9}" } },
  a10: { value: { _light: "{colors.mauve.light.a10}", _dark: "{colors.mauve.dark.a10}" } },
  a11: { value: { _light: "{colors.mauve.light.a11}", _dark: "{colors.mauve.dark.a11}" } },
  a12: { value: { _light: "{colors.mauve.light.a12}", _dark: "{colors.mauve.dark.a12}" } },
  default: { value: { _light: "{colors.mauve.9}", _dark: "{colors.mauve.9}" } },
  emphasized: { value: { _light: "{colors.mauve.10}", _dark: "{colors.mauve.10}" } },
  fg: { value: { _light: "white", _dark: "white" } },
  text: { value: { _light: "{colors.mauve.12}", _dark: "{colors.mauve.12}" } }
};

// src/theme/semantic-tokens/colors/mint.ts
var mint = {
  1: { value: { _light: "{colors.mint.light.1}", _dark: "{colors.mint.dark.1}" } },
  2: { value: { _light: "{colors.mint.light.2}", _dark: "{colors.mint.dark.2}" } },
  3: { value: { _light: "{colors.mint.light.3}", _dark: "{colors.mint.dark.3}" } },
  4: { value: { _light: "{colors.mint.light.4}", _dark: "{colors.mint.dark.4}" } },
  5: { value: { _light: "{colors.mint.light.5}", _dark: "{colors.mint.dark.5}" } },
  6: { value: { _light: "{colors.mint.light.6}", _dark: "{colors.mint.dark.6}" } },
  7: { value: { _light: "{colors.mint.light.7}", _dark: "{colors.mint.dark.7}" } },
  8: { value: { _light: "{colors.mint.light.8}", _dark: "{colors.mint.dark.8}" } },
  9: { value: { _light: "{colors.mint.light.9}", _dark: "{colors.mint.dark.9}" } },
  10: { value: { _light: "{colors.mint.light.10}", _dark: "{colors.mint.dark.10}" } },
  11: { value: { _light: "{colors.mint.light.11}", _dark: "{colors.mint.dark.11}" } },
  12: { value: { _light: "{colors.mint.light.12}", _dark: "{colors.mint.dark.12}" } },
  a1: { value: { _light: "{colors.mint.light.a1}", _dark: "{colors.mint.dark.a1}" } },
  a2: { value: { _light: "{colors.mint.light.a2}", _dark: "{colors.mint.dark.a2}" } },
  a3: { value: { _light: "{colors.mint.light.a3}", _dark: "{colors.mint.dark.a3}" } },
  a4: { value: { _light: "{colors.mint.light.a4}", _dark: "{colors.mint.dark.a4}" } },
  a5: { value: { _light: "{colors.mint.light.a5}", _dark: "{colors.mint.dark.a5}" } },
  a6: { value: { _light: "{colors.mint.light.a6}", _dark: "{colors.mint.dark.a6}" } },
  a7: { value: { _light: "{colors.mint.light.a7}", _dark: "{colors.mint.dark.a7}" } },
  a8: { value: { _light: "{colors.mint.light.a8}", _dark: "{colors.mint.dark.a8}" } },
  a9: { value: { _light: "{colors.mint.light.a9}", _dark: "{colors.mint.dark.a9}" } },
  a10: { value: { _light: "{colors.mint.light.a10}", _dark: "{colors.mint.dark.a10}" } },
  a11: { value: { _light: "{colors.mint.light.a11}", _dark: "{colors.mint.dark.a11}" } },
  a12: { value: { _light: "{colors.mint.light.a12}", _dark: "{colors.mint.dark.a12}" } },
  default: { value: { _light: "{colors.mint.9}", _dark: "{colors.mint.9}" } },
  emphasized: { value: { _light: "{colors.mint.10}", _dark: "{colors.mint.10}" } },
  fg: { value: { _light: "{colors.sage.light.12}", _dark: "{colors.sage.light.12}" } },
  text: { value: { _light: "{colors.mint.a11}", _dark: "{colors.mint.a11}" } }
};

// src/theme/semantic-tokens/colors/neutral.ts
var neutral = {
  1: { value: { _light: "{colors.neutral.light.1}", _dark: "{colors.neutral.dark.1}" } },
  2: { value: { _light: "{colors.neutral.light.2}", _dark: "{colors.neutral.dark.2}" } },
  3: { value: { _light: "{colors.neutral.light.3}", _dark: "{colors.neutral.dark.3}" } },
  4: { value: { _light: "{colors.neutral.light.4}", _dark: "{colors.neutral.dark.4}" } },
  5: { value: { _light: "{colors.neutral.light.5}", _dark: "{colors.neutral.dark.5}" } },
  6: { value: { _light: "{colors.neutral.light.6}", _dark: "{colors.neutral.dark.6}" } },
  7: { value: { _light: "{colors.neutral.light.7}", _dark: "{colors.neutral.dark.7}" } },
  8: { value: { _light: "{colors.neutral.light.8}", _dark: "{colors.neutral.dark.8}" } },
  9: { value: { _light: "{colors.neutral.light.9}", _dark: "{colors.neutral.dark.9}" } },
  10: { value: { _light: "{colors.neutral.light.10}", _dark: "{colors.neutral.dark.10}" } },
  11: { value: { _light: "{colors.neutral.light.11}", _dark: "{colors.neutral.dark.11}" } },
  12: { value: { _light: "{colors.neutral.light.12}", _dark: "{colors.neutral.dark.12}" } },
  a1: { value: { _light: "{colors.neutral.light.a1}", _dark: "{colors.neutral.dark.a1}" } },
  a2: { value: { _light: "{colors.neutral.light.a2}", _dark: "{colors.neutral.dark.a2}" } },
  a3: { value: { _light: "{colors.neutral.light.a3}", _dark: "{colors.neutral.dark.a3}" } },
  a4: { value: { _light: "{colors.neutral.light.a4}", _dark: "{colors.neutral.dark.a4}" } },
  a5: { value: { _light: "{colors.neutral.light.a5}", _dark: "{colors.neutral.dark.a5}" } },
  a6: { value: { _light: "{colors.neutral.light.a6}", _dark: "{colors.neutral.dark.a6}" } },
  a7: { value: { _light: "{colors.neutral.light.a7}", _dark: "{colors.neutral.dark.a7}" } },
  a8: { value: { _light: "{colors.neutral.light.a8}", _dark: "{colors.neutral.dark.a8}" } },
  a9: { value: { _light: "{colors.neutral.light.a9}", _dark: "{colors.neutral.dark.a9}" } },
  a10: { value: { _light: "{colors.neutral.light.a10}", _dark: "{colors.neutral.dark.a10}" } },
  a11: { value: { _light: "{colors.neutral.light.a11}", _dark: "{colors.neutral.dark.a11}" } },
  a12: { value: { _light: "{colors.neutral.light.a12}", _dark: "{colors.neutral.dark.a12}" } },
  default: { value: { _light: "black", _dark: "white" } },
  emphasized: { value: { _light: "{colors.gray.12}", _dark: "{colors.gray.12}" } },
  fg: { value: { _light: "white", _dark: "black" } },
  text: { value: { _light: "black", _dark: "white" } }
};

// src/theme/semantic-tokens/colors/olive.ts
var olive = {
  1: { value: { _light: "{colors.olive.light.1}", _dark: "{colors.olive.dark.1}" } },
  2: { value: { _light: "{colors.olive.light.2}", _dark: "{colors.olive.dark.2}" } },
  3: { value: { _light: "{colors.olive.light.3}", _dark: "{colors.olive.dark.3}" } },
  4: { value: { _light: "{colors.olive.light.4}", _dark: "{colors.olive.dark.4}" } },
  5: { value: { _light: "{colors.olive.light.5}", _dark: "{colors.olive.dark.5}" } },
  6: { value: { _light: "{colors.olive.light.6}", _dark: "{colors.olive.dark.6}" } },
  7: { value: { _light: "{colors.olive.light.7}", _dark: "{colors.olive.dark.7}" } },
  8: { value: { _light: "{colors.olive.light.8}", _dark: "{colors.olive.dark.8}" } },
  9: { value: { _light: "{colors.olive.light.9}", _dark: "{colors.olive.dark.9}" } },
  10: { value: { _light: "{colors.olive.light.10}", _dark: "{colors.olive.dark.10}" } },
  11: { value: { _light: "{colors.olive.light.11}", _dark: "{colors.olive.dark.11}" } },
  12: { value: { _light: "{colors.olive.light.12}", _dark: "{colors.olive.dark.12}" } },
  a1: { value: { _light: "{colors.olive.light.a1}", _dark: "{colors.olive.dark.a1}" } },
  a2: { value: { _light: "{colors.olive.light.a2}", _dark: "{colors.olive.dark.a2}" } },
  a3: { value: { _light: "{colors.olive.light.a3}", _dark: "{colors.olive.dark.a3}" } },
  a4: { value: { _light: "{colors.olive.light.a4}", _dark: "{colors.olive.dark.a4}" } },
  a5: { value: { _light: "{colors.olive.light.a5}", _dark: "{colors.olive.dark.a5}" } },
  a6: { value: { _light: "{colors.olive.light.a6}", _dark: "{colors.olive.dark.a6}" } },
  a7: { value: { _light: "{colors.olive.light.a7}", _dark: "{colors.olive.dark.a7}" } },
  a8: { value: { _light: "{colors.olive.light.a8}", _dark: "{colors.olive.dark.a8}" } },
  a9: { value: { _light: "{colors.olive.light.a9}", _dark: "{colors.olive.dark.a9}" } },
  a10: { value: { _light: "{colors.olive.light.a10}", _dark: "{colors.olive.dark.a10}" } },
  a11: { value: { _light: "{colors.olive.light.a11}", _dark: "{colors.olive.dark.a11}" } },
  a12: { value: { _light: "{colors.olive.light.a12}", _dark: "{colors.olive.dark.a12}" } },
  default: { value: { _light: "{colors.olive.9}", _dark: "{colors.olive.9}" } },
  emphasized: { value: { _light: "{colors.olive.10}", _dark: "{colors.olive.10}" } },
  fg: { value: { _light: "white", _dark: "white" } },
  text: { value: { _light: "{colors.olive.12}", _dark: "{colors.olive.12}" } }
};

// src/theme/semantic-tokens/colors/orange.ts
var orange = {
  1: { value: { _light: "{colors.orange.light.1}", _dark: "{colors.orange.dark.1}" } },
  2: { value: { _light: "{colors.orange.light.2}", _dark: "{colors.orange.dark.2}" } },
  3: { value: { _light: "{colors.orange.light.3}", _dark: "{colors.orange.dark.3}" } },
  4: { value: { _light: "{colors.orange.light.4}", _dark: "{colors.orange.dark.4}" } },
  5: { value: { _light: "{colors.orange.light.5}", _dark: "{colors.orange.dark.5}" } },
  6: { value: { _light: "{colors.orange.light.6}", _dark: "{colors.orange.dark.6}" } },
  7: { value: { _light: "{colors.orange.light.7}", _dark: "{colors.orange.dark.7}" } },
  8: { value: { _light: "{colors.orange.light.8}", _dark: "{colors.orange.dark.8}" } },
  9: { value: { _light: "{colors.orange.light.9}", _dark: "{colors.orange.dark.9}" } },
  10: { value: { _light: "{colors.orange.light.10}", _dark: "{colors.orange.dark.10}" } },
  11: { value: { _light: "{colors.orange.light.11}", _dark: "{colors.orange.dark.11}" } },
  12: { value: { _light: "{colors.orange.light.12}", _dark: "{colors.orange.dark.12}" } },
  a1: { value: { _light: "{colors.orange.light.a1}", _dark: "{colors.orange.dark.a1}" } },
  a2: { value: { _light: "{colors.orange.light.a2}", _dark: "{colors.orange.dark.a2}" } },
  a3: { value: { _light: "{colors.orange.light.a3}", _dark: "{colors.orange.dark.a3}" } },
  a4: { value: { _light: "{colors.orange.light.a4}", _dark: "{colors.orange.dark.a4}" } },
  a5: { value: { _light: "{colors.orange.light.a5}", _dark: "{colors.orange.dark.a5}" } },
  a6: { value: { _light: "{colors.orange.light.a6}", _dark: "{colors.orange.dark.a6}" } },
  a7: { value: { _light: "{colors.orange.light.a7}", _dark: "{colors.orange.dark.a7}" } },
  a8: { value: { _light: "{colors.orange.light.a8}", _dark: "{colors.orange.dark.a8}" } },
  a9: { value: { _light: "{colors.orange.light.a9}", _dark: "{colors.orange.dark.a9}" } },
  a10: { value: { _light: "{colors.orange.light.a10}", _dark: "{colors.orange.dark.a10}" } },
  a11: { value: { _light: "{colors.orange.light.a11}", _dark: "{colors.orange.dark.a11}" } },
  a12: { value: { _light: "{colors.orange.light.a12}", _dark: "{colors.orange.dark.a12}" } },
  default: { value: { _light: "{colors.orange.9}", _dark: "{colors.orange.9}" } },
  emphasized: { value: { _light: "{colors.orange.10}", _dark: "{colors.orange.10}" } },
  fg: { value: { _light: "white", _dark: "white" } },
  text: { value: { _light: "{colors.orange.a11}", _dark: "{colors.orange.a11}" } }
};

// src/theme/semantic-tokens/colors/pink.ts
var pink = {
  1: { value: { _light: "{colors.pink.light.1}", _dark: "{colors.pink.dark.1}" } },
  2: { value: { _light: "{colors.pink.light.2}", _dark: "{colors.pink.dark.2}" } },
  3: { value: { _light: "{colors.pink.light.3}", _dark: "{colors.pink.dark.3}" } },
  4: { value: { _light: "{colors.pink.light.4}", _dark: "{colors.pink.dark.4}" } },
  5: { value: { _light: "{colors.pink.light.5}", _dark: "{colors.pink.dark.5}" } },
  6: { value: { _light: "{colors.pink.light.6}", _dark: "{colors.pink.dark.6}" } },
  7: { value: { _light: "{colors.pink.light.7}", _dark: "{colors.pink.dark.7}" } },
  8: { value: { _light: "{colors.pink.light.8}", _dark: "{colors.pink.dark.8}" } },
  9: { value: { _light: "{colors.pink.light.9}", _dark: "{colors.pink.dark.9}" } },
  10: { value: { _light: "{colors.pink.light.10}", _dark: "{colors.pink.dark.10}" } },
  11: { value: { _light: "{colors.pink.light.11}", _dark: "{colors.pink.dark.11}" } },
  12: { value: { _light: "{colors.pink.light.12}", _dark: "{colors.pink.dark.12}" } },
  a1: { value: { _light: "{colors.pink.light.a1}", _dark: "{colors.pink.dark.a1}" } },
  a2: { value: { _light: "{colors.pink.light.a2}", _dark: "{colors.pink.dark.a2}" } },
  a3: { value: { _light: "{colors.pink.light.a3}", _dark: "{colors.pink.dark.a3}" } },
  a4: { value: { _light: "{colors.pink.light.a4}", _dark: "{colors.pink.dark.a4}" } },
  a5: { value: { _light: "{colors.pink.light.a5}", _dark: "{colors.pink.dark.a5}" } },
  a6: { value: { _light: "{colors.pink.light.a6}", _dark: "{colors.pink.dark.a6}" } },
  a7: { value: { _light: "{colors.pink.light.a7}", _dark: "{colors.pink.dark.a7}" } },
  a8: { value: { _light: "{colors.pink.light.a8}", _dark: "{colors.pink.dark.a8}" } },
  a9: { value: { _light: "{colors.pink.light.a9}", _dark: "{colors.pink.dark.a9}" } },
  a10: { value: { _light: "{colors.pink.light.a10}", _dark: "{colors.pink.dark.a10}" } },
  a11: { value: { _light: "{colors.pink.light.a11}", _dark: "{colors.pink.dark.a11}" } },
  a12: { value: { _light: "{colors.pink.light.a12}", _dark: "{colors.pink.dark.a12}" } },
  default: { value: { _light: "{colors.pink.9}", _dark: "{colors.pink.9}" } },
  emphasized: { value: { _light: "{colors.pink.10}", _dark: "{colors.pink.10}" } },
  fg: { value: { _light: "white", _dark: "white" } },
  text: { value: { _light: "{colors.pink.a11}", _dark: "{colors.pink.a11}" } }
};

// src/theme/semantic-tokens/colors/plum.ts
var plum = {
  1: { value: { _light: "{colors.plum.light.1}", _dark: "{colors.plum.dark.1}" } },
  2: { value: { _light: "{colors.plum.light.2}", _dark: "{colors.plum.dark.2}" } },
  3: { value: { _light: "{colors.plum.light.3}", _dark: "{colors.plum.dark.3}" } },
  4: { value: { _light: "{colors.plum.light.4}", _dark: "{colors.plum.dark.4}" } },
  5: { value: { _light: "{colors.plum.light.5}", _dark: "{colors.plum.dark.5}" } },
  6: { value: { _light: "{colors.plum.light.6}", _dark: "{colors.plum.dark.6}" } },
  7: { value: { _light: "{colors.plum.light.7}", _dark: "{colors.plum.dark.7}" } },
  8: { value: { _light: "{colors.plum.light.8}", _dark: "{colors.plum.dark.8}" } },
  9: { value: { _light: "{colors.plum.light.9}", _dark: "{colors.plum.dark.9}" } },
  10: { value: { _light: "{colors.plum.light.10}", _dark: "{colors.plum.dark.10}" } },
  11: { value: { _light: "{colors.plum.light.11}", _dark: "{colors.plum.dark.11}" } },
  12: { value: { _light: "{colors.plum.light.12}", _dark: "{colors.plum.dark.12}" } },
  a1: { value: { _light: "{colors.plum.light.a1}", _dark: "{colors.plum.dark.a1}" } },
  a2: { value: { _light: "{colors.plum.light.a2}", _dark: "{colors.plum.dark.a2}" } },
  a3: { value: { _light: "{colors.plum.light.a3}", _dark: "{colors.plum.dark.a3}" } },
  a4: { value: { _light: "{colors.plum.light.a4}", _dark: "{colors.plum.dark.a4}" } },
  a5: { value: { _light: "{colors.plum.light.a5}", _dark: "{colors.plum.dark.a5}" } },
  a6: { value: { _light: "{colors.plum.light.a6}", _dark: "{colors.plum.dark.a6}" } },
  a7: { value: { _light: "{colors.plum.light.a7}", _dark: "{colors.plum.dark.a7}" } },
  a8: { value: { _light: "{colors.plum.light.a8}", _dark: "{colors.plum.dark.a8}" } },
  a9: { value: { _light: "{colors.plum.light.a9}", _dark: "{colors.plum.dark.a9}" } },
  a10: { value: { _light: "{colors.plum.light.a10}", _dark: "{colors.plum.dark.a10}" } },
  a11: { value: { _light: "{colors.plum.light.a11}", _dark: "{colors.plum.dark.a11}" } },
  a12: { value: { _light: "{colors.plum.light.a12}", _dark: "{colors.plum.dark.a12}" } },
  default: { value: { _light: "{colors.plum.9}", _dark: "{colors.plum.9}" } },
  emphasized: { value: { _light: "{colors.plum.10}", _dark: "{colors.plum.10}" } },
  fg: { value: { _light: "white", _dark: "white" } },
  text: { value: { _light: "{colors.plum.a11}", _dark: "{colors.plum.a11}" } }
};

// src/theme/semantic-tokens/colors/purple.ts
var purple = {
  1: { value: { _light: "{colors.purple.light.1}", _dark: "{colors.purple.dark.1}" } },
  2: { value: { _light: "{colors.purple.light.2}", _dark: "{colors.purple.dark.2}" } },
  3: { value: { _light: "{colors.purple.light.3}", _dark: "{colors.purple.dark.3}" } },
  4: { value: { _light: "{colors.purple.light.4}", _dark: "{colors.purple.dark.4}" } },
  5: { value: { _light: "{colors.purple.light.5}", _dark: "{colors.purple.dark.5}" } },
  6: { value: { _light: "{colors.purple.light.6}", _dark: "{colors.purple.dark.6}" } },
  7: { value: { _light: "{colors.purple.light.7}", _dark: "{colors.purple.dark.7}" } },
  8: { value: { _light: "{colors.purple.light.8}", _dark: "{colors.purple.dark.8}" } },
  9: { value: { _light: "{colors.purple.light.9}", _dark: "{colors.purple.dark.9}" } },
  10: { value: { _light: "{colors.purple.light.10}", _dark: "{colors.purple.dark.10}" } },
  11: { value: { _light: "{colors.purple.light.11}", _dark: "{colors.purple.dark.11}" } },
  12: { value: { _light: "{colors.purple.light.12}", _dark: "{colors.purple.dark.12}" } },
  a1: { value: { _light: "{colors.purple.light.a1}", _dark: "{colors.purple.dark.a1}" } },
  a2: { value: { _light: "{colors.purple.light.a2}", _dark: "{colors.purple.dark.a2}" } },
  a3: { value: { _light: "{colors.purple.light.a3}", _dark: "{colors.purple.dark.a3}" } },
  a4: { value: { _light: "{colors.purple.light.a4}", _dark: "{colors.purple.dark.a4}" } },
  a5: { value: { _light: "{colors.purple.light.a5}", _dark: "{colors.purple.dark.a5}" } },
  a6: { value: { _light: "{colors.purple.light.a6}", _dark: "{colors.purple.dark.a6}" } },
  a7: { value: { _light: "{colors.purple.light.a7}", _dark: "{colors.purple.dark.a7}" } },
  a8: { value: { _light: "{colors.purple.light.a8}", _dark: "{colors.purple.dark.a8}" } },
  a9: { value: { _light: "{colors.purple.light.a9}", _dark: "{colors.purple.dark.a9}" } },
  a10: { value: { _light: "{colors.purple.light.a10}", _dark: "{colors.purple.dark.a10}" } },
  a11: { value: { _light: "{colors.purple.light.a11}", _dark: "{colors.purple.dark.a11}" } },
  a12: { value: { _light: "{colors.purple.light.a12}", _dark: "{colors.purple.dark.a12}" } },
  default: { value: { _light: "{colors.purple.9}", _dark: "{colors.purple.9}" } },
  emphasized: { value: { _light: "{colors.purple.10}", _dark: "{colors.purple.10}" } },
  fg: { value: { _light: "white", _dark: "white" } },
  text: { value: { _light: "{colors.purple.a11}", _dark: "{colors.purple.a11}" } }
};

// src/theme/semantic-tokens/colors/red.ts
var red = {
  1: { value: { _light: "{colors.red.light.1}", _dark: "{colors.red.dark.1}" } },
  2: { value: { _light: "{colors.red.light.2}", _dark: "{colors.red.dark.2}" } },
  3: { value: { _light: "{colors.red.light.3}", _dark: "{colors.red.dark.3}" } },
  4: { value: { _light: "{colors.red.light.4}", _dark: "{colors.red.dark.4}" } },
  5: { value: { _light: "{colors.red.light.5}", _dark: "{colors.red.dark.5}" } },
  6: { value: { _light: "{colors.red.light.6}", _dark: "{colors.red.dark.6}" } },
  7: { value: { _light: "{colors.red.light.7}", _dark: "{colors.red.dark.7}" } },
  8: { value: { _light: "{colors.red.light.8}", _dark: "{colors.red.dark.8}" } },
  9: { value: { _light: "{colors.red.light.9}", _dark: "{colors.red.dark.9}" } },
  10: { value: { _light: "{colors.red.light.10}", _dark: "{colors.red.dark.10}" } },
  11: { value: { _light: "{colors.red.light.11}", _dark: "{colors.red.dark.11}" } },
  12: { value: { _light: "{colors.red.light.12}", _dark: "{colors.red.dark.12}" } },
  a1: { value: { _light: "{colors.red.light.a1}", _dark: "{colors.red.dark.a1}" } },
  a2: { value: { _light: "{colors.red.light.a2}", _dark: "{colors.red.dark.a2}" } },
  a3: { value: { _light: "{colors.red.light.a3}", _dark: "{colors.red.dark.a3}" } },
  a4: { value: { _light: "{colors.red.light.a4}", _dark: "{colors.red.dark.a4}" } },
  a5: { value: { _light: "{colors.red.light.a5}", _dark: "{colors.red.dark.a5}" } },
  a6: { value: { _light: "{colors.red.light.a6}", _dark: "{colors.red.dark.a6}" } },
  a7: { value: { _light: "{colors.red.light.a7}", _dark: "{colors.red.dark.a7}" } },
  a8: { value: { _light: "{colors.red.light.a8}", _dark: "{colors.red.dark.a8}" } },
  a9: { value: { _light: "{colors.red.light.a9}", _dark: "{colors.red.dark.a9}" } },
  a10: { value: { _light: "{colors.red.light.a10}", _dark: "{colors.red.dark.a10}" } },
  a11: { value: { _light: "{colors.red.light.a11}", _dark: "{colors.red.dark.a11}" } },
  a12: { value: { _light: "{colors.red.light.a12}", _dark: "{colors.red.dark.a12}" } },
  default: { value: { _light: "{colors.red.9}", _dark: "{colors.red.9}" } },
  emphasized: { value: { _light: "{colors.red.10}", _dark: "{colors.red.10}" } },
  fg: { value: { _light: "white", _dark: "white" } },
  text: { value: { _light: "{colors.red.a11}", _dark: "{colors.red.a11}" } }
};

// src/theme/semantic-tokens/colors/ruby.ts
var ruby = {
  1: { value: { _light: "{colors.ruby.light.1}", _dark: "{colors.ruby.dark.1}" } },
  2: { value: { _light: "{colors.ruby.light.2}", _dark: "{colors.ruby.dark.2}" } },
  3: { value: { _light: "{colors.ruby.light.3}", _dark: "{colors.ruby.dark.3}" } },
  4: { value: { _light: "{colors.ruby.light.4}", _dark: "{colors.ruby.dark.4}" } },
  5: { value: { _light: "{colors.ruby.light.5}", _dark: "{colors.ruby.dark.5}" } },
  6: { value: { _light: "{colors.ruby.light.6}", _dark: "{colors.ruby.dark.6}" } },
  7: { value: { _light: "{colors.ruby.light.7}", _dark: "{colors.ruby.dark.7}" } },
  8: { value: { _light: "{colors.ruby.light.8}", _dark: "{colors.ruby.dark.8}" } },
  9: { value: { _light: "{colors.ruby.light.9}", _dark: "{colors.ruby.dark.9}" } },
  10: { value: { _light: "{colors.ruby.light.10}", _dark: "{colors.ruby.dark.10}" } },
  11: { value: { _light: "{colors.ruby.light.11}", _dark: "{colors.ruby.dark.11}" } },
  12: { value: { _light: "{colors.ruby.light.12}", _dark: "{colors.ruby.dark.12}" } },
  a1: { value: { _light: "{colors.ruby.light.a1}", _dark: "{colors.ruby.dark.a1}" } },
  a2: { value: { _light: "{colors.ruby.light.a2}", _dark: "{colors.ruby.dark.a2}" } },
  a3: { value: { _light: "{colors.ruby.light.a3}", _dark: "{colors.ruby.dark.a3}" } },
  a4: { value: { _light: "{colors.ruby.light.a4}", _dark: "{colors.ruby.dark.a4}" } },
  a5: { value: { _light: "{colors.ruby.light.a5}", _dark: "{colors.ruby.dark.a5}" } },
  a6: { value: { _light: "{colors.ruby.light.a6}", _dark: "{colors.ruby.dark.a6}" } },
  a7: { value: { _light: "{colors.ruby.light.a7}", _dark: "{colors.ruby.dark.a7}" } },
  a8: { value: { _light: "{colors.ruby.light.a8}", _dark: "{colors.ruby.dark.a8}" } },
  a9: { value: { _light: "{colors.ruby.light.a9}", _dark: "{colors.ruby.dark.a9}" } },
  a10: { value: { _light: "{colors.ruby.light.a10}", _dark: "{colors.ruby.dark.a10}" } },
  a11: { value: { _light: "{colors.ruby.light.a11}", _dark: "{colors.ruby.dark.a11}" } },
  a12: { value: { _light: "{colors.ruby.light.a12}", _dark: "{colors.ruby.dark.a12}" } },
  default: { value: { _light: "{colors.ruby.9}", _dark: "{colors.ruby.9}" } },
  emphasized: { value: { _light: "{colors.ruby.10}", _dark: "{colors.ruby.10}" } },
  fg: { value: { _light: "white", _dark: "white" } },
  text: { value: { _light: "{colors.ruby.a11}", _dark: "{colors.ruby.a11}" } }
};

// src/theme/semantic-tokens/colors/sage.ts
var sage = {
  1: { value: { _light: "{colors.sage.light.1}", _dark: "{colors.sage.dark.1}" } },
  2: { value: { _light: "{colors.sage.light.2}", _dark: "{colors.sage.dark.2}" } },
  3: { value: { _light: "{colors.sage.light.3}", _dark: "{colors.sage.dark.3}" } },
  4: { value: { _light: "{colors.sage.light.4}", _dark: "{colors.sage.dark.4}" } },
  5: { value: { _light: "{colors.sage.light.5}", _dark: "{colors.sage.dark.5}" } },
  6: { value: { _light: "{colors.sage.light.6}", _dark: "{colors.sage.dark.6}" } },
  7: { value: { _light: "{colors.sage.light.7}", _dark: "{colors.sage.dark.7}" } },
  8: { value: { _light: "{colors.sage.light.8}", _dark: "{colors.sage.dark.8}" } },
  9: { value: { _light: "{colors.sage.light.9}", _dark: "{colors.sage.dark.9}" } },
  10: { value: { _light: "{colors.sage.light.10}", _dark: "{colors.sage.dark.10}" } },
  11: { value: { _light: "{colors.sage.light.11}", _dark: "{colors.sage.dark.11}" } },
  12: { value: { _light: "{colors.sage.light.12}", _dark: "{colors.sage.dark.12}" } },
  a1: { value: { _light: "{colors.sage.light.a1}", _dark: "{colors.sage.dark.a1}" } },
  a2: { value: { _light: "{colors.sage.light.a2}", _dark: "{colors.sage.dark.a2}" } },
  a3: { value: { _light: "{colors.sage.light.a3}", _dark: "{colors.sage.dark.a3}" } },
  a4: { value: { _light: "{colors.sage.light.a4}", _dark: "{colors.sage.dark.a4}" } },
  a5: { value: { _light: "{colors.sage.light.a5}", _dark: "{colors.sage.dark.a5}" } },
  a6: { value: { _light: "{colors.sage.light.a6}", _dark: "{colors.sage.dark.a6}" } },
  a7: { value: { _light: "{colors.sage.light.a7}", _dark: "{colors.sage.dark.a7}" } },
  a8: { value: { _light: "{colors.sage.light.a8}", _dark: "{colors.sage.dark.a8}" } },
  a9: { value: { _light: "{colors.sage.light.a9}", _dark: "{colors.sage.dark.a9}" } },
  a10: { value: { _light: "{colors.sage.light.a10}", _dark: "{colors.sage.dark.a10}" } },
  a11: { value: { _light: "{colors.sage.light.a11}", _dark: "{colors.sage.dark.a11}" } },
  a12: { value: { _light: "{colors.sage.light.a12}", _dark: "{colors.sage.dark.a12}" } },
  default: { value: { _light: "{colors.sage.9}", _dark: "{colors.sage.9}" } },
  emphasized: { value: { _light: "{colors.sage.10}", _dark: "{colors.sage.10}" } },
  fg: { value: { _light: "white", _dark: "white" } },
  text: { value: { _light: "{colors.sage.12}", _dark: "{colors.sage.12}" } }
};

// src/theme/semantic-tokens/colors/sand.ts
var sand = {
  1: { value: { _light: "{colors.sand.light.1}", _dark: "{colors.sand.dark.1}" } },
  2: { value: { _light: "{colors.sand.light.2}", _dark: "{colors.sand.dark.2}" } },
  3: { value: { _light: "{colors.sand.light.3}", _dark: "{colors.sand.dark.3}" } },
  4: { value: { _light: "{colors.sand.light.4}", _dark: "{colors.sand.dark.4}" } },
  5: { value: { _light: "{colors.sand.light.5}", _dark: "{colors.sand.dark.5}" } },
  6: { value: { _light: "{colors.sand.light.6}", _dark: "{colors.sand.dark.6}" } },
  7: { value: { _light: "{colors.sand.light.7}", _dark: "{colors.sand.dark.7}" } },
  8: { value: { _light: "{colors.sand.light.8}", _dark: "{colors.sand.dark.8}" } },
  9: { value: { _light: "{colors.sand.light.9}", _dark: "{colors.sand.dark.9}" } },
  10: { value: { _light: "{colors.sand.light.10}", _dark: "{colors.sand.dark.10}" } },
  11: { value: { _light: "{colors.sand.light.11}", _dark: "{colors.sand.dark.11}" } },
  12: { value: { _light: "{colors.sand.light.12}", _dark: "{colors.sand.dark.12}" } },
  a1: { value: { _light: "{colors.sand.light.a1}", _dark: "{colors.sand.dark.a1}" } },
  a2: { value: { _light: "{colors.sand.light.a2}", _dark: "{colors.sand.dark.a2}" } },
  a3: { value: { _light: "{colors.sand.light.a3}", _dark: "{colors.sand.dark.a3}" } },
  a4: { value: { _light: "{colors.sand.light.a4}", _dark: "{colors.sand.dark.a4}" } },
  a5: { value: { _light: "{colors.sand.light.a5}", _dark: "{colors.sand.dark.a5}" } },
  a6: { value: { _light: "{colors.sand.light.a6}", _dark: "{colors.sand.dark.a6}" } },
  a7: { value: { _light: "{colors.sand.light.a7}", _dark: "{colors.sand.dark.a7}" } },
  a8: { value: { _light: "{colors.sand.light.a8}", _dark: "{colors.sand.dark.a8}" } },
  a9: { value: { _light: "{colors.sand.light.a9}", _dark: "{colors.sand.dark.a9}" } },
  a10: { value: { _light: "{colors.sand.light.a10}", _dark: "{colors.sand.dark.a10}" } },
  a11: { value: { _light: "{colors.sand.light.a11}", _dark: "{colors.sand.dark.a11}" } },
  a12: { value: { _light: "{colors.sand.light.a12}", _dark: "{colors.sand.dark.a12}" } },
  default: { value: { _light: "{colors.sand.9}", _dark: "{colors.sand.9}" } },
  emphasized: { value: { _light: "{colors.sand.10}", _dark: "{colors.sand.10}" } },
  fg: { value: { _light: "white", _dark: "white" } },
  text: { value: { _light: "{colors.sand.12}", _dark: "{colors.sand.12}" } }
};

// src/theme/semantic-tokens/colors/sky.ts
var sky = {
  1: { value: { _light: "{colors.sky.light.1}", _dark: "{colors.sky.dark.1}" } },
  2: { value: { _light: "{colors.sky.light.2}", _dark: "{colors.sky.dark.2}" } },
  3: { value: { _light: "{colors.sky.light.3}", _dark: "{colors.sky.dark.3}" } },
  4: { value: { _light: "{colors.sky.light.4}", _dark: "{colors.sky.dark.4}" } },
  5: { value: { _light: "{colors.sky.light.5}", _dark: "{colors.sky.dark.5}" } },
  6: { value: { _light: "{colors.sky.light.6}", _dark: "{colors.sky.dark.6}" } },
  7: { value: { _light: "{colors.sky.light.7}", _dark: "{colors.sky.dark.7}" } },
  8: { value: { _light: "{colors.sky.light.8}", _dark: "{colors.sky.dark.8}" } },
  9: { value: { _light: "{colors.sky.light.9}", _dark: "{colors.sky.dark.9}" } },
  10: { value: { _light: "{colors.sky.light.10}", _dark: "{colors.sky.dark.10}" } },
  11: { value: { _light: "{colors.sky.light.11}", _dark: "{colors.sky.dark.11}" } },
  12: { value: { _light: "{colors.sky.light.12}", _dark: "{colors.sky.dark.12}" } },
  a1: { value: { _light: "{colors.sky.light.a1}", _dark: "{colors.sky.dark.a1}" } },
  a2: { value: { _light: "{colors.sky.light.a2}", _dark: "{colors.sky.dark.a2}" } },
  a3: { value: { _light: "{colors.sky.light.a3}", _dark: "{colors.sky.dark.a3}" } },
  a4: { value: { _light: "{colors.sky.light.a4}", _dark: "{colors.sky.dark.a4}" } },
  a5: { value: { _light: "{colors.sky.light.a5}", _dark: "{colors.sky.dark.a5}" } },
  a6: { value: { _light: "{colors.sky.light.a6}", _dark: "{colors.sky.dark.a6}" } },
  a7: { value: { _light: "{colors.sky.light.a7}", _dark: "{colors.sky.dark.a7}" } },
  a8: { value: { _light: "{colors.sky.light.a8}", _dark: "{colors.sky.dark.a8}" } },
  a9: { value: { _light: "{colors.sky.light.a9}", _dark: "{colors.sky.dark.a9}" } },
  a10: { value: { _light: "{colors.sky.light.a10}", _dark: "{colors.sky.dark.a10}" } },
  a11: { value: { _light: "{colors.sky.light.a11}", _dark: "{colors.sky.dark.a11}" } },
  a12: { value: { _light: "{colors.sky.light.a12}", _dark: "{colors.sky.dark.a12}" } },
  default: { value: { _light: "{colors.sky.9}", _dark: "{colors.sky.9}" } },
  emphasized: { value: { _light: "{colors.sky.10}", _dark: "{colors.sky.10}" } },
  fg: { value: { _light: "{colors.slate.light.12}", _dark: "{colors.slate.light.12}" } },
  text: { value: { _light: "{colors.sky.a11}", _dark: "{colors.sky.a11}" } }
};

// src/theme/semantic-tokens/colors/slate.ts
var slate = {
  1: { value: { _light: "{colors.slate.light.1}", _dark: "{colors.slate.dark.1}" } },
  2: { value: { _light: "{colors.slate.light.2}", _dark: "{colors.slate.dark.2}" } },
  3: { value: { _light: "{colors.slate.light.3}", _dark: "{colors.slate.dark.3}" } },
  4: { value: { _light: "{colors.slate.light.4}", _dark: "{colors.slate.dark.4}" } },
  5: { value: { _light: "{colors.slate.light.5}", _dark: "{colors.slate.dark.5}" } },
  6: { value: { _light: "{colors.slate.light.6}", _dark: "{colors.slate.dark.6}" } },
  7: { value: { _light: "{colors.slate.light.7}", _dark: "{colors.slate.dark.7}" } },
  8: { value: { _light: "{colors.slate.light.8}", _dark: "{colors.slate.dark.8}" } },
  9: { value: { _light: "{colors.slate.light.9}", _dark: "{colors.slate.dark.9}" } },
  10: { value: { _light: "{colors.slate.light.10}", _dark: "{colors.slate.dark.10}" } },
  11: { value: { _light: "{colors.slate.light.11}", _dark: "{colors.slate.dark.11}" } },
  12: { value: { _light: "{colors.slate.light.12}", _dark: "{colors.slate.dark.12}" } },
  a1: { value: { _light: "{colors.slate.light.a1}", _dark: "{colors.slate.dark.a1}" } },
  a2: { value: { _light: "{colors.slate.light.a2}", _dark: "{colors.slate.dark.a2}" } },
  a3: { value: { _light: "{colors.slate.light.a3}", _dark: "{colors.slate.dark.a3}" } },
  a4: { value: { _light: "{colors.slate.light.a4}", _dark: "{colors.slate.dark.a4}" } },
  a5: { value: { _light: "{colors.slate.light.a5}", _dark: "{colors.slate.dark.a5}" } },
  a6: { value: { _light: "{colors.slate.light.a6}", _dark: "{colors.slate.dark.a6}" } },
  a7: { value: { _light: "{colors.slate.light.a7}", _dark: "{colors.slate.dark.a7}" } },
  a8: { value: { _light: "{colors.slate.light.a8}", _dark: "{colors.slate.dark.a8}" } },
  a9: { value: { _light: "{colors.slate.light.a9}", _dark: "{colors.slate.dark.a9}" } },
  a10: { value: { _light: "{colors.slate.light.a10}", _dark: "{colors.slate.dark.a10}" } },
  a11: { value: { _light: "{colors.slate.light.a11}", _dark: "{colors.slate.dark.a11}" } },
  a12: { value: { _light: "{colors.slate.light.a12}", _dark: "{colors.slate.dark.a12}" } },
  default: { value: { _light: "{colors.slate.9}", _dark: "{colors.slate.9}" } },
  emphasized: { value: { _light: "{colors.slate.10}", _dark: "{colors.slate.10}" } },
  fg: { value: { _light: "white", _dark: "white" } },
  text: { value: { _light: "{colors.slate.12}", _dark: "{colors.slate.12}" } }
};

// src/theme/semantic-tokens/colors/teal.ts
var teal = {
  1: { value: { _light: "{colors.teal.light.1}", _dark: "{colors.teal.dark.1}" } },
  2: { value: { _light: "{colors.teal.light.2}", _dark: "{colors.teal.dark.2}" } },
  3: { value: { _light: "{colors.teal.light.3}", _dark: "{colors.teal.dark.3}" } },
  4: { value: { _light: "{colors.teal.light.4}", _dark: "{colors.teal.dark.4}" } },
  5: { value: { _light: "{colors.teal.light.5}", _dark: "{colors.teal.dark.5}" } },
  6: { value: { _light: "{colors.teal.light.6}", _dark: "{colors.teal.dark.6}" } },
  7: { value: { _light: "{colors.teal.light.7}", _dark: "{colors.teal.dark.7}" } },
  8: { value: { _light: "{colors.teal.light.8}", _dark: "{colors.teal.dark.8}" } },
  9: { value: { _light: "{colors.teal.light.9}", _dark: "{colors.teal.dark.9}" } },
  10: { value: { _light: "{colors.teal.light.10}", _dark: "{colors.teal.dark.10}" } },
  11: { value: { _light: "{colors.teal.light.11}", _dark: "{colors.teal.dark.11}" } },
  12: { value: { _light: "{colors.teal.light.12}", _dark: "{colors.teal.dark.12}" } },
  a1: { value: { _light: "{colors.teal.light.a1}", _dark: "{colors.teal.dark.a1}" } },
  a2: { value: { _light: "{colors.teal.light.a2}", _dark: "{colors.teal.dark.a2}" } },
  a3: { value: { _light: "{colors.teal.light.a3}", _dark: "{colors.teal.dark.a3}" } },
  a4: { value: { _light: "{colors.teal.light.a4}", _dark: "{colors.teal.dark.a4}" } },
  a5: { value: { _light: "{colors.teal.light.a5}", _dark: "{colors.teal.dark.a5}" } },
  a6: { value: { _light: "{colors.teal.light.a6}", _dark: "{colors.teal.dark.a6}" } },
  a7: { value: { _light: "{colors.teal.light.a7}", _dark: "{colors.teal.dark.a7}" } },
  a8: { value: { _light: "{colors.teal.light.a8}", _dark: "{colors.teal.dark.a8}" } },
  a9: { value: { _light: "{colors.teal.light.a9}", _dark: "{colors.teal.dark.a9}" } },
  a10: { value: { _light: "{colors.teal.light.a10}", _dark: "{colors.teal.dark.a10}" } },
  a11: { value: { _light: "{colors.teal.light.a11}", _dark: "{colors.teal.dark.a11}" } },
  a12: { value: { _light: "{colors.teal.light.a12}", _dark: "{colors.teal.dark.a12}" } },
  default: { value: { _light: "{colors.teal.9}", _dark: "{colors.teal.9}" } },
  emphasized: { value: { _light: "{colors.teal.10}", _dark: "{colors.teal.10}" } },
  fg: { value: { _light: "white", _dark: "white" } },
  text: { value: { _light: "{colors.teal.a11}", _dark: "{colors.teal.a11}" } }
};

// src/theme/semantic-tokens/colors/tomato.ts
var tomato = {
  1: { value: { _light: "{colors.tomato.light.1}", _dark: "{colors.tomato.dark.1}" } },
  2: { value: { _light: "{colors.tomato.light.2}", _dark: "{colors.tomato.dark.2}" } },
  3: { value: { _light: "{colors.tomato.light.3}", _dark: "{colors.tomato.dark.3}" } },
  4: { value: { _light: "{colors.tomato.light.4}", _dark: "{colors.tomato.dark.4}" } },
  5: { value: { _light: "{colors.tomato.light.5}", _dark: "{colors.tomato.dark.5}" } },
  6: { value: { _light: "{colors.tomato.light.6}", _dark: "{colors.tomato.dark.6}" } },
  7: { value: { _light: "{colors.tomato.light.7}", _dark: "{colors.tomato.dark.7}" } },
  8: { value: { _light: "{colors.tomato.light.8}", _dark: "{colors.tomato.dark.8}" } },
  9: { value: { _light: "{colors.tomato.light.9}", _dark: "{colors.tomato.dark.9}" } },
  10: { value: { _light: "{colors.tomato.light.10}", _dark: "{colors.tomato.dark.10}" } },
  11: { value: { _light: "{colors.tomato.light.11}", _dark: "{colors.tomato.dark.11}" } },
  12: { value: { _light: "{colors.tomato.light.12}", _dark: "{colors.tomato.dark.12}" } },
  a1: { value: { _light: "{colors.tomato.light.a1}", _dark: "{colors.tomato.dark.a1}" } },
  a2: { value: { _light: "{colors.tomato.light.a2}", _dark: "{colors.tomato.dark.a2}" } },
  a3: { value: { _light: "{colors.tomato.light.a3}", _dark: "{colors.tomato.dark.a3}" } },
  a4: { value: { _light: "{colors.tomato.light.a4}", _dark: "{colors.tomato.dark.a4}" } },
  a5: { value: { _light: "{colors.tomato.light.a5}", _dark: "{colors.tomato.dark.a5}" } },
  a6: { value: { _light: "{colors.tomato.light.a6}", _dark: "{colors.tomato.dark.a6}" } },
  a7: { value: { _light: "{colors.tomato.light.a7}", _dark: "{colors.tomato.dark.a7}" } },
  a8: { value: { _light: "{colors.tomato.light.a8}", _dark: "{colors.tomato.dark.a8}" } },
  a9: { value: { _light: "{colors.tomato.light.a9}", _dark: "{colors.tomato.dark.a9}" } },
  a10: { value: { _light: "{colors.tomato.light.a10}", _dark: "{colors.tomato.dark.a10}" } },
  a11: { value: { _light: "{colors.tomato.light.a11}", _dark: "{colors.tomato.dark.a11}" } },
  a12: { value: { _light: "{colors.tomato.light.a12}", _dark: "{colors.tomato.dark.a12}" } },
  default: { value: { _light: "{colors.tomato.9}", _dark: "{colors.tomato.9}" } },
  emphasized: { value: { _light: "{colors.tomato.10}", _dark: "{colors.tomato.10}" } },
  fg: { value: { _light: "white", _dark: "white" } },
  text: { value: { _light: "{colors.tomato.a11}", _dark: "{colors.tomato.a11}" } }
};

// src/theme/semantic-tokens/colors/violet.ts
var violet = {
  1: { value: { _light: "{colors.violet.light.1}", _dark: "{colors.violet.dark.1}" } },
  2: { value: { _light: "{colors.violet.light.2}", _dark: "{colors.violet.dark.2}" } },
  3: { value: { _light: "{colors.violet.light.3}", _dark: "{colors.violet.dark.3}" } },
  4: { value: { _light: "{colors.violet.light.4}", _dark: "{colors.violet.dark.4}" } },
  5: { value: { _light: "{colors.violet.light.5}", _dark: "{colors.violet.dark.5}" } },
  6: { value: { _light: "{colors.violet.light.6}", _dark: "{colors.violet.dark.6}" } },
  7: { value: { _light: "{colors.violet.light.7}", _dark: "{colors.violet.dark.7}" } },
  8: { value: { _light: "{colors.violet.light.8}", _dark: "{colors.violet.dark.8}" } },
  9: { value: { _light: "{colors.violet.light.9}", _dark: "{colors.violet.dark.9}" } },
  10: { value: { _light: "{colors.violet.light.10}", _dark: "{colors.violet.dark.10}" } },
  11: { value: { _light: "{colors.violet.light.11}", _dark: "{colors.violet.dark.11}" } },
  12: { value: { _light: "{colors.violet.light.12}", _dark: "{colors.violet.dark.12}" } },
  a1: { value: { _light: "{colors.violet.light.a1}", _dark: "{colors.violet.dark.a1}" } },
  a2: { value: { _light: "{colors.violet.light.a2}", _dark: "{colors.violet.dark.a2}" } },
  a3: { value: { _light: "{colors.violet.light.a3}", _dark: "{colors.violet.dark.a3}" } },
  a4: { value: { _light: "{colors.violet.light.a4}", _dark: "{colors.violet.dark.a4}" } },
  a5: { value: { _light: "{colors.violet.light.a5}", _dark: "{colors.violet.dark.a5}" } },
  a6: { value: { _light: "{colors.violet.light.a6}", _dark: "{colors.violet.dark.a6}" } },
  a7: { value: { _light: "{colors.violet.light.a7}", _dark: "{colors.violet.dark.a7}" } },
  a8: { value: { _light: "{colors.violet.light.a8}", _dark: "{colors.violet.dark.a8}" } },
  a9: { value: { _light: "{colors.violet.light.a9}", _dark: "{colors.violet.dark.a9}" } },
  a10: { value: { _light: "{colors.violet.light.a10}", _dark: "{colors.violet.dark.a10}" } },
  a11: { value: { _light: "{colors.violet.light.a11}", _dark: "{colors.violet.dark.a11}" } },
  a12: { value: { _light: "{colors.violet.light.a12}", _dark: "{colors.violet.dark.a12}" } },
  default: { value: { _light: "{colors.violet.9}", _dark: "{colors.violet.9}" } },
  emphasized: { value: { _light: "{colors.violet.10}", _dark: "{colors.violet.10}" } },
  fg: { value: { _light: "white", _dark: "white" } },
  text: { value: { _light: "{colors.violet.a11}", _dark: "{colors.violet.a11}" } }
};

// src/theme/semantic-tokens/colors/yellow.ts
var yellow = {
  1: { value: { _light: "{colors.yellow.light.1}", _dark: "{colors.yellow.dark.1}" } },
  2: { value: { _light: "{colors.yellow.light.2}", _dark: "{colors.yellow.dark.2}" } },
  3: { value: { _light: "{colors.yellow.light.3}", _dark: "{colors.yellow.dark.3}" } },
  4: { value: { _light: "{colors.yellow.light.4}", _dark: "{colors.yellow.dark.4}" } },
  5: { value: { _light: "{colors.yellow.light.5}", _dark: "{colors.yellow.dark.5}" } },
  6: { value: { _light: "{colors.yellow.light.6}", _dark: "{colors.yellow.dark.6}" } },
  7: { value: { _light: "{colors.yellow.light.7}", _dark: "{colors.yellow.dark.7}" } },
  8: { value: { _light: "{colors.yellow.light.8}", _dark: "{colors.yellow.dark.8}" } },
  9: { value: { _light: "{colors.yellow.light.9}", _dark: "{colors.yellow.dark.9}" } },
  10: { value: { _light: "{colors.yellow.light.10}", _dark: "{colors.yellow.dark.10}" } },
  11: { value: { _light: "{colors.yellow.light.11}", _dark: "{colors.yellow.dark.11}" } },
  12: { value: { _light: "{colors.yellow.light.12}", _dark: "{colors.yellow.dark.12}" } },
  a1: { value: { _light: "{colors.yellow.light.a1}", _dark: "{colors.yellow.dark.a1}" } },
  a2: { value: { _light: "{colors.yellow.light.a2}", _dark: "{colors.yellow.dark.a2}" } },
  a3: { value: { _light: "{colors.yellow.light.a3}", _dark: "{colors.yellow.dark.a3}" } },
  a4: { value: { _light: "{colors.yellow.light.a4}", _dark: "{colors.yellow.dark.a4}" } },
  a5: { value: { _light: "{colors.yellow.light.a5}", _dark: "{colors.yellow.dark.a5}" } },
  a6: { value: { _light: "{colors.yellow.light.a6}", _dark: "{colors.yellow.dark.a6}" } },
  a7: { value: { _light: "{colors.yellow.light.a7}", _dark: "{colors.yellow.dark.a7}" } },
  a8: { value: { _light: "{colors.yellow.light.a8}", _dark: "{colors.yellow.dark.a8}" } },
  a9: { value: { _light: "{colors.yellow.light.a9}", _dark: "{colors.yellow.dark.a9}" } },
  a10: { value: { _light: "{colors.yellow.light.a10}", _dark: "{colors.yellow.dark.a10}" } },
  a11: { value: { _light: "{colors.yellow.light.a11}", _dark: "{colors.yellow.dark.a11}" } },
  a12: { value: { _light: "{colors.yellow.light.a12}", _dark: "{colors.yellow.dark.a12}" } },
  default: { value: { _light: "{colors.yellow.9}", _dark: "{colors.yellow.9}" } },
  emphasized: { value: { _light: "{colors.yellow.10}", _dark: "{colors.yellow.10}" } },
  fg: { value: { _light: "{colors.sand.light.12}", _dark: "{colors.sand.light.12}" } },
  text: { value: { _light: "{colors.yellow.a11}", _dark: "{colors.yellow.a11}" } }
};

// src/theme/semantic-tokens/colors/index.ts
var colors = {
  amber,
  blue,
  bronze,
  brown,
  crimson,
  cyan,
  gold,
  grass,
  green,
  indigo,
  iris,
  jade,
  lime,
  mauve,
  mint,
  neutral,
  olive,
  orange,
  pink,
  plum,
  purple,
  red,
  ruby,
  sage,
  sand,
  sky,
  slate,
  teal,
  tomato,
  violet,
  yellow
};

// src/theme/semantic-tokens/radii.ts
import { defineSemanticTokens } from "@pandacss/dev";
import { match } from "ts-pattern";
var createRadiiTokens = (borderRadius) => {
  return defineSemanticTokens.radii(
    match(borderRadius).with("none", () => ({
      l1: { value: "{radii.none}" },
      l2: { value: "{radii.none}" },
      l3: { value: "{radii.none}" }
    })).with("xs", () => ({
      l1: { value: "{radii.2xs}" },
      l2: { value: "{radii.xs}" },
      l3: { value: "{radii.sm}" }
    })).with("sm", () => ({
      l1: { value: "{radii.xs}" },
      l2: { value: "{radii.sm}" },
      l3: { value: "{radii.md}" }
    })).with("md", () => ({
      l1: { value: "{radii.sm}" },
      l2: { value: "{radii.md}" },
      l3: { value: "{radii.lg}" }
    })).with("lg", () => ({
      l1: { value: "{radii.md}" },
      l2: { value: "{radii.lg}" },
      l3: { value: "{radii.xl}" }
    })).with("xl", () => ({
      l1: { value: "{radii.lg}" },
      l2: { value: "{radii.xl}" },
      l3: { value: "{radii.2xl}" }
    })).with("2xl", () => ({
      l1: { value: "{radii.xl}" },
      l2: { value: "{radii.2xl}" },
      l3: { value: "{radii.3xl}" }
    })).exhaustive()
  );
};

// src/theme/semantic-tokens/shadows.ts
import { defineSemanticTokens as defineSemanticTokens2 } from "@pandacss/dev";
var shadows = defineSemanticTokens2.shadows({
  xs: {
    value: {
      _light: "0px 1px 2px {colors.gray.a5}, 0px 0px 1px {colors.gray.a7}",
      _dark: "0px 1px 1px {colors.black.a12}, 0px 0px 1px inset {colors.gray.a7}"
    }
  },
  sm: {
    value: {
      _light: "0px 2px 4px {colors.gray.a3}, 0px 0px 1px {colors.gray.a7}",
      _dark: "0px 2px 4px {colors.black.a10}, 0px 0px 1px inset {colors.gray.a7}"
    }
  },
  md: {
    value: {
      _light: "0px 4px 8px {colors.gray.a3}, 0px 0px 1px {colors.gray.a7}",
      _dark: "0px 4px 8px {colors.black.a10}, 0px 0px 1px inset {colors.gray.a7}"
    }
  },
  lg: {
    value: {
      _light: "0px 8px 16px {colors.gray.a3}, 0px 0px 1px {colors.gray.a7}",
      _dark: "0px 8px 16px {colors.black.a10}, 0px 0px 1px inset {colors.gray.a7}"
    }
  },
  xl: {
    value: {
      _light: "0px 16px 24px {colors.gray.a3}, 0px 0px 1px {colors.gray.a7}",
      _dark: "0px 16px 24px {colors.black.a10}, 0px 0px 1px inset {colors.gray.a7}"
    }
  },
  "2xl": {
    value: {
      _light: "0px 24px 40px {colors.gray.a3}, 0px 0px 1px {colors.gray.a7}",
      _dark: "0px 24px 40px {colors.black.a10}, 0px 0px 1px inset {colors.gray.a7}"
    }
  }
});

// src/theme/semantic-tokens/index.ts
var createSemanticTokens = (options) => {
  const {
    accentColor = "neutral",
    additionalColors = [],
    borderRadius = "sm",
    grayColor = "neutral"
  } = options;
  const availableColors = [grayColor, accentColor, "red", ...additionalColors];
  const extraColors = Object.fromEntries(
    Object.entries(colors).filter(
      ([color]) => availableColors.includes("*") || availableColors.includes(color)
    )
  );
  return defineSemanticTokens3({
    colors: {
      ...extraColors,
      gray: colors[grayColor],
      accent: colors[accentColor],
      bg: {
        canvas: { value: { _light: "{colors.gray.1}", _dark: "{colors.gray.1}" } },
        default: { value: { _light: "white", _dark: "{colors.gray.2}" } },
        subtle: { value: { _light: "{colors.gray.2}", _dark: "{colors.gray.3}" } },
        muted: { value: { _light: "{colors.gray.3}", _dark: "{colors.gray.4}" } },
        emphasized: { value: { _light: "{colors.gray.4}", _dark: "{colors.gray.5}" } },
        disabled: { value: { _light: "{colors.gray.5}", _dark: "{colors.gray.6}" } }
      },
      fg: {
        default: { value: { _light: "{colors.gray.12}", _dark: "{colors.gray.12}" } },
        muted: { value: { _light: "{colors.gray.11}", _dark: "{colors.gray.11}" } },
        subtle: { value: { _light: "{colors.gray.10}", _dark: "{colors.gray.10}" } },
        disabled: { value: { _light: "{colors.gray.9}", _dark: "{colors.gray.9}" } },
        error: { value: { _light: "{colors.red.9}", _dark: "{colors.red.9}" } }
      },
      border: {
        default: { value: { _light: "{colors.gray.7}", _dark: "{colors.gray.7}" } },
        muted: { value: { _light: "{colors.gray.6}", _dark: "{colors.gray.6}" } },
        subtle: { value: { _light: "{colors.gray.4}", _dark: "{colors.gray.4}" } },
        disabled: { value: { _light: "{colors.gray.5}", _dark: "{colors.gray.5}" } },
        outline: { value: { _light: "{colors.gray.a9}", _dark: "{colors.gray.a9}" } },
        error: { value: { _light: "{colors.red.9}", _dark: "{colors.red.9}" } }
      }
    },
    shadows,
    radii: createRadiiTokens(borderRadius)
  });
};

// src/theme/text-styles.ts
import { defineTextStyles } from "@pandacss/dev";
var textStyles = defineTextStyles({
  xs: { value: { fontSize: "xs", lineHeight: "1.125rem" } },
  sm: { value: { fontSize: "sm", lineHeight: "1.25rem" } },
  md: { value: { fontSize: "md", lineHeight: "1.5rem" } },
  lg: { value: { fontSize: "lg", lineHeight: "1.75rem" } },
  xl: { value: { fontSize: "xl", lineHeight: "1.875rem" } },
  "2xl": { value: { fontSize: "2xl", lineHeight: "2rem" } },
  "3xl": { value: { fontSize: "3xl", lineHeight: "2.375rem" } },
  "4xl": { value: { fontSize: "4xl", lineHeight: "2.75rem", letterSpacing: "-0.02em" } },
  "5xl": { value: { fontSize: "5xl", lineHeight: "3.75rem", letterSpacing: "-0.02em" } },
  "6xl": { value: { fontSize: "6xl", lineHeight: "4.5rem", letterSpacing: "-0.02em" } },
  "7xl": { value: { fontSize: "7xl", lineHeight: "5.75rem", letterSpacing: "-0.02em" } }
});

// src/theme/tokens/index.ts
import { defineTokens as defineTokens11 } from "@pandacss/dev";

// src/theme/tokens/animations.ts
import { defineTokens } from "@pandacss/dev";
var animations = defineTokens.animations({
  "backdrop-in": {
    value: "fade-in 250ms {easings.emphasized-in}"
  },
  "backdrop-out": {
    value: "fade-out 200ms {easings.emphasized-out}"
  },
  "dialog-in": {
    value: "slide-in 400ms {easings.emphasized-in}"
  },
  "dialog-out": {
    value: "slide-out 200ms {easings.emphasized-out}"
  },
  "drawer-in-left": {
    value: "slide-in-left 400ms {easings.emphasized-in}"
  },
  "drawer-out-left": {
    value: "slide-out-left 200ms {easings.emphasized-out}"
  },
  "drawer-in-right": {
    value: "slide-in-right 400ms {easings.emphasized-in}"
  },
  "drawer-out-right": {
    value: "slide-out-right 200ms {easings.emphasized-out}"
  },
  "skeleton-pulse": {
    value: "skeleton-pulse 2s {easings.pulse} infinite"
  },
  "fade-in": {
    value: "fade-in 400ms {easings.emphasized-in}"
  },
  "collapse-in": {
    value: "collapse-in 250ms {easings.emphasized-in}"
  },
  "collapse-out": {
    value: "collapse-out 200ms {easings.emphasized-out}"
  },
  spin: {
    value: "spin 1s linear infinite"
  }
});

// src/theme/tokens/blurs.ts
import { defineTokens as defineTokens2 } from "@pandacss/dev";
var blurs = defineTokens2.blurs({
  sm: { value: "4px" },
  base: { value: "8px" },
  md: { value: "12px" },
  lg: { value: "16px" },
  xl: { value: "24px" },
  "2xl": { value: "40px" },
  "3xl": { value: "64px" }
});

// src/theme/tokens/borders.ts
var borders = {
  none: { value: "none" }
};

// src/theme/tokens/colors.ts
import { defineTokens as defineTokens4 } from "@pandacss/dev";

// src/theme/tokens/helpers/define-color-palettes.ts
import { defineTokens as defineTokens3 } from "@pandacss/dev";
import * as radixColors from "@radix-ui/colors";
import { match as match2 } from "ts-pattern";
var defineColorPalettes = (options) => {
  const { grayColor = "neutral", accentColor = "neutral", additionalColors = [] } = options;
  const availableColors = ["gray", "red", grayColor, accentColor, ...additionalColors];
  return Object.fromEntries(
    [...Object.keys(radixColors), "neutral"].filter((color) => !/[A-Z]/.test(color)).filter((color) => color !== "default").filter((color) => additionalColors.includes("*") || availableColors.includes(color)).map(
      (color) => match2(color).with("gray", () => [
        color,
        defineColorPalette(grayColor === "neutral" ? "gray" : grayColor)
      ]).with("neutral", () => [color, defineColorPalette("gray")]).otherwise(() => [color, defineColorPalette(color)])
    )
  );
};
var defineColorPalette = (color) => {
  const colorObj = Object.fromEntries(
    Object.keys(radixColors).filter((key) => key.startsWith(color)).filter((key) => !/\d/.test(key)).map((key) => {
      const tokens = toColorTokens(color, radixColors[key]);
      return [key, tokens];
    })
  );
  return defineTokens3.colors(
    Object.keys(colorObj).reduce(
      (acc, key) => {
        const target = key.includes("Dark") ? "dark" : "light";
        acc[target] = { ...acc[target], ...colorObj[key] };
        return acc;
      },
      { light: {}, dark: {} }
    )
  );
};
var toColorTokens = (color, scale) => {
  return Object.fromEntries(
    Object.keys(scale).map((key) => {
      const value = scale[key];
      const name = key.replace(color, "").toLowerCase();
      return [name, { value }];
    })
  );
};

// src/theme/tokens/colors.ts
var defineColorTokens = (options) => {
  const colorPalettes = defineColorPalettes(options);
  return defineTokens4.colors({
    current: { value: "currentColor" },
    black: {
      DEFAULT: { value: "#000000" },
      a1: { value: "rgba(0, 0, 0, 0.05)" },
      a2: { value: "rgba(0, 0, 0, 0.1)" },
      a3: { value: "rgba(0, 0, 0, 0.15)" },
      a4: { value: "rgba(0, 0, 0, 0.2)" },
      a5: { value: "rgba(0, 0, 0, 0.3)" },
      a6: { value: "rgba(0, 0, 0, 0.4)" },
      a7: { value: "rgba(0, 0, 0, 0.5)" },
      a8: { value: "rgba(0, 0, 0, 0.6)" },
      a9: { value: "rgba(0, 0, 0, 0.7)" },
      a10: { value: "rgba(0, 0, 0, 0.8)" },
      a11: { value: "rgba(0, 0, 0, 0.9)" },
      a12: { value: "rgba(0, 0, 0, 0.95)" }
    },
    white: {
      DEFAULT: { value: "#ffffff" },
      a1: { value: "rgba(255, 255, 255, 0.05)" },
      a2: { value: "rgba(255, 255, 255, 0.1)" },
      a3: { value: "rgba(255, 255, 255, 0.15)" },
      a4: { value: "rgba(255, 255, 255, 0.2)" },
      a5: { value: "rgba(255, 255, 255, 0.3)" },
      a6: { value: "rgba(255, 255, 255, 0.4)" },
      a7: { value: "rgba(255, 255, 255, 0.5)" },
      a8: { value: "rgba(255, 255, 255, 0.6)" },
      a9: { value: "rgba(255, 255, 255, 0.7)" },
      a10: { value: "rgba(255, 255, 255, 0.8)" },
      a11: { value: "rgba(255, 255, 255, 0.9)" },
      a12: { value: "rgba(255, 255, 255, 0.95)" }
    },
    transparent: { value: "rgb(0 0 0 / 0)" },
    ...colorPalettes
  });
};

// src/theme/tokens/durations.ts
import { defineTokens as defineTokens5 } from "@pandacss/dev";
var durations = defineTokens5.durations({
  fastest: { value: "50ms" },
  faster: { value: "100ms" },
  fast: { value: "150ms" },
  normal: { value: "200ms" },
  slow: { value: "300ms" },
  slower: { value: "400ms" },
  slowest: { value: "500ms" }
});

// src/theme/tokens/easings.ts
import { defineTokens as defineTokens6 } from "@pandacss/dev";
var easings = defineTokens6.easings({
  pulse: { value: "cubic-bezier(0.4, 0.0, 0.6, 1.0)" },
  default: { value: "cubic-bezier(0.2, 0.0, 0, 1.0)" },
  "emphasized-in": { value: "cubic-bezier(0.05, 0.7, 0.1, 1.0)" },
  "emphasized-out": { value: "cubic-bezier(0.3, 0.0, 0.8, 0.15)" }
});

// src/theme/tokens/radii.ts
import { defineTokens as defineTokens7 } from "@pandacss/dev";
var radii = defineTokens7.radii({
  none: { value: "0" },
  "2xs": { value: "0.0625rem" },
  xs: { value: "0.125rem" },
  sm: { value: "0.25rem" },
  md: { value: "0.375rem" },
  lg: { value: "0.5rem" },
  xl: { value: "0.75rem" },
  "2xl": { value: "1rem" },
  "3xl": { value: "1.5rem" },
  full: { value: "9999px" }
});

// src/theme/tokens/spacing.ts
import { defineTokens as defineTokens8 } from "@pandacss/dev";
var spacing = defineTokens8.spacing({
  0: { value: "0rem" },
  0.5: { value: "0.125rem" },
  1: { value: "0.25rem" },
  1.5: { value: "0.375rem" },
  2: { value: "0.5rem" },
  2.5: { value: "0.625rem" },
  3: { value: "0.75rem" },
  3.5: { value: "0.875rem" },
  4: { value: "1rem" },
  4.5: { value: "1.125rem" },
  5: { value: "1.25rem" },
  6: { value: "1.5rem" },
  7: { value: "1.75rem" },
  8: { value: "2rem" },
  9: { value: "2.25rem" },
  10: { value: "2.5rem" },
  11: { value: "2.75rem" },
  12: { value: "3rem" },
  14: { value: "3.5rem" },
  16: { value: "4rem" },
  20: { value: "5rem" },
  24: { value: "6rem" },
  28: { value: "7rem" },
  32: { value: "8rem" },
  36: { value: "9rem" },
  40: { value: "10rem" },
  44: { value: "11rem" },
  48: { value: "12rem" },
  52: { value: "13rem" },
  56: { value: "14rem" },
  60: { value: "15rem" },
  64: { value: "16rem" },
  72: { value: "18rem" },
  80: { value: "20rem" },
  96: { value: "24rem" }
});

// src/theme/tokens/sizes.ts
var largeSizes = {
  "2xs": { value: "16rem" },
  xs: { value: "20rem" },
  sm: { value: "24rem" },
  md: { value: "28rem" },
  lg: { value: "32rem" },
  xl: { value: "36rem" },
  "2xl": { value: "42rem" },
  "3xl": { value: "48rem" },
  "4xl": { value: "56rem" },
  "5xl": { value: "64rem" },
  "6xl": { value: "72rem" },
  "7xl": { value: "80rem" },
  "8xl": { value: "90rem" }
};
var sizes = {
  ...spacing,
  ...largeSizes,
  full: { value: "100%" },
  min: { value: "min-content" },
  max: { value: "max-content" },
  fit: { value: "fit-content" }
};

// src/theme/tokens/typography.ts
import { defineTokens as defineTokens9 } from "@pandacss/dev";
var fontSizes = defineTokens9.fontSizes({
  "2xs": { value: "0.5rem" },
  xs: { value: "0.75rem" },
  sm: { value: "0.875rem" },
  md: { value: "1rem" },
  lg: { value: "1.125rem" },
  xl: { value: "1.25rem" },
  "2xl": { value: "1.5rem" },
  "3xl": { value: "1.875rem" },
  "4xl": { value: "2.25rem" },
  "5xl": { value: "3rem" },
  "6xl": { value: "3.75rem" },
  "7xl": { value: "4.5rem" },
  "8xl": { value: "6rem" },
  "9xl": { value: "8rem" }
});
var fontWeights = defineTokens9.fontWeights({
  thin: { value: "100" },
  extralight: { value: "200" },
  light: { value: "300" },
  normal: { value: "400" },
  medium: { value: "500" },
  semibold: { value: "600" },
  bold: { value: "700" },
  extrabold: { value: "800" },
  black: { value: "900" }
});
var letterSpacings = defineTokens9.letterSpacings({
  tighter: { value: "-0.05em" },
  tight: { value: "-0.025em" },
  normal: { value: "0em" },
  wide: { value: "0.025em" },
  wider: { value: "0.05em" },
  widest: { value: "0.1em" }
});
var lineHeights = defineTokens9.lineHeights({
  none: { value: "1" },
  tight: { value: "1.25" },
  normal: { value: "1.5" },
  relaxed: { value: "1.75" },
  loose: { value: "2" }
});
var fonts = defineTokens9.fonts({
  sans: {
    value: [
      "ui-sans-serif",
      "system-ui",
      "-apple-system",
      "BlinkMacSystemFont",
      '"Segoe UI"',
      "Roboto",
      '"Helvetica Neue"',
      "Arial",
      '"Noto Sans"',
      "sans-serif",
      '"Apple Color Emoji"',
      '"Segoe UI Emoji"',
      '"Segoe UI Symbol"',
      '"Noto Color Emoji"'
    ]
  },
  serif: {
    value: ["ui-serif", "Georgia", "Cambria", '"Times New Roman"', "Times", "serif"]
  },
  mono: {
    value: [
      "ui-monospace",
      "SFMono-Regular",
      "Menlo",
      "Monaco",
      "Consolas",
      '"Liberation Mono"',
      '"Courier New"',
      "monospace"
    ]
  }
});

// src/theme/tokens/z-index.ts
import { defineTokens as defineTokens10 } from "@pandacss/dev";
var zIndex = defineTokens10.zIndex({
  hide: {
    value: -1
  },
  base: {
    value: 0
  },
  docked: {
    value: 10
  },
  dropdown: {
    value: 1e3
  },
  sticky: {
    value: 1100
  },
  banner: {
    value: 1200
  },
  overlay: {
    value: 1300
  },
  modal: {
    value: 1400
  },
  popover: {
    value: 1500
  },
  skipLink: {
    value: 1600
  },
  toast: {
    value: 1700
  },
  tooltip: {
    value: 1800
  }
});

// src/theme/tokens/index.ts
var createTokens = (options) => {
  return defineTokens11({
    animations,
    blurs,
    borders,
    colors: defineColorTokens(options),
    durations,
    easings,
    fonts,
    fontSizes,
    fontWeights,
    letterSpacings,
    lineHeights,
    radii,
    sizes,
    spacing,
    zIndex
  });
};

// src/types.ts
var borderRadii = ["none", "xs", "sm", "md", "lg", "xl", "2xl"];
var accentColors = [
  "neutral",
  "tomato",
  "red",
  "ruby",
  "crimson",
  "pink",
  "plum",
  "purple",
  "violet",
  "iris",
  "indigo",
  "blue",
  "cyan",
  "teal",
  "jade",
  "green",
  "grass",
  "bronze",
  "gold",
  "brown",
  "orange",
  "amber",
  "yellow",
  "lime",
  "mint",
  "sky"
];
var grayColors = ["neutral", "mauve", "olive", "sage", "sand", "slate"];

// src/index.ts
var defaultOptions = {
  accentColor: "neutral",
  additionalColors: [],
  borderRadius: "sm",
  grayColor: "neutral"
};
var createPreset = (options = defaultOptions) => {
  const semanticTokens = createSemanticTokens(options);
  const tokens = createTokens(options);
  return definePreset({
    name: "@park-ui/panda-preset",
    theme: {
      extend: {
        breakpoints,
        keyframes,
        recipes,
        semanticTokens,
        slotRecipes,
        textStyles,
        tokens
      }
    },
    conditions,
    globalCss
  });
};
var defaultPreset = createPreset();
export {
  accentColors,
  borderRadii,
  createPreset,
  defaultPreset as default,
  grayColors
};
//# sourceMappingURL=index.mjs.map